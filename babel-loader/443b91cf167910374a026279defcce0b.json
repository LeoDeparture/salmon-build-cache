{"ast":null,"code":"import \"antd/lib/button/style\";\nimport _Button from \"antd/lib/button\";\nimport \"antd/lib/row/style\";\nimport _Row from \"antd/lib/row\";\nimport \"antd/lib/col/style\";\nimport _Col from \"antd/lib/col\";\nimport \"antd/lib/form/style\";\nimport _Form from \"antd/lib/form\";\nimport \"antd/lib/message/style\";\nimport _message from \"antd/lib/message\";\nimport _classCallCheck from \"@babel/runtime-corejs2/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime-corejs2/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime-corejs2/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime-corejs2/helpers/esm/getPrototypeOf\";\nimport _assertThisInitialized from \"@babel/runtime-corejs2/helpers/esm/assertThisInitialized\";\nimport _inherits from \"@babel/runtime-corejs2/helpers/esm/inherits\";\nimport _defineProperty from \"@babel/runtime-corejs2/helpers/esm/defineProperty\";\nimport TextArea from 'antd/lib/input/TextArea';\nimport Router from 'next/router';\nimport React, { Component } from 'react';\nimport styled from 'styled-components';\nimport LimitedInput from '../../../../../components/Input/LimitedInput';\nimport NumberInput from '../../../../../components/Input/NumberInput';\nimport { NoEmptyInputRule, RequiredPositiveIntegerRule } from '../../../../../lib/commonRule';\nimport { formStyle, ItemContent } from '../../../components/CSSComponents';\n\nvar EditPriceInfo =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(EditPriceInfo, _Component);\n\n  function EditPriceInfo(props) {\n    var _this;\n\n    _classCallCheck(this, EditPriceInfo);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(EditPriceInfo).call(this, props));\n\n    _defineProperty(_assertThisInitialized(_this), \"onClickSave\", function (e) {\n      e.preventDefault();\n\n      _this.props.form.validateFields(function (err, values) {\n        if (!err) {\n          var _this$props = _this.props,\n              updatePlan = _this$props.updatePlan,\n              switchEdit = _this$props.switchEdit,\n              keyName = _this$props.keyName;\n          var month = values.month,\n              day = values.day;\n          values.validDuration = month && month === 1000 ? month * 30 : month * 30 + day;\n          delete values.month;\n          delete values.day;\n          var inputKey;\n\n          if (keyName === 'CAREER_PLANNING') {\n            inputKey = 'careerBusinessCareerPlan';\n            values.count = 1;\n          }\n\n          if (keyName === 'SUBSCRIPTION_COURSE') {\n            inputKey = 'careerBusinessSubscriptionCourse';\n          }\n\n          if (keyName === 'PRIVATE_COURSE') {\n            inputKey = 'careerBusinessPrivateCourse';\n          }\n\n          if (keyName === 'GROUP_COURSE') {\n            inputKey = 'careerBusinessGroupCourse';\n          }\n\n          _this.setState({\n            loading: true\n          });\n\n          updatePlan(_defineProperty({\n            id: Router.query.id\n          }, inputKey, values)).then(function () {\n            _message.success('已保存');\n\n            switchEdit();\n          }).finally(function () {\n            _this.setState({\n              loading: false\n            });\n          });\n        }\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"checkMinAndMaxNumber\", function (_rule, _value, callback) {\n      var getFieldValue = _this.props.form.getFieldValue;\n      var dayValue = getFieldValue('day');\n      var monthValue = getFieldValue('month');\n\n      if (!dayValue && !monthValue) {\n        callback(\"\\u6B64\\u5B57\\u6BB5\\u4E0D\\u53EF\\u4E3A\\u7A7A\\uFF0C\\u6700\\u5C11\\u586B\\u5199\\u4E00\\u9879\");\n      }\n\n      callback();\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"validateOtherField\", function (_rule, _value, callback) {\n      var validateFieldsAndScroll = _this.props.form.validateFieldsAndScroll;\n      validateFieldsAndScroll(['month'], {\n        force: true\n      }, function () {\n        return;\n      });\n      callback();\n    });\n\n    _this.state = {\n      loading: false\n    };\n    return _this;\n  }\n\n  _createClass(EditPriceInfo, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var data = this.props.data;\n      var name = data.name,\n          count = data.count,\n          introduction = data.introduction,\n          validDuration = data.validDuration;\n      var month = null;\n      var day = null;\n\n      if (validDuration) {\n        if (validDuration < 30) {\n          day = validDuration;\n          month = null;\n        } else if (validDuration >= 30 && validDuration <= 30000) {\n          day = validDuration % 30 === 0 ? null : validDuration % 30;\n          month = validDuration % 30 === 0 ? validDuration / 30 : (validDuration - day) / 30;\n        }\n      }\n\n      this.props.form.setFieldsValue({\n        name: name,\n        count: count,\n        introduction: introduction,\n        month: month,\n        day: day\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var getFieldDecorator = this.props.form.getFieldDecorator;\n      var _this$props2 = this.props,\n          switchEdit = _this$props2.switchEdit,\n          keyName = _this$props2.keyName;\n      return React.createElement(React.Fragment, null, React.createElement(_Form, {\n        style: formStyle,\n        colon: false\n      }, React.createElement(_Row, {\n        gutter: 24\n      }, React.createElement(_Col, {\n        span: 8\n      }, React.createElement(_Form.Item, {\n        label: \"\\u670D\\u52A1\\u540D\\u79F0\"\n      }, getFieldDecorator('name', {\n        rules: NoEmptyInputRule\n      })(React.createElement(LimitedInput, {\n        limit: 32,\n        placeholder: \"\\u8BF7\\u8F93\\u5165\"\n      })))), React.createElement(_Col, {\n        span: 8\n      }, keyName !== 'CAREER_PLANNING' ? React.createElement(_Form.Item, {\n        label: \"\\u8BFE\\u65F6\\u6570\"\n      }, getFieldDecorator('count', {\n        rules: RequiredPositiveIntegerRule\n      })(React.createElement(NumberInput, {\n        max: 1000,\n        min: 1,\n        placeholder: \"\\u6B63\\u6574\\u6570\\uFF0C\\u6700\\u59271000\",\n        style: {\n          width: '100%'\n        }\n      }))) : React.createElement(_Form.Item, {\n        label: \"\\u670D\\u52A1\\u6B21\\u6570\"\n      }, getFieldDecorator('count')(React.createElement(ItemContent, null, \"1\\u6B21\")))), React.createElement(_Col, {\n        span: 8\n      }, React.createElement(_Form.Item, {\n        label: \"\\u9879\\u76EE\\u6709\\u6548\\u671F\",\n        required: true,\n        style: {\n          margin: 0\n        }\n      }), React.createElement(_Row, {\n        gutter: 8\n      }, React.createElement(_Col, {\n        span: 13\n      }, React.createElement(_Form.Item, null, getFieldDecorator('month', {\n        rules: [{\n          validator: this.checkMinAndMaxNumber\n        }]\n      })(React.createElement(NumberInput, {\n        max: 1000,\n        min: 1,\n        placeholder: \"\\u6700\\u59271000\",\n        style: {\n          width: '77%',\n          marginRight: '8px'\n        }\n      })), React.createElement(\"span\", null, \"\\u4E2A\\u6708\"))), React.createElement(_Col, {\n        span: 11\n      }, React.createElement(_Form.Item, null, getFieldDecorator('day', {\n        rules: [{\n          validator: this.validateOtherField\n        }]\n      })(React.createElement(NumberInput, {\n        max: 30,\n        min: 1,\n        placeholder: \"\\u6700\\u592730\",\n        style: {\n          width: '80%',\n          marginRight: '8px'\n        }\n      })), React.createElement(\"span\", null, \"\\u5929\")))))), React.createElement(_Row, null, React.createElement(_Col, {\n        span: 8\n      }, React.createElement(_Form.Item, {\n        colon: false,\n        label: \"\\u670D\\u52A1\\u4ECB\\u7ECD\"\n      }, getFieldDecorator('introduction')(React.createElement(TextArea, {\n        rows: 3,\n        placeholder: \"\\u8BF7\\u8F93\\u5165\"\n      }))))), React.createElement(Buttons, null, React.createElement(_Button, {\n        onClick: switchEdit,\n        style: {\n          marginRight: 12\n        }\n      }, \"\\u53D6\\u6D88\"), React.createElement(_Button, {\n        type: \"primary\",\n        onClick: this.onClickSave,\n        loading: this.state.loading\n      }, \"\\u4FDD\\u5B58\"))));\n    }\n  }]);\n\n  return EditPriceInfo;\n}(Component);\n\nvar EditPriceInfoForm = _Form.create()(EditPriceInfo);\n\nexport default EditPriceInfoForm;\nvar Buttons = styled.div.withConfig({\n  displayName: \"EditSkills__Buttons\",\n  componentId: \"sc-1yby6uk-0\"\n})([\"margin-bottom:16px;\"]);","map":null,"metadata":{},"sourceType":"module"}