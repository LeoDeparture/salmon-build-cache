{"ast":null,"code":"import \"antd/lib/button/style\";\nimport _Button from \"antd/lib/button\";\nimport _toConsumableArray from \"@babel/runtime-corejs2/helpers/esm/toConsumableArray\";\nimport \"antd/lib/form/style\";\nimport _Form from \"antd/lib/form\";\nimport \"antd/lib/input/style\";\nimport _Input from \"antd/lib/input\";\nimport _classCallCheck from \"@babel/runtime-corejs2/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime-corejs2/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime-corejs2/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime-corejs2/helpers/esm/getPrototypeOf\";\nimport _assertThisInitialized from \"@babel/runtime-corejs2/helpers/esm/assertThisInitialized\";\nimport _inherits from \"@babel/runtime-corejs2/helpers/esm/inherits\";\nimport _defineProperty from \"@babel/runtime-corejs2/helpers/esm/defineProperty\";\nimport \"antd/lib/select/style\";\nimport _Select from \"antd/lib/select\";\nimport React from 'react';\nimport { buttonStyle, ButtonWrapperStyle, ChildTitle, FormStyle, HiddenStyle, requireRule } from '../RootComponent';\nvar Option = _Select.Option;\n\nvar ModuleForm =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(ModuleForm, _React$Component);\n\n  function ModuleForm() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, ModuleForm);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(ModuleForm)).call.apply(_getPrototypeOf2, [this].concat(args)));\n\n    _defineProperty(_assertThisInitialized(_this), \"componentDidMount\", function () {\n      // 默认选择中国区号\n      var phoneNumberCountry = JSON.parse(localStorage.getItem('zhiwen_china_country_data'));\n      var id = phoneNumberCountry.id,\n          countryTelCode = phoneNumberCountry.countryTelCode,\n          countryName = phoneNumberCountry.name;\n      var data = {\n        phoneNumberCountry: {\n          key: \"\".concat(id, \"&\").concat(countryTelCode),\n          label: \"(\".concat(countryTelCode, \")\").concat(countryName)\n        }\n      };\n\n      _this.props.form.setFieldsValue(data);\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"onClickLastStep\", function () {\n      _this.props.toLastStep();\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"onClickNextStep\", function () {\n      _this.props.form.validateFieldsAndScroll({\n        force: true\n      }, function (err, fieldsValue) {\n        if (!err) {\n          var phoneNumberCountry = fieldsValue.phoneNumberCountry;\n          var telCode = phoneNumberCountry.key.split('&')[1];\n          delete fieldsValue.phoneNumberCountry;\n          fieldsValue.studentPhoneNumber = '+' + telCode + ' ' + fieldsValue.studentPhoneNumber;\n\n          _this.props.assignVariables(fieldsValue);\n\n          _this.props.toNextStep();\n        }\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"renderAreaCodeOption\", function () {\n      var telData = JSON.parse(localStorage.getItem('zhiwen_all_country'));\n\n      if (telData && telData.length) {\n        return telData.map(function (item) {\n          var id = item.id,\n              countryTelCode = item.countryTelCode,\n              name = item.name;\n          return React.createElement(_Select.Option, {\n            key: id,\n            value: id + '&' + countryTelCode\n          }, \"(\".concat(countryTelCode, \")\").concat(name));\n        });\n      }\n\n      return [];\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"checkPhoneNumber\", function (_rule, _value, callback) {\n      var getFieldValue = _this.props.form.getFieldValue;\n      var phoneNumberCountry = getFieldValue('phoneNumberCountry');\n      var phoneNumber = getFieldValue('studentPhoneNumber');\n\n      if (!phoneNumber) {\n        callback('请输入手机号');\n      }\n\n      if (!phoneNumberCountry) {\n        callback('请选择区号');\n      }\n\n      callback();\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"checkLocale\", function (_rule, value, callback) {\n      var _this$props$form = _this.props.form,\n          getFieldValue = _this$props$form.getFieldValue,\n          validateFields = _this$props$form.validateFields;\n\n      if (value && getFieldValue('studentPhoneNumber')) {\n        validateFields(['studentPhoneNumber'], {\n          force: true\n        }, function () {\n          return;\n        });\n      }\n\n      callback();\n    });\n\n    return _this;\n  }\n\n  _createClass(ModuleForm, [{\n    key: \"render\",\n    value: function render() {\n      var getFieldDecorator = this.props.form.getFieldDecorator; // 手机区号选择\n\n      var prefixSelector = getFieldDecorator('phoneNumberCountry', {\n        rules: [{\n          validator: this.checkLocale\n        }]\n      })(React.createElement(_Select, {\n        labelInValue: true,\n        style: {\n          width: 140\n        }\n      }, this.renderAreaCodeOption()));\n      return React.createElement(_Form, {\n        style: this.props.hidden ? HiddenStyle : FormStyle\n      }, React.createElement(ChildTitle, null, \"\\u8BF7\\u8BBE\\u7F6E\\u5B66\\u5458\\u4FE1\\u606F\"), React.createElement(_Form.Item, {\n        label: \"\\u59D3\\u540D\"\n      }, getFieldDecorator('studentName', {\n        rules: requireRule\n      })(React.createElement(_Input, {\n        placeholder: \"\\u8BF7\\u786E\\u4FDD\\u4E0E\\u8BC1\\u4EF6\\u59D3\\u540D\\u4E00\\u81F4\"\n      }))), React.createElement(_Form.Item, {\n        label: \"\\u8BC1\\u4EF6\\u53F7\\u7801\"\n      }, getFieldDecorator('studentIDNumber', {\n        rules: [].concat(_toConsumableArray(requireRule), [{\n          pattern: new RegExp('^[A-Za-z0-9]+$'),\n          message: '仅支持数字和字母'\n        }])\n      })(React.createElement(_Input, {\n        placeholder: \"\\u8BF7\\u8F93\\u5165\\u8EAB\\u4EFD\\u8BC1\\u6216\\u62A4\\u7167\\u7B49\\u5408\\u6CD5\\u8BC1\\u4EF6\\u53F7\\u7801\\uFF0C\\u4EC5\\u652F\\u6301\\u6570\\u5B57\\u548C\\u5B57\\u6BCD\"\n      }))), React.createElement(_Form.Item, {\n        label: \"\\u8054\\u7CFB\\u7535\\u8BDD\",\n        required: true\n      }, getFieldDecorator('studentPhoneNumber', {\n        rules: [{\n          validator: this.checkPhoneNumber\n        }]\n      })(React.createElement(_Input, {\n        addonBefore: prefixSelector,\n        placeholder: \"\\u652F\\u6301\\u5168\\u7403\\u56FD\\u5BB6\\u624B\\u673A\\u53F7\\u7801\"\n      }))), React.createElement(_Form.Item, {\n        label: \"\\u90AE\\u7BB1\"\n      }, getFieldDecorator('studentEmail', {\n        rules: [].concat(_toConsumableArray(requireRule), [{\n          type: 'email',\n          message: '请输入正确格式的邮箱'\n        }])\n      })(React.createElement(_Input, {\n        placeholder: \"\\u8BF7\\u8F93\\u5165\"\n      }))), React.createElement(_Form.Item, {\n        label: \"\\u5FAE\\u4FE1\\u53F7\"\n      }, getFieldDecorator('studentWechat')(React.createElement(_Input, {\n        placeholder: \"\\u8BF7\\u8F93\\u5165\"\n      }))), React.createElement(ChildTitle, null, \"\\u8BF7\\u8BBE\\u7F6E\\u8BA2\\u5355\\u4FE1\\u606F\"), React.createElement(_Form.Item, {\n        label: \"\\u8BA2\\u5355\\u6765\\u6E90\",\n        required: true\n      }, getFieldDecorator('orderSource', {\n        initialValue: '职问官网 zhiwen.me'\n      })(React.createElement(_Select, null, React.createElement(Option, {\n        key: \"\\u804C\\u95EE\\u5B98\\u7F51 zhiwen.me\",\n        value: \"\\u804C\\u95EE\\u5B98\\u7F51 zhiwen.me\"\n      }, \"\\u804C\\u95EE\\u5B98\\u7F51 zhiwen.me\")))), React.createElement(_Form.Item, {\n        label: \"\\u8BA2\\u5355\\u53F7\"\n      }, getFieldDecorator('orderId', {\n        rules: requireRule\n      })(React.createElement(_Input, {\n        placeholder: \"\\u8BF7\\u8F93\\u5165\"\n      }))), React.createElement(_Form.Item, {\n        style: ButtonWrapperStyle\n      }, React.createElement(_Button, {\n        style: buttonStyle,\n        onClick: this.onClickLastStep\n      }, \"\\u4E0A\\u4E00\\u6B65\"), React.createElement(_Button, {\n        onClick: this.onClickNextStep,\n        type: \"primary\"\n      }, \"\\u4E0B\\u4E00\\u6B65\")));\n    }\n  }]);\n\n  return ModuleForm;\n}(React.Component);\n\nvar StudentAndOrder = _Form.create()(ModuleForm);\n\nexport default StudentAndOrder;","map":null,"metadata":{},"sourceType":"module"}