{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime-corejs2/regenerator\";\nimport _toConsumableArray from \"@babel/runtime-corejs2/helpers/esm/toConsumableArray\";\nimport _asyncToGenerator from \"@babel/runtime-corejs2/helpers/esm/asyncToGenerator\";\nimport \"antd/lib/message/style\";\nimport _message from \"antd/lib/message\";\nimport \"antd/lib/modal/style\";\nimport _Modal from \"antd/lib/modal\";\nimport _classCallCheck from \"@babel/runtime-corejs2/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime-corejs2/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime-corejs2/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime-corejs2/helpers/esm/getPrototypeOf\";\nimport _assertThisInitialized from \"@babel/runtime-corejs2/helpers/esm/assertThisInitialized\";\nimport _inherits from \"@babel/runtime-corejs2/helpers/esm/inherits\";\nimport _defineProperty from \"@babel/runtime-corejs2/helpers/esm/defineProperty\";\nimport \"antd/lib/radio/style\";\nimport _Radio from \"antd/lib/radio\";\nimport \"antd/lib/layout/style\";\nimport _Layout from \"antd/lib/layout\";\nimport flatten from 'lodash/flatten';\nimport React from 'react';\nimport Loading from '../../../../components/Loading';\nimport TableFooter from '../../../../components/Table/TableFooter';\nimport { FlexContentCenter } from '../../../../lib/commonCss';\nimport { parseErrorCode } from '../../../../lib/commonJs';\nimport { formatToAsia } from '../../../../lib/date';\nimport { handleConfirmOtherError } from '../../../../lib/handleError';\nimport PrivateCourseManagementAppointmentContent from '../components/PrivateCourseAppointmentManagementContent';\nimport { claimPrivateCourseAppointmentMutation } from './MutationPrivateCourseAppointment';\nimport QueryListPrivateCourseAppointments, { listPrivateCourseAppointmentsQuery } from './QueryListPrivateCourseAppointments';\nvar Content = _Layout.Content;\nvar RadioGroup = _Radio.Group;\nvar getDataNumber = 20;\n\nvar PrivateCourseAppointmentManagementContainer =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(PrivateCourseAppointmentManagementContainer, _React$Component);\n\n  function PrivateCourseAppointmentManagementContainer() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, PrivateCourseAppointmentManagementContainer);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(PrivateCourseAppointmentManagementContainer)).call.apply(_getPrototypeOf2, [this].concat(args)));\n\n    _defineProperty(_assertThisInitialized(_this), \"state\", {\n      endPageData: true,\n      idFilter: undefined,\n      loading: false,\n      orderBy: 'confirmAt_ASC',\n      industryOrderSelected: undefined,\n      takenOrderSelected: undefined,\n      radioSelected: 'all',\n      pageInfo: undefined,\n      statusFilterValue: []\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"renderModal\", function (id) {\n      _Modal.confirm({\n        cancelText: '取消',\n        centered: true,\n        iconType: 'none',\n        okText: \"\\u786E\\u8BA4\\u63A5\\u53D7\",\n        okType: 'primary',\n        title: \"\\u786E\\u8BA4\\u8981\\u63A5\\u53D7\\u6B64\\u8F85\\u5BFC\\u9884\\u7EA6\\u5417\\uFF1F\",\n        content: React.createElement(\"div\", {\n          style: {\n            fontSize: '15px',\n            margin: '0 0 10px -38px'\n          }\n        }, \"\\u63A5\\u53D7\\u540E\\u5176\\u4ED6\\u5DE5\\u4F5C\\u4F19\\u4F34\\u5C06\\u65E0\\u6CD5\\u518D\\u770B\\u5230\\u6B64\\u6761\\u4EFB\\u52A1\\uFF0C\\u4F60\\u5C06\\u662F\\u6B64\\u4EFB\\u52A1\\u7684\\u8D1F\\u8D23\\u4EBA\\u3002\"),\n        onOk: _this.handleMutation.bind(_assertThisInitialized(_this), id)\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"renderFooter\", function () {\n      return _this.state.pageInfo.hasNextPage && React.createElement(TableFooter, {\n        isLoading: _this.state.loading,\n        onClickLink: _this.handleQueryMore\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"handleMutation\", function (id) {\n      return _this.client.mutate({\n        mutation: claimPrivateCourseAppointmentMutation,\n        variables: {\n          input: {\n            id: id\n          }\n        }\n      }).then(function () {\n        _message.success('已成功接受此辅导预约任务');\n\n        _this.refetch(_this.getQueryByTab());\n      }).catch(function (error) {\n        if (parseErrorCode(error) === 'StatusChangeError') {\n          _Modal.error({\n            centered: true,\n            title: '无法接受此预约任务',\n            content: '当前预约任务已被认领或已取消，已无法接受。'\n          });\n\n          _this.refetch(_this.getQueryByTab());\n        }\n\n        if (handleConfirmOtherError(error)) {\n          _message.error('操作失败');\n        }\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"handleQueryMore\",\n    /*#__PURE__*/\n    _asyncToGenerator(\n    /*#__PURE__*/\n    _regeneratorRuntime.mark(function _callee() {\n      var variables;\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _this.setState({\n                loading: true\n              });\n\n              if (!_this.state.loading) {\n                _context.next = 3;\n                break;\n              }\n\n              return _context.abrupt(\"return\");\n\n            case 3:\n              if (!_this.state.pageInfo.hasNextPage) {\n                _context.next = 8;\n                break;\n              }\n\n              variables = _this.getQueryByTab();\n              variables.input.after = _this.state.pageInfo.endCursor;\n              _context.next = 8;\n              return _this.fetchMore({\n                updateQuery: function updateQuery(prev, _ref2) {\n                  var fetchMoreResult = _ref2.fetchMoreResult;\n\n                  if (!fetchMoreResult) {\n                    return prev;\n                  }\n\n                  var prevData = prev.privateCourseAppointments.edges;\n                  var fetchResult = fetchMoreResult.privateCourseAppointments.edges;\n                  fetchMoreResult.privateCourseAppointments.edges = [].concat(_toConsumableArray(prevData), _toConsumableArray(fetchResult));\n                  return fetchMoreResult;\n                },\n                variables: variables\n              }).then(function (result) {\n                if (result.data) {\n                  _this.setListData('getMore', result.data);\n\n                  _this.setState({\n                    loading: false\n                  });\n                }\n              }).catch(function (e) {\n                _this.setState({\n                  loading: false\n                });\n\n                if (handleConfirmOtherError(e)) {\n                  _message.error('操作失败');\n                }\n              });\n\n            case 8:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    })));\n\n    _defineProperty(_assertThisInitialized(_this), \"handleRadioChange\",\n    /*#__PURE__*/\n    function () {\n      var _ref3 = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee2(e) {\n        var value, operatorAccountId, variables, result;\n        return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                value = e.target.value;\n\n                _this.setState({\n                  radioSelected: value\n                });\n\n                variables = _this.getQueryByTab();\n\n                if (value === 'mine') {\n                  operatorAccountId = localStorage.getItem('misViewer') ? JSON.parse(localStorage.getItem('misViewer')).operatorAccount.id : null;\n                  variables.input.where.studentAccount = {\n                    operatorAccount: {\n                      id: operatorAccountId\n                    }\n                  };\n                }\n\n                _context2.next = 6;\n                return _this.client.query({\n                  query: listPrivateCourseAppointmentsQuery,\n                  variables: variables\n                });\n\n              case 6:\n                result = _context2.sent;\n\n                _this.setListData('modifyState', result.data, operatorAccountId, _this.state.orderBy);\n\n              case 8:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2);\n      }));\n\n      return function (_x) {\n        return _ref3.apply(this, arguments);\n      };\n    }());\n\n    _defineProperty(_assertThisInitialized(_this), \"handleTableChange\",\n    /*#__PURE__*/\n    function () {\n      var _ref4 = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee3(_pagination, filters, sorter) {\n        var antdOrder, tabSelected, order, variables, result;\n        return _regeneratorRuntime.wrap(function _callee3$(_context3) {\n          while (1) {\n            switch (_context3.prev = _context3.next) {\n              case 0:\n                antdOrder = sorter.order;\n                tabSelected = _this.props.tabSelected;\n\n                if (tabSelected === 'industry') {\n                  _this.setState({\n                    industryOrderSelected: antdOrder\n                  });\n                }\n\n                if (tabSelected === 'taken') {\n                  _this.setState({\n                    takenOrderSelected: antdOrder\n                  });\n                }\n\n                if (filters.status && tabSelected === 'taken') {\n                  _this.setState({\n                    statusFilterValue: filters.status\n                  });\n                }\n\n                if (tabSelected === 'taken') {\n                  if (antdOrder === 'descend') {\n                    order = 'confirmAt_DESC';\n                  }\n\n                  if (antdOrder === 'ascend') {\n                    order = 'confirmAt_ASC';\n                  }\n                } else {\n                  order = antdOrder === 'ascend' ? 'createdAt_ASC' : antdOrder === 'descend' ? 'createdAt_DESC' : 'confirmAt_ASC';\n                }\n\n                variables = _this.getQueryByTab();\n                variables.input.orderBy = order;\n                _context3.next = 10;\n                return _this.client.query({\n                  query: listPrivateCourseAppointmentsQuery,\n                  variables: variables,\n                  fetchPolicy: 'network-only'\n                });\n\n              case 10:\n                result = _context3.sent;\n\n                _this.setListData('modifyState', result.data, _this.state.idFilter, order);\n\n              case 12:\n              case \"end\":\n                return _context3.stop();\n            }\n          }\n        }, _callee3);\n      }));\n\n      return function (_x2, _x3, _x4) {\n        return _ref4.apply(this, arguments);\n      };\n    }());\n\n    _defineProperty(_assertThisInitialized(_this), \"setListData\", function (type, data) {\n      var id = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : undefined;\n      var order = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : 'confirmAt_ASC';\n      var listData = [];\n\n      if (!data.privateCourseAppointments) {\n        _this.setState({\n          pageInfo: {\n            endCursor: '',\n            hasNextPage: false,\n            startCursor: '',\n            hasPreviousPage: false\n          }\n        });\n\n        return null;\n      }\n\n      var dataArr = data.privateCourseAppointments.edges;\n\n      if (dataArr.length) {\n        dataArr.map(function (item) {\n          listData.push({\n            confirmAt: formatToAsia(item.node.confirmAt, 'YYYY/MM/DD HH:mm'),\n            createdAt: formatToAsia(item.node.createdAt, 'YYYY/MM/DD HH:mm'),\n            id: item.node.id,\n            key: item.node.id,\n            company: item.node.intentionCompany ? item.node.intentionCompany.companyName : '',\n            industry: item.node.intentionIndustry ? item.node.intentionIndustry.name : '',\n            taken: item.node.privateCourse ? item.node.privateCourse.name : '',\n            operating: item.node.isTaken ? '查看详情' : '接受',\n            status: item.node.status.name,\n            isOverdue: item.node.isOverdue\n          });\n        });\n      }\n\n      if (type === 'modifyState') {\n        _this.setState({\n          orderBy: order,\n          idFilter: id\n        });\n      }\n\n      if (type === 'handleData') {\n        return listData;\n      }\n\n      return listData;\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"storePageInfo\", function (data) {\n      if (!data.privateCourseAppointments) return;\n      var pageInfo = data.privateCourseAppointments.pageInfo;\n\n      _this.setState({\n        pageInfo: pageInfo\n      });\n    });\n\n    return _this;\n  }\n\n  _createClass(PrivateCourseAppointmentManagementContainer, [{\n    key: \"getQueryByTab\",\n    // tslint:disable-next-line: cognitive-complexity\n    value: function getQueryByTab() {\n      var tabSelected = this.props.tabSelected;\n      var keymap = [{\n        key: '待分配导师',\n        value: ['UNCONFIRMED']\n      }, {\n        key: '已分配导师 - 待确认',\n        value: ['CONFIRMED']\n      }, {\n        key: '已确认',\n        value: ['COMPLETED']\n      }, {\n        key: '已变更服务时间 - 待学员确认',\n        value: ['PENDING']\n      }, {\n        key: '已取消',\n        value: ['UNRESPONSED', 'EXPIRED', 'CANCELED']\n      }];\n      var statusFilterValue = this.state.statusFilterValue;\n      var tempArr = [];\n      statusFilterValue.forEach(function (v) {\n        keymap.forEach(function (status) {\n          if (v === status.key) {\n            tempArr.push(status.value);\n          }\n        });\n      });\n      var statusFilterVariables = flatten(tempArr).map(function (key) {\n        return {\n          status: {\n            key: key\n          }\n        };\n      }); // 根据不同 tabSelected 使用不同 query 变量\n\n      var variables;\n\n      if (tabSelected === 'company') {\n        variables = {\n          input: {\n            first: getDataNumber,\n            orderBy: this.state.orderBy,\n            where: {\n              intentionIndustry: null,\n              isTaken: false,\n              OR: statusFilterVariables.length ? statusFilterVariables : undefined\n            }\n          }\n        };\n      }\n\n      if (tabSelected === 'industry') {\n        variables = {\n          input: {\n            first: getDataNumber,\n            orderBy: this.state.orderBy,\n            where: {\n              intentionCompany: null,\n              isTaken: false,\n              OR: statusFilterVariables.length ? statusFilterVariables : undefined\n            }\n          }\n        };\n      }\n\n      if (tabSelected === 'taken') {\n        variables = {\n          input: {\n            first: getDataNumber,\n            orderBy: this.state.orderBy,\n            where: {\n              operatorAccount: {\n                id: localStorage.getItem('misViewer') ? JSON.parse(localStorage.getItem('misViewer')).operatorAccount.id : null\n              },\n              OR: statusFilterVariables.length ? statusFilterVariables : undefined\n            }\n          }\n        };\n      }\n\n      if (this.state.idFilter) {\n        variables.input.where.studentAccount = {\n          operatorAccount: {\n            id: this.state.idFilter\n          }\n        };\n      }\n\n      return variables;\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var variables = this.getQueryByTab();\n      var statusFilterValue = this.state.statusFilterValue;\n      return React.createElement(Content, {\n        style: {\n          backgroundColor: '#fff',\n          margin: '24px',\n          padding: '24px',\n          display: 'flex',\n          flexDirection: 'column'\n        }\n      }, this.props.tabSelected !== 'taken' && React.createElement(RadioGroup, {\n        onChange: this.handleRadioChange,\n        value: this.state.radioSelected,\n        style: {\n          marginBottom: '16px'\n        }\n      }, React.createElement(_Radio, {\n        value: 'all'\n      }, \"\\u5168\\u90E8\"), React.createElement(_Radio, {\n        value: 'mine'\n      }, \"\\u53EA\\u770B\\u6211\\u7684\\u5B66\\u5458\")), React.createElement(QueryListPrivateCourseAppointments, {\n        query: listPrivateCourseAppointmentsQuery,\n        variables: variables,\n        onCompleted: this.storePageInfo,\n        fetchPolicy: \"network-only\"\n      }, function (_ref5) {\n        var data = _ref5.data,\n            refetch = _ref5.refetch,\n            loading = _ref5.loading,\n            error = _ref5.error,\n            client = _ref5.client,\n            fetchMore = _ref5.fetchMore,\n            networkStatus = _ref5.networkStatus;\n        _this2.refetch = refetch;\n        _this2.client = client;\n        _this2.fetchMore = fetchMore;\n\n        if (loading && ![2, 3, 4].includes(networkStatus)) {\n          return React.createElement(FlexContentCenter, null, React.createElement(Loading, null));\n        }\n\n        if (error) {\n          return null;\n        }\n\n        return React.createElement(PrivateCourseManagementAppointmentContent, {\n          listData: _this2.setListData('handleData', data),\n          tabSelected: _this2.props.tabSelected,\n          industryOrderSelected: _this2.state.industryOrderSelected,\n          takenOrderSelected: _this2.state.takenOrderSelected,\n          footer: _this2.renderFooter,\n          mutationHandler: _this2.renderModal,\n          orderHandler: _this2.handleTableChange,\n          statusFilterValue: statusFilterValue\n        });\n      }));\n    }\n  }]);\n\n  return PrivateCourseAppointmentManagementContainer;\n}(React.Component);\n\nexport default PrivateCourseAppointmentManagementContainer;","map":null,"metadata":{},"sourceType":"module"}