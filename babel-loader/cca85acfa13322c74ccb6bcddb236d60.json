{"ast":null,"code":"import _extends from \"@babel/runtime-corejs2/helpers/esm/extends\";\nimport \"antd/lib/button/style\";\nimport _Button from \"antd/lib/button\";\nimport _classCallCheck from \"@babel/runtime-corejs2/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime-corejs2/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime-corejs2/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime-corejs2/helpers/esm/getPrototypeOf\";\nimport _assertThisInitialized from \"@babel/runtime-corejs2/helpers/esm/assertThisInitialized\";\nimport _inherits from \"@babel/runtime-corejs2/helpers/esm/inherits\";\nimport _defineProperty from \"@babel/runtime-corejs2/helpers/esm/defineProperty\";\nimport Router from 'next/router';\nimport React, { Component } from 'react';\nimport styled from 'styled-components';\nimport Loading from '../../../../../components/Loading';\nimport { PageContent } from '../../../../../components/PageLayout';\nimport DeletedAction from '../../../components/DeletedAction';\nimport DetailPageHeader from '../../../components/DetailsPageHead';\nimport OfflineAction from '../../../components/OfflineAction';\nimport OnlineAction from '../../../components/OnlineAction';\nimport StatusBadge from '../../../components/StatusBadge';\nimport { Item, ItemContent, ItemTitle } from '../../../CSSComponents';\nimport { GetSkillChapterById, QueryGetSkillChapterById } from './QueryGetSkillChapterById';\nimport SectionTable from './SectionTable';\n\nvar SectionTableContainer =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(SectionTableContainer, _Component);\n\n  function SectionTableContainer(props) {\n    var _this;\n\n    _classCallCheck(this, SectionTableContainer);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(SectionTableContainer).call(this, props));\n\n    _defineProperty(_assertThisInitialized(_this), \"bindTableRef\", function (e) {\n      _this.tableRef = e;\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"showSectionNumber\", function () {\n      return React.createElement(\"div\", null, \"\\u6B64\\u7AE0\\u8282\\u5185\\u5C0F\\u8282()\");\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"storePageInfo\", function (data) {\n      if (!data.sectionTable.edges.length) return;\n      var pageInfo = data.sectionTable.pageInfo;\n\n      _this.setState({\n        pageInfo: pageInfo\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"footer\", function () {\n      return React.createElement(\"div\", null);\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"renderHeadContent\", function (skillChapter) {\n      return React.createElement(React.Fragment, null, React.createElement(Item, {\n        style: {\n          width: '70%'\n        }\n      }, React.createElement(ItemTitle, null, \"\\u7AE0\\u8282\\u7B80\\u4ECB\\uFF1A\"), React.createElement(ItemContent, null, skillChapter.description)));\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"jumpToEditChapter\", function () {\n      var seriesId = Router.query.seriesId;\n      var chapterId = Router.query.id;\n      Router.push(\"/skill-course/create-chapter/edit/\".concat(seriesId, \"/\").concat(chapterId));\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"routerBack\", function () {\n      var courseId = Router.query.courseId;\n      var seriesId = Router.query.seriesId;\n      Router.push(\"/skill-course/chapter/\".concat(seriesId, \"/\").concat(courseId));\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"renderGroupBtn\", function (chapter) {\n      var key = chapter.status.key,\n          id = chapter.id;\n      var isOnline = key === 'ONLINE';\n      var actionProps = {\n        type: 'chapter',\n        btnType: 'button',\n        id: id,\n        getDataById: true,\n        variables: _this.variables\n      };\n      return React.createElement(React.Fragment, null, React.createElement(_Button, {\n        onClick: _this.jumpToEditChapter\n      }, \"\\u7F16\\u8F91\"), isOnline ? React.createElement(OfflineAction, _extends({}, actionProps, {\n        styles: OnOrOffLineBtnStyle\n      })) : React.createElement(OnlineAction, _extends({}, actionProps, {\n        styles: OnOrOffLineBtnStyle\n      })), React.createElement(DeletedAction, _extends({}, actionProps, {\n        removeSuccessCallback: _this.routerBack\n      })));\n    });\n\n    _this.state = {\n      loading: false,\n      pageInfo: undefined\n    };\n    _this.variables = {\n      input: {\n        id: Router.query.id\n      }\n    };\n    return _this;\n  }\n\n  _createClass(SectionTableContainer, [{\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var courseId = Router.query.courseId;\n      var seriesId = Router.query.seriesId;\n      var breadcrumb = [{\n        name: '课程管理',\n        link: '/skill-course/courses'\n      }, {\n        name: '课程详情',\n        link: \"/skill-course/series/\".concat(courseId)\n      }, {\n        name: '周期详情',\n        link: \"/skill-course/chapter/\".concat(seriesId, \"/\").concat(courseId)\n      }, {\n        name: '章节详情'\n      }];\n      return React.createElement(GetSkillChapterById, {\n        query: QueryGetSkillChapterById,\n        variables: this.variables,\n        fetchPolicy: \"network-only\"\n      }, function (_ref) {\n        var data = _ref.data,\n            client = _ref.client,\n            refetch = _ref.refetch,\n            loading = _ref.loading,\n            networkStatus = _ref.networkStatus,\n            error = _ref.error;\n        _this2.client = client;\n        _this2.refetch = refetch;\n\n        if (loading && ![2, 3, 4].includes(networkStatus)) {\n          return React.createElement(Loading, null);\n        }\n\n        if (error) {\n          return null;\n        }\n\n        var skillChapter = data.skillChapter;\n        return React.createElement(React.Fragment, null, React.createElement(Content, null, React.createElement(DetailPageHeader, {\n          key: Math.random(),\n          breadcrumb: breadcrumb,\n          text: skillChapter.name,\n          buttons: _this2.renderGroupBtn(skillChapter),\n          badge: React.createElement(StatusBadge, {\n            currentStatus: skillChapter.status,\n            styles: {\n              marginLeft: 12\n            }\n          }),\n          content: _this2.renderHeadContent(skillChapter)\n        })), React.createElement(PageContent, null, React.createElement(SectionTable, {\n          key: Math.random(),\n          skillSectionsCount: skillChapter.skillSectionsCount\n        })));\n      });\n    }\n  }]);\n\n  return SectionTableContainer;\n}(Component);\n\nexport { SectionTableContainer as default };\nvar OnOrOffLineBtnStyle = {\n  margin: '0 12px'\n};\nvar Content = styled.div.withConfig({\n  displayName: \"SectionTableContainer__Content\",\n  componentId: \"sc-1o39yfj-0\"\n})([\"padding:24px 32px;background:#fff;\"]);","map":null,"metadata":{},"sourceType":"module"}