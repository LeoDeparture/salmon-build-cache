{"ast":null,"code":"import \"antd/lib/modal/style\";\nimport _Modal from \"antd/lib/modal\";\nimport _objectSpread from \"@babel/runtime-corejs2/helpers/esm/objectSpread\";\nimport \"antd/lib/icon/style\";\nimport _Icon from \"antd/lib/icon\";\nimport \"antd/lib/button/style\";\nimport _Button from \"antd/lib/button\";\nimport \"antd/lib/input/style\";\nimport _Input from \"antd/lib/input\";\nimport \"antd/lib/badge/style\";\nimport _Badge from \"antd/lib/badge\";\nimport \"antd/lib/avatar/style\";\nimport _Avatar from \"antd/lib/avatar\";\nimport \"antd/lib/message/style\";\nimport _message from \"antd/lib/message\";\nimport _regeneratorRuntime from \"@babel/runtime-corejs2/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime-corejs2/helpers/esm/asyncToGenerator\";\nimport _classCallCheck from \"@babel/runtime-corejs2/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime-corejs2/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime-corejs2/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime-corejs2/helpers/esm/getPrototypeOf\";\nimport _assertThisInitialized from \"@babel/runtime-corejs2/helpers/esm/assertThisInitialized\";\nimport _inherits from \"@babel/runtime-corejs2/helpers/esm/inherits\";\nimport _defineProperty from \"@babel/runtime-corejs2/helpers/esm/defineProperty\";\nimport { addMinutes } from 'date-fns';\nimport Router from 'next/router';\nimport React from 'react';\nimport styled from 'styled-components';\nimport { FlexCenterColumn, FlexContentCenterV, FlexDisplay, FlexDisplayBetween, FlexDisplayColumn, TextContent } from '../../../lib/commonCss';\nimport { parseErrorCode } from '../../../lib/commonJs';\nimport { getTutorByTutorNo } from '../../privateCourse/privateCourseAppointmentDetails/containers/QueryGetTutorByTutorNo';\nimport { addGroupCourseSlotTutor, changeGroupCourseSlotTutor } from '../containers/MutationChangeGroupCourseSlotTutor';\nimport AudioOrVideo from './AudioOrVideo';\nimport ClassLink from './ClassLink';\nimport StudentDetail from './StudentDetail';\nimport TitleComponent from './TitleComponent';\nimport TutorDetail from './TutorDetail';\n\nvar GroupCourseComponent =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(GroupCourseComponent, _React$Component);\n\n  function GroupCourseComponent() {\n    var _getPrototypeOf2,\n        _this2 = this;\n\n    var _this;\n\n    _classCallCheck(this, GroupCourseComponent);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(GroupCourseComponent)).call.apply(_getPrototypeOf2, [this].concat(args)));\n\n    _defineProperty(_assertThisInitialized(_this), \"state\", {\n      disabled: false,\n      visible: _this.props.visible,\n      searchLoading: false,\n      tutorActionType: null,\n      value: null,\n      searchData: null,\n      isSearched: false,\n      modal: {\n        title: null,\n        content: null,\n        okText: null,\n        button: null\n      }\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"componentWillReceiveProps\", function (nextProps) {\n      _this.setState({\n        visible: nextProps.visible\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"getData\", function (m, n) {\n      _this.setState(_defineProperty({}, m, n));\n\n      if (m === 'visible') {\n        _this.props.getData('visible', n);\n      }\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"inputChange\", function (e) {\n      var value = e.target.value.trim();\n\n      if (value === '') {\n        _this.setState({\n          value: value,\n          isSearched: false,\n          searchData: null\n        });\n\n        return;\n      }\n\n      _this.setState({\n        value: value\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"handleSearch\",\n    /*#__PURE__*/\n    _asyncToGenerator(\n    /*#__PURE__*/\n    _regeneratorRuntime.mark(function _callee() {\n      var tutorNo;\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              tutorNo = _this.state.value;\n\n              _this.setState({\n                searchLoading: true\n              });\n\n              return _context.abrupt(\"return\", _this.props.client.query({\n                fetchPolicy: 'network-only',\n                query: getTutorByTutorNo,\n                variables: {\n                  input: {\n                    tutorNo: tutorNo\n                  }\n                }\n              }).then(function (res) {\n                var result = res.data.getTutorByTutorNo;\n\n                if (result === null) {\n                  _this.setState({\n                    searchData: null,\n                    searchLoading: false,\n                    isSearched: true\n                  });\n\n                  return;\n                }\n\n                _this.setState({\n                  searchData: res.data.getTutorByTutorNo,\n                  searchLoading: false,\n                  disabled: !result.inCollaboration,\n                  isSearched: true\n                });\n              }));\n\n            case 3:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    })));\n\n    _defineProperty(_assertThisInitialized(_this), \"copyUrl\", function (queryName, studentId) {\n      return _this.props.client.query({\n        fetchPolicy: 'network-only',\n        query: queryName,\n        variables: {\n          input: {\n            id: Router.router.query.id,\n            studentId: studentId\n          }\n        }\n      }).then(function (res) {\n        if (res.data) {\n          return res;\n        } else {\n          throw new Error('Empty data!');\n        }\n      }).catch(function (err) {\n        if (parseErrorCode(err) === 'UrlIsNull') {\n          _message.destroy();\n\n          _message.error('操作失败,请稍后重试!');\n        }\n\n        return err;\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"Description\", function (_ref2) {\n      var term = _ref2.term,\n          children = _ref2.children;\n      return React.createElement(FlexDisplay, null, React.createElement(TextContent, {\n        color: \"#B9B9B9\",\n        style: {\n          wordBreak: 'keep-all'\n        }\n      }, term), React.createElement(TextContent, {\n        color: \"#B9B9B9\"\n      }, children));\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"renderCardWarp\", function () {\n      var searchData = _this.state.searchData;\n      var lastWorkExperience = searchData && searchData.lastWorkExperience;\n\n      if (searchData) {\n        return React.createElement(CardWarp, null, React.createElement(FlexDisplay, {\n          style: {\n            width: '48px',\n            marginRight: '8px'\n          }\n        }, React.createElement(_Avatar, {\n          size: 48,\n          icon: \"user\",\n          src: searchData.avatar\n        })), React.createElement(FlexCenterColumn, null, React.createElement(FlexContentCenterV, null, React.createElement(\"h4\", {\n          style: {\n            margin: '0 12px 0 0'\n          }\n        }, searchData.nickname), React.createElement(_Badge, {\n          status: searchData.inCollaboration ? 'success' : 'default',\n          text: searchData.inCollaboration ? '正常合作' : '停止合作'\n        })), React.createElement(_this2.Description, {\n          term: \"ID\\uFF1A\"\n        }, searchData.tutorNo), React.createElement(_this2.Description, {\n          term: \"\\u6700\\u8FD1\\u4E00\\u6B21\\u5DE5\\u4F5C\\u4F01\\u4E1A\\uFF1A\"\n        }, lastWorkExperience && lastWorkExperience.company ? lastWorkExperience.company.companyName : lastWorkExperience && lastWorkExperience.foreignCompany)));\n      }\n\n      return React.createElement(CardWarp, null, React.createElement(NoTutorWrap, null, \"\\u8BE5\\u5BFC\\u5E08\\u4E0D\\u5B58\\u5728\"));\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"searchTutorContent\", function () {\n      var _this$state = _this.state,\n          value = _this$state.value,\n          searchLoading = _this$state.searchLoading,\n          isSearched = _this$state.isSearched;\n      return React.createElement(FlexDisplayColumn, {\n        style: {\n          minHeight: '194px'\n        }\n      }, React.createElement(FlexDisplayBetween, null, React.createElement(TextContent, {\n        color: \"#000\"\n      }, \"\\u5206\\u914D\\u5BFC\\u5E08\"), React.createElement(TextContent, {\n        fontSize: \"12px\",\n        color: \"#b9b9b9\"\n      }, \"\\u4EC5\\u652F\\u6301\\u6B63\\u5E38\\u5408\\u4F5C\\u72B6\\u6001\\u7684\\u5BFC\\u5E08\")), React.createElement(FlexDisplay, {\n        style: {\n          margin: '4px 0'\n        }\n      }, React.createElement(_Input, {\n        placeholder: \"\\u901A\\u8FC7\\u5BFC\\u5E08ID\\u641C\\u7D22\",\n        value: _this.state.value,\n        autoFocus: true,\n        style: {\n          marginRight: '8px'\n        },\n        onChange: _this.inputChange\n      }), React.createElement(_Button, {\n        disabled: value !== null ? !Boolean(value.length) : true,\n        loading: searchLoading,\n        onClick: _this.handleSearch\n      }, \"\\u641C\\u7D22\")), isSearched && React.createElement(_this2.renderCardWarp, null));\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"linkBut\", function () {\n      _this.props.getData('visible', false);\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"afterClose\", function () {\n      _this.setState({\n        searchData: null,\n        value: null,\n        disabled: false,\n        isSearched: false\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"confirmContent\", function () {\n      return React.createElement(\"div\", {\n        style: {\n          minHeight: '150px'\n        }\n      }, React.createElement(\"p\", null, \"\\u4EC5\\u505A\\u5206\\u914D\\uFF0C\\u7CFB\\u7EDF\\u72B6\\u6001\\u5C06\\u53D8\\u4E3A\\u5DF2\\u5206\\u914D\\u5BFC\\u5E08\\u3002\"));\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"confirmTitle\", function () {\n      return React.createElement(FlexDisplay, null, React.createElement(_Icon, {\n        type: \"arrow-left\",\n        onClick: _this.onBack,\n        style: {\n          fontSize: '22px',\n          cursor: 'pointer'\n        }\n      }), React.createElement(\"div\", {\n        style: {\n          marginLeft: '15px'\n        }\n      }, \"\\u786E\\u8BA4\\u5206\\u914D\\u6B64\\u5BFC\\u5E08\\u4E48\\uFF1F\"));\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"onBack\", function () {\n      var tutorActionType = _this.state.tutorActionType;\n      var title = tutorActionType === 'add' ? '为此小班课排期分配导师' : '为此小班课排期变更导师';\n      var modalObj = {\n        title: title,\n        content: 'searchTutorContent',\n        okText: '分配导师',\n        button: 'confirmBut'\n      };\n\n      _this.getData('modal', modalObj);\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"confirmBut\", function () {\n      var searchData = _this.state.searchData;\n\n      if (searchData) {\n        var ModalTitle = function ModalTitle() {\n          return React.createElement(FlexDisplay, null, React.createElement(_Icon, {\n            type: \"arrow-left\",\n            onClick: _this.onBack,\n            style: {\n              fontSize: '22px',\n              cursor: 'pointer'\n            }\n          }), React.createElement(\"div\", {\n            style: {\n              marginLeft: '15px'\n            }\n          }, \"\\u786E\\u8BA4\\u5206\\u914D\\u6B64\\u5BFC\\u5E08\\u4E48\\uFF1F\"));\n        };\n\n        var modalObj = {\n          title: React.createElement(ModalTitle, null),\n          content: 'confirmContent',\n          okText: '分配导师',\n          button: 'distributionTutor'\n        };\n\n        _this.getData('modal', modalObj);\n\n        return;\n      }\n\n      _message.destroy();\n\n      _message.warn('请先选择导师');\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"distributionTutor\",\n    /*#__PURE__*/\n    _asyncToGenerator(\n    /*#__PURE__*/\n    _regeneratorRuntime.mark(function _callee2() {\n      var tutorActionType, id, tutorId, variables, filterFun;\n      return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              tutorActionType = _this.state.tutorActionType;\n              id = _this.props.data.id;\n              tutorId = _this.state.searchData.id;\n              variables = {\n                input: {\n                  id: id,\n                  tutorId: tutorId\n                }\n              };\n\n              _this.props.getData('loading', true);\n\n              filterFun = function filterFun(dataName, data, result2) {\n                data.getGroupCourseSlotById.tutor = _objectSpread({}, result2.data[dataName].tutor);\n                data.getGroupCourseSlotById.status = _objectSpread({}, result2.data[dataName].status);\n                return data;\n              }; // 添加导师\n\n\n              if (!(tutorActionType === 'add')) {\n                _context2.next = 10;\n                break;\n              }\n\n              _context2.next = 9;\n              return _this.props.mutations(addGroupCourseSlotTutor, variables, filterFun.bind(_assertThisInitialized(_this), 'addGroupCourseSlotTutor')).then(function (result) {\n                if (result.data) {\n                  _message.success('已成功分配导师');\n                }\n              });\n\n            case 9:\n              return _context2.abrupt(\"return\");\n\n            case 10:\n              _context2.next = 12;\n              return _this.props.mutations(changeGroupCourseSlotTutor, variables, filterFun.bind(_assertThisInitialized(_this), 'changeGroupCourseSlotTutor')).then(function (result1) {\n                if (result1.data) {\n                  _message.success('已成功变更导师');\n                }\n              });\n\n            case 12:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, _callee2);\n    })));\n\n    _defineProperty(_assertThisInitialized(_this), \"modalContent\", function () {\n      var modal = _this.state.modal;\n      return _this[modal.content]();\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"onClickModalOk\",\n    /*#__PURE__*/\n    _asyncToGenerator(\n    /*#__PURE__*/\n    _regeneratorRuntime.mark(function _callee3() {\n      var modal;\n      return _regeneratorRuntime.wrap(function _callee3$(_context3) {\n        while (1) {\n          switch (_context3.prev = _context3.next) {\n            case 0:\n              modal = _this.state.modal;\n              return _context3.abrupt(\"return\", _this[modal.button]());\n\n            case 2:\n            case \"end\":\n              return _context3.stop();\n          }\n        }\n      }, _callee3);\n    })));\n\n    _defineProperty(_assertThisInitialized(_this), \"getDeadLine\", function (time, minutes) {\n      return new Date(addMinutes(time, minutes)).valueOf();\n    });\n\n    return _this;\n  }\n\n  _createClass(GroupCourseComponent, [{\n    key: \"render\",\n    value: function render() {\n      var _this$props = this.props,\n          data = _this$props.data,\n          mutations = _this$props.mutations,\n          loading = _this$props.loading;\n      var _this$state2 = this.state,\n          visible = _this$state2.visible,\n          disabled = _this$state2.disabled,\n          modal = _this$state2.modal;\n      var time = data.time;\n      var isOffEndTime = new Date().valueOf() >= new Date(addMinutes(data.time, -data.appointDeadline)).valueOf();\n      var afterClassDate = new Date().valueOf() >= new Date(time).valueOf();\n      return React.createElement(FlexCenterColumn, null, React.createElement(TitleComponent, {\n        getData: this.getData,\n        data: data,\n        mutations: mutations\n      }), React.createElement(Wrap, null, React.createElement(TutorDetail, {\n        getData: this.getData,\n        data: data\n      }), React.createElement(StudentDetail, {\n        getData: this.getData,\n        data: data,\n        copyUrl: this.copyUrl,\n        mutations: mutations,\n        afterClassDate: afterClassDate,\n        isOffEndTime: isOffEndTime\n      }), !data.cancelReason && React.createElement(ClassLink, {\n        data: data,\n        getData: this.getData,\n        afterClassDate: afterClassDate,\n        isOffEndTime: isOffEndTime\n      }), React.createElement(AudioOrVideo, {\n        data: data,\n        mutations: mutations\n      })), React.createElement(_Modal, {\n        destroyOnClose: true,\n        closable: false,\n        afterClose: this.afterClose,\n        title: modal.title,\n        visible: visible,\n        cancelText: \"\\u53D6\\u6D88\",\n        confirmLoading: loading,\n        okButtonProps: {\n          disabled: disabled\n        },\n        okText: modal.okText,\n        onCancel: this.linkBut,\n        onOk: this.onClickModalOk\n      }, React.createElement(this.modalContent, null)));\n    }\n  }]);\n\n  return GroupCourseComponent;\n}(React.Component);\n\nexport default GroupCourseComponent;\nvar Wrap = styled(FlexDisplay).withConfig({\n  displayName: \"GroupCourseComponent__Wrap\",\n  componentId: \"fk7t9j-0\"\n})([\"flex-direction:column;padding:24px;\"]);\nvar CardWarp = styled(FlexDisplay).withConfig({\n  displayName: \"GroupCourseComponent__CardWarp\",\n  componentId: \"fk7t9j-1\"\n})([\"min-width:450px;padding:21px 14px;margin-top:8px;background:#fff;border:1px solid rgba(0,0,0,0.15);border-radius:5px;box-shadow:0 0 7px #b9b9b9;\"]);\nvar NoTutorWrap = styled.div.withConfig({\n  displayName: \"GroupCourseComponent__NoTutorWrap\",\n  componentId: \"fk7t9j-2\"\n})([\"display:flex;align-items:center;flex:1;justify-content:center;color:#b9b9b9;\"]);","map":null,"metadata":{},"sourceType":"module"}