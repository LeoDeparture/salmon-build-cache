{"ast":null,"code":"import _classCallCheck from \"@babel/runtime-corejs2/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime-corejs2/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime-corejs2/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime-corejs2/helpers/esm/getPrototypeOf\";\nimport _assertThisInitialized from \"@babel/runtime-corejs2/helpers/esm/assertThisInitialized\";\nimport _inherits from \"@babel/runtime-corejs2/helpers/esm/inherits\";\nimport _defineProperty from \"@babel/runtime-corejs2/helpers/esm/defineProperty\";\nimport React from 'react';\nimport styled from 'styled-components';\n\nvar ProcessIndicator =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(ProcessIndicator, _React$Component);\n\n  function ProcessIndicator() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, ProcessIndicator);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(ProcessIndicator)).call.apply(_getPrototypeOf2, [this].concat(args)));\n\n    _defineProperty(_assertThisInitialized(_this), \"stepTxt\", function () {\n      var templateType = _this.props.templateType;\n\n      if (templateType === 'alpha') {\n        return ['协议基础信息', '学员及订单', '服务期', '目标岗位范围', '费用相关', '预览并确认'];\n      }\n\n      if (templateType === 'elite') {\n        return ['协议基础信息', '学员及订单', '服务期', '费用相关', '预览并确认'];\n      }\n\n      return [];\n    });\n\n    return _this;\n  }\n\n  _createClass(ProcessIndicator, [{\n    key: \"render\",\n    value: function render() {\n      var step = this.props.step;\n      var stepTxt = this.stepTxt();\n      return stepTxt.map(function (v, i) {\n        var txtStyle = step === i ? ActiveTxtStyle : {};\n        var pointStyle = step === i ? ActivePointStyle : {};\n        return React.createElement(StepWrapper, {\n          key: 'stepIndicator' + i\n        }, React.createElement(StepPoint, {\n          style: pointStyle\n        }, i + 1), React.createElement(StepTxt, {\n          style: txtStyle\n        }, v), React.createElement(StepLine, {\n          hidden: i === stepTxt.length - 1\n        }));\n      });\n    }\n  }]);\n\n  return ProcessIndicator;\n}(React.Component);\n\nexport default ProcessIndicator;\nvar StepWrapper = styled.div.withConfig({\n  displayName: \"ProcessIndicator__StepWrapper\",\n  componentId: \"hj2fgu-0\"\n})([\"display:inline-flex;align-items:center;height:32px;margin-right:8px;&:last-child{margin-right:0;}\"]);\nvar StepPoint = styled.div.withConfig({\n  displayName: \"ProcessIndicator__StepPoint\",\n  componentId: \"hj2fgu-1\"\n})([\"width:32px;height:32px;margin-right:8px;font-size:18px;line-height:32px;color:rgba(0,0,0,0.25);text-align:center;border:solid 1px rgba(0,0,0,0.15);border-radius:16px;\"]);\nvar ActivePointStyle = {\n  backgroundColor: '#5c86fb',\n  color: '#fff'\n};\nvar StepTxt = styled.span.withConfig({\n  displayName: \"ProcessIndicator__StepTxt\",\n  componentId: \"hj2fgu-2\"\n})([\"margin-right:8px;font-size:16px;line-height:24px;color:#b5b5b5;\"]);\nvar ActiveTxtStyle = {\n  color: 'rgba(0, 0, 0, 0.65)'\n};\nvar StepLine = styled.div.withConfig({\n  displayName: \"ProcessIndicator__StepLine\",\n  componentId: \"hj2fgu-3\"\n})([\"width:44px;height:1px;background-color:#d5d5d5;\"]);","map":null,"metadata":{},"sourceType":"module"}