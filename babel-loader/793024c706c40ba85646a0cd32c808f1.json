{"ast":null,"code":"import _classCallCheck from \"@babel/runtime-corejs2/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime-corejs2/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime-corejs2/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime-corejs2/helpers/esm/getPrototypeOf\";\nimport _assertThisInitialized from \"@babel/runtime-corejs2/helpers/esm/assertThisInitialized\";\nimport _inherits from \"@babel/runtime-corejs2/helpers/esm/inherits\";\nimport _defineProperty from \"@babel/runtime-corejs2/helpers/esm/defineProperty\";\nimport React, { Component } from 'react';\nimport BlockHeader from '../BlockHeader';\nimport EditJobService from './EditJobService';\nimport JobService from './JobService';\n\nvar IndexJobService =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(IndexJobService, _Component);\n\n  function IndexJobService(props) {\n    var _this;\n\n    _classCallCheck(this, IndexJobService);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(IndexJobService).call(this, props));\n\n    _defineProperty(_assertThisInitialized(_this), \"switchEdit\", function () {\n      var isEditStatus = _this.state.isEditStatus;\n\n      _this.setState({\n        isEditStatus: !isEditStatus\n      });\n    });\n\n    _this.state = {\n      isEditStatus: false\n    };\n    return _this;\n  }\n\n  _createClass(IndexJobService, [{\n    key: \"render\",\n    value: function render() {\n      var isEditStatus = this.state.isEditStatus;\n      var _this$props = this.props,\n          servicePlan = _this$props.servicePlan,\n          updatePlan = _this$props.updatePlan,\n          fillStatus = _this$props.fillStatus;\n      var jobServiceFilled = fillStatus.jobServiceFilled;\n      return React.createElement(React.Fragment, null, React.createElement(BlockHeader, {\n        title: \"\\u6C42\\u804C\\u670D\\u52A1\",\n        tagText: jobServiceFilled ? '' : '未补全',\n        showBtn: false\n      }), !isEditStatus ? React.createElement(JobService, {\n        servicePlan: servicePlan,\n        switchEdit: this.switchEdit\n      }) : React.createElement(EditJobService, {\n        servicePlan: servicePlan,\n        updatePlan: updatePlan,\n        editStatus: isEditStatus,\n        switchEdit: this.switchEdit\n      }));\n    }\n  }]);\n\n  return IndexJobService;\n}(Component);\n\nexport { IndexJobService as default };","map":null,"metadata":{},"sourceType":"module"}