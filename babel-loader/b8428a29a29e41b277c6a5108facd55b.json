{"ast":null,"code":"import \"antd/lib/modal/style\";\nimport _Modal from \"antd/lib/modal\";\nimport \"antd/lib/input/style\";\nimport _Input from \"antd/lib/input\";\nimport _classCallCheck from \"@babel/runtime-corejs2/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime-corejs2/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime-corejs2/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime-corejs2/helpers/esm/getPrototypeOf\";\nimport _assertThisInitialized from \"@babel/runtime-corejs2/helpers/esm/assertThisInitialized\";\nimport _inherits from \"@babel/runtime-corejs2/helpers/esm/inherits\";\nimport _defineProperty from \"@babel/runtime-corejs2/helpers/esm/defineProperty\";\nimport React from 'react';\nimport ModalTitle from '../../../../components/ModalTitle';\n\nvar RenameFolderPop =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(RenameFolderPop, _React$Component);\n\n  function RenameFolderPop() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, RenameFolderPop);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(RenameFolderPop)).call.apply(_getPrototypeOf2, [this].concat(args)));\n\n    _defineProperty(_assertThisInitialized(_this), \"state\", {\n      folderName: '',\n      visible: false,\n      loading: false\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"handleOk\", function () {\n      _this.showLoading();\n\n      _this.props.updateFolder({\n        name: _this.state.folderName\n      }, 'rename', _this.hideLoading, _this.hidePop);\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"handleCancel\", function () {\n      _this.hidePop();\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"showLoading\", function () {\n      _this.setState({\n        loading: true\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"hideLoading\", function () {\n      _this.setState({\n        loading: false\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"showPop\", function () {\n      _this.setState({\n        visible: true,\n        folderName: _this.props.folderName\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"hidePop\", function () {\n      _this.setState({\n        visible: false\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"updateInput\", function (e) {\n      _this.setState({\n        folderName: e.target.value\n      });\n    });\n\n    return _this;\n  }\n\n  _createClass(RenameFolderPop, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.props.onRef(this);\n      this.setState({\n        folderName: this.props.folderName\n      });\n    } // 点击确定\n\n  }, {\n    key: \"render\",\n    value: function render() {\n      var nonDeletableTitle = React.createElement(ModalTitle, {\n        iconColor: \"#faad14\",\n        iconType: \"exclamation-circle\",\n        txt: \"\\u6682\\u65F6\\u65E0\\u6CD5\\u91CD\\u547D\\u540D\"\n      });\n      return this.props.canRename ? React.createElement(_Modal, {\n        title: \"\\u91CD\\u547D\\u540D\\u6587\\u4EF6\\u5939\",\n        visible: this.state.visible,\n        onOk: this.handleOk,\n        onCancel: this.handleCancel,\n        closable: false,\n        okText: '确定',\n        cancelText: '取消',\n        okButtonProps: {\n          disabled: !this.state.folderName,\n          loading: this.state.loading\n        },\n        maskClosable: false\n      }, React.createElement(_Input, {\n        placeholder: '请输入文件夹名称',\n        onChange: this.updateInput,\n        value: this.state.folderName\n      })) : React.createElement(_Modal, {\n        title: nonDeletableTitle,\n        visible: this.state.visible,\n        onOk: this.handleCancel,\n        closable: false,\n        cancelButtonProps: {\n          hidden: true\n        },\n        okText: '我知道了'\n      }, \"\\u62B1\\u6B49\\uFF0C\\u6B64\\u6587\\u4EF6\\u5939\\u5DF2\\u6709\\u5171\\u4EAB\\u8005\\uFF0C\\u65E0\\u6CD5\\u91CD\\u547D\\u540D\\u3002\\u8BF7\\u5148\\u79FB\\u9664\\u6B64\\u6587\\u4EF6\\u5939\\u7684\\u5171\\u4EAB\\u8005\\u3002\");\n    }\n  }]);\n\n  return RenameFolderPop;\n}(React.Component);\n\nexport default RenameFolderPop;","map":null,"metadata":{},"sourceType":"module"}