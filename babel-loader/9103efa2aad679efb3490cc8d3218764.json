{"ast":null,"code":"import \"antd/lib/modal/style\";\nimport _Modal from \"antd/lib/modal\";\nimport \"antd/lib/input/style\";\nimport _Input from \"antd/lib/input\";\nimport \"antd/lib/icon/style\";\nimport _Icon from \"antd/lib/icon\";\nimport \"antd/lib/button/style\";\nimport _Button from \"antd/lib/button\";\nimport _toConsumableArray from \"@babel/runtime-corejs2/helpers/esm/toConsumableArray\";\nimport _regeneratorRuntime from \"@babel/runtime-corejs2/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime-corejs2/helpers/esm/asyncToGenerator\";\nimport _classCallCheck from \"@babel/runtime-corejs2/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime-corejs2/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime-corejs2/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime-corejs2/helpers/esm/getPrototypeOf\";\nimport _assertThisInitialized from \"@babel/runtime-corejs2/helpers/esm/assertThisInitialized\";\nimport _inherits from \"@babel/runtime-corejs2/helpers/esm/inherits\";\nimport _defineProperty from \"@babel/runtime-corejs2/helpers/esm/defineProperty\";\nimport uniqBy from 'lodash/uniqBy';\nimport Link from 'next/link';\nimport React from 'react';\nimport styled from 'styled-components';\nimport FileListContainer from './containers/FileListContainer';\nimport FolderListContainer from './containers/FolderListContainer';\n\nvar FilePicker =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(FilePicker, _React$Component);\n\n  function FilePicker() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, FilePicker);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(FilePicker)).call.apply(_getPrototypeOf2, [this].concat(args)));\n\n    _defineProperty(_assertThisInitialized(_this), \"state\", {\n      keyword: '',\n      // 搜索文件夹关键词\n      visible: false,\n      // 控制弹窗显隐\n      selectedFolderId: '',\n      // 选择的文件夹id\n      selectedFileLinks: [],\n      // 选择的文件ids\n      folderRefreshing: false,\n      // 文件夹列表正在刷新中\n      fileRefreshing: false,\n      // 文件列表正在刷新中\n      selectedMembers: [],\n      // 已经选择的成员\n      step: 0,\n      // 0 选择阶段 1 发送阶段\n      loading: false // 执行发送请求中\n\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"onRefFolderListComponent\", function (ref) {\n      _this.folderListComponent = ref;\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"onRefFileListComponent\", function (ref) {\n      _this.fileListComponent = ref;\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"handleOk\",\n    /*#__PURE__*/\n    _asyncToGenerator(\n    /*#__PURE__*/\n    _regeneratorRuntime.mark(function _callee() {\n      var _this$props, getSelected, mode, sendFile, step, _this$state, selectedMembers, selectedFileLinks, files, studentsAccounts;\n\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _this$props = _this.props, getSelected = _this$props.getSelected, mode = _this$props.mode, sendFile = _this$props.sendFile;\n              step = _this.state.step;\n\n              if (!(mode === 'select')) {\n                _context.next = 7;\n                break;\n              }\n\n              if (getSelected) {\n                getSelected(_this.state.selectedFileLinks);\n              }\n\n              _this.hidePop();\n\n              _context.next = 19;\n              break;\n\n            case 7:\n              if (!(mode === 'select-and-send')) {\n                _context.next = 19;\n                break;\n              }\n\n              if (step === 0) {\n                _this.setState({\n                  step: 1\n                });\n              }\n\n              if (!(step === 1)) {\n                _context.next = 19;\n                break;\n              }\n\n              if (sendFile) {\n                _context.next = 12;\n                break;\n              }\n\n              return _context.abrupt(\"return\");\n\n            case 12:\n              // 开始loading\n              _this.setState({\n                loading: true\n              }); // 获取variables\n\n\n              _this$state = _this.state, selectedMembers = _this$state.selectedMembers, selectedFileLinks = _this$state.selectedFileLinks;\n              files = selectedFileLinks.map(function (v) {\n                return {\n                  id: v.id\n                };\n              });\n              studentsAccounts = selectedMembers.map(function (v) {\n                return {\n                  id: v.id\n                };\n              }); // 执行发送\n\n              _context.next = 18;\n              return sendFile({\n                files: files,\n                studentsAccounts: studentsAccounts\n              });\n\n            case 18:\n              // 关闭loading和弹窗\n              _this.setState({\n                loading: false\n              }, _this.hidePop);\n\n            case 19:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    })));\n\n    _defineProperty(_assertThisInitialized(_this), \"handleCancel\", function () {\n      _this.hidePop();\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"showPop\", function () {\n      _this.setState({\n        visible: true\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"hidePop\", function () {\n      // 重置所有状态\n      _this.setState({\n        visible: false,\n        keyword: '',\n        selectedFolderId: '',\n        selectedFileLinks: [],\n        folderRefreshing: false,\n        fileRefreshing: false,\n        selectedMembers: [],\n        step: 0,\n        loading: false // 执行发送请求中\n\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"updateInput\", function (e) {\n      _this.setState({\n        keyword: e.target.value\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"storeFolderId\", function (id) {\n      _this.setState({\n        selectedFolderId: id,\n        selectedFileLinks: []\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"storeFileLink\", function (fileLink) {\n      var selectType = _this.props.selectType;\n\n      var fileLinks = _toConsumableArray(_this.state.selectedFileLinks);\n\n      var ids = fileLinks.map(function (v) {\n        return v.id;\n      });\n      var id = fileLink.id;\n\n      if (ids.includes(id)) {\n        fileLinks = fileLinks.filter(function (v) {\n          return v.id !== id;\n        });\n      } else if (selectType === 'single' && fileLinks.length === 1) {\n        fileLinks[0] = fileLink;\n      } else {\n        fileLinks.push(fileLink);\n      }\n\n      _this.setState({\n        selectedFileLinks: fileLinks\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"onClickFolderRefresh\", function () {\n      _this.setState({\n        selectedFolderId: '',\n        folderRefreshing: true\n      });\n\n      _this.folderListComponent.refetch();\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"onClickFileRefresh\", function () {\n      _this.setState({\n        fileRefreshing: true\n      });\n\n      _this.fileListComponent.refetch();\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"stopFolderLoading\", function () {\n      _this.setState({\n        folderRefreshing: false\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"stopFileLoading\", function () {\n      _this.setState({\n        fileRefreshing: false\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"createFileFilter\", function () {\n      // 文件格式 word, excel, ppt, image, audio, video, pdf, other\n      var _this$props2 = _this.props,\n          fileType = _this$props2.fileType,\n          selectType = _this$props2.selectType;\n      var docTypes = ['word', 'excel', 'ppt', 'pdf'];\n      var videoType = ['video'];\n      var audioType = ['audio'];\n      var imageType = ['image'];\n      var otherType = ['other'];\n      var mediaTypes = [].concat(docTypes, videoType, audioType);\n      var allTypes = [].concat(_toConsumableArray(mediaTypes), otherType, imageType);\n      var typeList = allTypes;\n      var typeTxt = '文件';\n      var typeArr = ['任意'];\n\n      if (fileType === 'doc-only') {\n        typeList = docTypes;\n        typeTxt = '文档';\n        typeArr = ['文档'];\n      }\n\n      if (fileType === 'image-only') {\n        typeList = imageType;\n        typeTxt = '图片';\n        typeArr = ['图片'];\n      }\n\n      if (fileType === 'video-only') {\n        typeList = videoType;\n        typeTxt = '视频';\n        typeArr = ['视频'];\n      }\n\n      if (fileType === 'audio-only') {\n        typeList = audioType;\n        typeTxt = '音频';\n        typeArr = ['音频'];\n      }\n\n      if (fileType === 'media-only') {\n        typeList = mediaTypes;\n        typeTxt = '媒体';\n        typeArr = ['视频', '音频', '文档'];\n      }\n\n      if (fileType === 'audio-video-only') {\n        typeList = [].concat(videoType, audioType);\n        typeTxt = '音视频';\n        typeArr = ['音视频'];\n      }\n\n      var hint = '';\n\n      if (selectType === 'single') {\n        hint = \"\\u4EC5\\u53EF\\u6DFB\\u52A0 1 \\u4E2A\".concat(typeArr.join('/'), \"\\u7C7B\\u578B\\u7684\\u6587\\u4EF6\");\n      }\n\n      if (selectType === 'multiple') {\n        hint = \"\\u53EF\\u6DFB\\u52A0\\u591A\\u4E2A\".concat(typeArr.join('/'), \"\\u7C7B\\u578B\\u7684\\u6587\\u4EF6\");\n      }\n\n      return {\n        typeList: typeList,\n        typeTxt: typeTxt,\n        hint: hint\n      };\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"onClickBack\", function () {\n      _this.setState({\n        step: 0\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"onClickMemberBtn\", function (member, isAdd) {\n      var selectedMembers = _toConsumableArray(_this.state.selectedMembers);\n\n      if (isAdd) {\n        selectedMembers.unshift(member);\n        selectedMembers = uniqBy(selectedMembers, 'id');\n      } else {\n        selectedMembers = selectedMembers.filter(function (v) {\n          return v.id !== member.id;\n        });\n      }\n\n      _this.setState({\n        selectedMembers: selectedMembers\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"renderStudents\", function (data, isAdd) {\n      if (data.length === 0) {\n        return null;\n      }\n\n      var Member = function Member(props) {\n        var member = props.member;\n        var id = member.id,\n            studentNo = member.studentNo;\n        var _member$account$perso = member.account.person,\n            nickname = _member$account$perso.nickname,\n            avatar = _member$account$perso.avatar;\n        return React.createElement(MemberContainer, null, React.createElement(\"img\", {\n          style: avatarStyle,\n          src: avatar || '/static/default_avatar.png',\n          alt: \"avatar\"\n        }), React.createElement(MemberInfoContainer, null, React.createElement(\"h1\", null, nickname), React.createElement(\"h2\", null, \"ID: \", studentNo)), React.createElement(_Button, {\n          style: RemoveBtnStyle,\n          \"data-id\": id,\n          onClick: _this.onClickMemberBtn.bind(_assertThisInitialized(_this), member, isAdd),\n          size: \"small\"\n        }, isAdd ? '添加' : '移除'));\n      };\n\n      return data.map(function (v) {\n        var id = v.id;\n        return React.createElement(Member, {\n          key: id,\n          member: v\n        });\n      });\n    });\n\n    return _this;\n  }\n\n  _createClass(FilePicker, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var onRef = this.props.onRef;\n\n      if (onRef) {\n        onRef(this);\n      }\n    } // Ref\n\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this$state2 = this.state,\n          keyword = _this$state2.keyword,\n          selectedFolderId = _this$state2.selectedFolderId,\n          selectedFileLinks = _this$state2.selectedFileLinks,\n          folderRefreshing = _this$state2.folderRefreshing,\n          fileRefreshing = _this$state2.fileRefreshing,\n          step = _this$state2.step,\n          visible = _this$state2.visible;\n      var mode = this.props.mode;\n\n      var _this$createFileFilte = this.createFileFilter(),\n          typeList = _this$createFileFilte.typeList,\n          typeTxt = _this$createFileFilte.typeTxt,\n          hint = _this$createFileFilte.hint; // 弹窗 Footer\n\n\n      var footer = React.createElement(Footer, null, React.createElement(Link, {\n        href: \"/file-center\"\n      }, React.createElement(\"a\", {\n        target: \"_blank\",\n        rel: \"noreferrer\"\n      }, \"\\u524D\\u5F80\\u6587\\u4EF6\\u4E2D\\u5FC3\")), React.createElement(Buttons, null, React.createElement(_Button, {\n        onClick: this.handleCancel\n      }, \"\\u53D6\\u6D88\"), React.createElement(_Button, {\n        onClick: this.handleOk,\n        type: \"primary\",\n        disabled: selectedFileLinks.length === 0\n      }, mode === 'select-and-send' ? '下一步' : '确认选择')));\n\n      if (step === 0) {\n        return React.createElement(_Modal, {\n          bodyStyle: ModalBodyStyle,\n          visible: visible,\n          footer: footer,\n          closable: false,\n          destroyOnClose: true,\n          maskClosable: false,\n          width: 967\n        }, visible && React.createElement(React.Fragment, null, React.createElement(Half, null, React.createElement(TitleWrapper, null, React.createElement(Title, null, \"\\u6587\\u4EF6\\u5939\"), React.createElement(Subtitle, null, \"\\u76EE\\u524D\\u4EC5\\u652F\\u6301\\u4ECE\\u6587\\u4EF6\\u5939\\u4E2D\\u9009\\u62E9\\u6587\\u4EF6\"), React.createElement(_Icon, {\n          onClick: folderRefreshing ? null : this.onClickFolderRefresh,\n          type: \"sync\",\n          style: RefreshIconStyle,\n          spin: folderRefreshing\n        })), React.createElement(InputWrapper, null, React.createElement(_Input, {\n          placeholder: \"\\u641C\\u7D22\\u6587\\u4EF6\\u5939\\u540D\\u79F0\",\n          onChange: this.updateInput,\n          value: keyword\n        })), React.createElement(ChildrenContainer, null, React.createElement(FolderListContainer, {\n          onRef: this.onRefFolderListComponent,\n          keyword: keyword,\n          storeFolderId: this.storeFolderId,\n          selectedFolderId: selectedFolderId,\n          stopLoading: this.stopFolderLoading\n        }))), React.createElement(Half, null, selectedFolderId && React.createElement(React.Fragment, null, React.createElement(TitleWrapper, null, React.createElement(Title, null, typeTxt), React.createElement(Subtitle, null, hint), React.createElement(_Icon, {\n          onClick: fileRefreshing ? null : this.onClickFileRefresh,\n          type: \"sync\",\n          style: RefreshIconStyle,\n          spin: fileRefreshing\n        })), React.createElement(FileWrapper, null, React.createElement(FileListContainer, {\n          selectedFolderId: selectedFolderId,\n          selectedFileLinks: selectedFileLinks,\n          onRef: this.onRefFileListComponent,\n          storeFileLink: this.storeFileLink,\n          stopLoading: this.stopFileLoading,\n          typeList: typeList,\n          typeTxt: typeTxt\n        }))))));\n      }\n\n      if (step === 1) {\n        var studentData = this.props.studentData;\n        var _this$state3 = this.state,\n            selectedMembers = _this$state3.selectedMembers,\n            loading = _this$state3.loading;\n        return React.createElement(_Modal, {\n          bodyStyle: ModalBodyStyle,\n          visible: this.state.visible,\n          onOk: this.handleOk,\n          onCancel: this.handleCancel,\n          closable: false,\n          destroyOnClose: true,\n          maskClosable: false,\n          okText: \"\\u53D1\\u9001\\u6587\\u4EF6\",\n          cancelText: \"\\u53D6\\u6D88\",\n          okButtonProps: {\n            loading: loading,\n            disabled: selectedMembers.length === 0\n          }\n        }, React.createElement(Header, null, React.createElement(_Icon, {\n          onClick: this.onClickBack,\n          type: \"arrow-left\",\n          style: ArrowIconStyle\n        }), React.createElement(HeaderTitle, null, \"\\u5C06\\u6240\\u9009\\u6587\\u4EF6\\u53D1\\u9001\\u7ED9\\u5B66\\u5458\")), React.createElement(Body, null, React.createElement(TitleContainer, null, React.createElement(Title, null, \"\\u6DFB\\u52A0\\u5B66\\u5458\"), React.createElement(Subtitle, null, \"\\u4EC5\\u652F\\u6301\\u6B64\\u6392\\u671F\\u5185\\u7684\\u5B66\\u5458\")), React.createElement(MembersContainer, null, this.renderStudents(studentData, true)), React.createElement(Label, null, \"\\u4EE5\\u4E0B\\u5B66\\u5458\\u5C06\\u6536\\u5230\\u6240\\u9009\\u6587\\u4EF6\"), React.createElement(MembersContainer, null, this.renderStudents(selectedMembers, false))));\n      }\n\n      return null;\n    }\n  }]);\n\n  return FilePicker;\n}(React.Component);\n\n_defineProperty(FilePicker, \"defaultProps\", {\n  fileType: 'all',\n  selectType: 'single',\n  mode: 'select',\n  studentData: [],\n  sendFile: function sendFile() {}\n});\n\nexport default FilePicker;\nvar ModalBodyStyle = {\n  padding: 0\n};\nvar Half = styled.div.withConfig({\n  displayName: \"FilePicker__Half\",\n  componentId: \"fkg27o-0\"\n})([\"position:relative;bottom:-6px;display:inline-block;width:50%;height:100%;padding:24px 0 0 24px;overflow:hidden;vertical-align:top;&:first-child{border-right:1px solid #e8e8e8;}\"]);\nvar InputWrapper = styled.div.withConfig({\n  displayName: \"FilePicker__InputWrapper\",\n  componentId: \"fkg27o-1\"\n})([\"padding-right:24px;margin:16px 0;\"]);\nvar TitleWrapper = styled.div.withConfig({\n  displayName: \"FilePicker__TitleWrapper\",\n  componentId: \"fkg27o-2\"\n})([\"position:relative;\"]);\nvar Title = styled.span.withConfig({\n  displayName: \"FilePicker__Title\",\n  componentId: \"fkg27o-3\"\n})([\"margin-right:12px;font-size:16px;line-height:24px;color:rgba(0,0,0,0.85);\"]);\nvar RefreshIconStyle = {\n  fontSize: '16px',\n  float: 'right',\n  marginRight: '28px',\n  cursor: 'pointer'\n};\nvar Subtitle = styled.span.withConfig({\n  displayName: \"FilePicker__Subtitle\",\n  componentId: \"fkg27o-4\"\n})([\"font-size:12px;line-height:22px;color:#b9b9b9;\"]);\nvar ChildrenContainer = styled.div.withConfig({\n  displayName: \"FilePicker__ChildrenContainer\",\n  componentId: \"fkg27o-5\"\n})([\"height:400px;overflow-y:scroll;border-radius:4px;\"]);\nvar FileWrapper = styled.div.withConfig({\n  displayName: \"FilePicker__FileWrapper\",\n  componentId: \"fkg27o-6\"\n})([\"height:400px;margin-top:64px;overflow-y:scroll;border-radius:4px;\"]);\nvar Label = styled.p.withConfig({\n  displayName: \"FilePicker__Label\",\n  componentId: \"fkg27o-7\"\n})([\"margin:0;margin-bottom:8px;\"]); // 发送弹窗\n\nvar Header = styled.div.withConfig({\n  displayName: \"FilePicker__Header\",\n  componentId: \"fkg27o-8\"\n})([\"position:relative;padding:20px 24px;\"]);\nvar HeaderTitle = styled.span.withConfig({\n  displayName: \"FilePicker__HeaderTitle\",\n  componentId: \"fkg27o-9\"\n})([\"font-size:16px;line-height:22px;\"]);\nvar Body = styled.div.withConfig({\n  displayName: \"FilePicker__Body\",\n  componentId: \"fkg27o-10\"\n})([\"position:relative;padding:14px 24px;\"]);\nvar Footer = styled.div.withConfig({\n  displayName: \"FilePicker__Footer\",\n  componentId: \"fkg27o-11\"\n})([\"display:flex;align-items:center;justify-content:space-between;height:50px;padding-left:6px;\"]);\nvar Buttons = styled.div.withConfig({\n  displayName: \"FilePicker__Buttons\",\n  componentId: \"fkg27o-12\"\n})([\"position:relative;display:flex;align-items:center;height:100%;\"]);\nvar ArrowIconStyle = {\n  color: '#4a4a4a',\n  fontSize: '22px',\n  marginRight: '15px',\n  lineHeight: '22px'\n};\nvar MembersContainer = styled.div.withConfig({\n  displayName: \"FilePicker__MembersContainer\",\n  componentId: \"fkg27o-13\"\n})([\"height:224px;margin-bottom:24px;overflow-y:scroll;border:solid 1px rgba(0,0,0,0.15);border-radius:4px;\"]);\nvar MemberContainer = styled.div.withConfig({\n  displayName: \"FilePicker__MemberContainer\",\n  componentId: \"fkg27o-14\"\n})([\"display:flex;align-items:center;height:66px;padding:14px;\"]);\nvar TitleContainer = styled.div.withConfig({\n  displayName: \"FilePicker__TitleContainer\",\n  componentId: \"fkg27o-15\"\n})([\"display:flex;align-items:center;\"]); // 用户姓名和邮箱\n\nvar MemberInfoContainer = styled.div.withConfig({\n  displayName: \"FilePicker__MemberInfoContainer\",\n  componentId: \"fkg27o-16\"\n})([\"flex:1;margin-left:8px;h1{margin-bottom:0;font-size:14px;line-height:20px;color:#4a4a4a;}h2{margin-bottom:0;font-size:12px;line-height:18px;color:rgba(74,74,74,0.5);}\"]);\nvar RemoveBtnStyle = {\n  marginLeft: '10px'\n};\nvar avatarStyle = {\n  width: 38,\n  height: 38,\n  borderRadius: 19\n};","map":null,"metadata":{},"sourceType":"module"}