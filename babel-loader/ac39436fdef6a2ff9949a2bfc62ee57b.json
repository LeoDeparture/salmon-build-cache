{"ast":null,"code":"import _taggedTemplateLiteral from \"@babel/runtime-corejs2/helpers/esm/taggedTemplateLiteral\";\n\nfunction _templateObject3() {\n  var data = _taggedTemplateLiteral([\"\\n  mutation deleteServiceCatalog($id: ID!) {\\n    serviceCatalog: deleteServiceCatalog(id: $id) {\\n      ...serviceCatalog\\n    }\\n  }\\n  \", \"\\n\"]);\n\n  _templateObject3 = function _templateObject3() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject2() {\n  var data = _taggedTemplateLiteral([\"\\n  mutation updateServiceCatalog($name: String!, $id: ID!) {\\n    serviceCatalog: updateServiceCatalog(name: $name, id: $id) {\\n      ...serviceCatalog\\n    }\\n  }\\n  \", \"\\n\"]);\n\n  _templateObject2 = function _templateObject2() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject() {\n  var data = _taggedTemplateLiteral([\"\\n  mutation createServiceCatalog($input: String!) {\\n    serviceCatalog: createServiceCatalog(name: $input) {\\n      ...serviceCatalog\\n    }\\n  }\\n  \", \"\\n\"]);\n\n  _templateObject = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n\nimport gql from 'graphql-tag';\nimport { FragmentServiceCatalog } from '../../Fragments';\nexport var MutationCreateServiceCatalog = gql(_templateObject(), FragmentServiceCatalog);\nexport var MutationUpdateServiceCatalog = gql(_templateObject2(), FragmentServiceCatalog);\nexport var MutationDeleteServiceCatalog = gql(_templateObject3(), FragmentServiceCatalog);","map":null,"metadata":{},"sourceType":"module"}