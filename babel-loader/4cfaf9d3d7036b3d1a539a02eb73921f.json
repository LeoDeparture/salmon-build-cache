{"ast":null,"code":"import \"antd/lib/form/style\";\nimport _Form from \"antd/lib/form\";\nimport _parseInt from \"@babel/runtime-corejs2/core-js/parse-int\";\nimport _toConsumableArray from \"@babel/runtime-corejs2/helpers/esm/toConsumableArray\";\nimport _classCallCheck from \"@babel/runtime-corejs2/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime-corejs2/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime-corejs2/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime-corejs2/helpers/esm/getPrototypeOf\";\nimport _assertThisInitialized from \"@babel/runtime-corejs2/helpers/esm/assertThisInitialized\";\nimport _inherits from \"@babel/runtime-corejs2/helpers/esm/inherits\";\nimport _defineProperty from \"@babel/runtime-corejs2/helpers/esm/defineProperty\";\nimport \"antd/lib/tag/style\";\nimport _Tag from \"antd/lib/tag\";\nimport \"antd/lib/radio/style\";\nimport _Radio from \"antd/lib/radio\";\nimport { uniq, uniqBy } from 'lodash';\nimport React, { Component } from 'react';\nimport styled from 'styled-components';\nimport NumberInput from '../../../../components/Input/NumberInput';\nimport ZhiWenSelect from '../../../../components/Select/ZhiWenSelect';\nimport ZhiWenCascader from '../../../../components/SelectComponents/ZhiWenCascader';\nimport { breakLine } from '../../../../lib/commonJs';\nimport CompanyDomainSelectContainer from '../containers/CompanyDomainSelectContainer';\nimport ZhiwenCompanySelect from '../containers/ZhiwenCompanySelect';\nimport { FromContext, TextContainer, TextContext, TextTitle } from '../CSSComponent';\nimport { emptyCascaderRender } from '../JSComponent';\nvar RadioGroup = _Radio.Group;\nvar StyledRadio = styled(_Radio).withConfig({\n  displayName: \"MinorJobApplicationInfo__StyledRadio\",\n  componentId: \"sc-15xnneb-0\"\n})([\"display:flex;align-items:center;min-height:32px;margin-right:0;margin-bottom:8px;font-size:14px;\"]);\nvar RadioContainer = styled.div.withConfig({\n  displayName: \"MinorJobApplicationInfo__RadioContainer\",\n  componentId: \"sc-15xnneb-1\"\n})([\"display:flex;flex:1;font-size:14px;line-height:32px;\"]);\nvar NoChoose = styled.div.withConfig({\n  displayName: \"MinorJobApplicationInfo__NoChoose\",\n  componentId: \"sc-15xnneb-2\"\n})([\"width:338px;height:64px;font-size:14px;line-height:64px;text-align:center;background:rgba(0,0,0,0.06);border:1px solid #000;border-radius:4px;\"]);\nvar TagsItem = styled(_Tag).withConfig({\n  displayName: \"MinorJobApplicationInfo__TagsItem\",\n  componentId: \"sc-15xnneb-3\"\n})([\"height:22px;margin:0 8px 8px 0;\"]);\nvar TagsWrapper = styled.div.withConfig({\n  displayName: \"MinorJobApplicationInfo__TagsWrapper\",\n  componentId: \"sc-15xnneb-4\"\n})([\"display:flex;flex-wrap:wrap;\"]);\n\nvar MinorJobApplicationInfo =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(MinorJobApplicationInfo, _Component);\n\n  function MinorJobApplicationInfo(props) {\n    var _this;\n\n    _classCallCheck(this, MinorJobApplicationInfo);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(MinorJobApplicationInfo).call(this, props));\n\n    _defineProperty(_assertThisInitialized(_this), \"RadioFreezingChange\", function (e) {\n      _this.setState({\n        freezingPeriodType: e.target.value\n      }, _this.upDataValue);\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"chooseIndustryId\", function (industryId) {\n      _this.setState({\n        industryId: industryId\n      }, _this.upDataValue);\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"chooseCompanyLevelId\", function (companyLevelId, option) {\n      _this.setState({\n        companyLevelId: companyLevelId,\n        chooseCompanyLevel: option.props.children\n      }, _this.upDataValue);\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"changeIsHaveCompanyDomainSelect\", function (isHaveCompanyDomainSelect) {\n      _this.setState({\n        isHaveCompanyDomainSelect: isHaveCompanyDomainSelect\n      }, _this.upDataValue);\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"onSelectDomains\", function (selectDomain, value) {\n      var nameArray = value.map(function (item) {\n        return item.props;\n      });\n\n      _this.setState({\n        domainIds: selectDomain,\n        domainNames: nameArray,\n        selectExceptionCompany: [],\n        exceptionCompanyIds: []\n      }, _this.upDataValue);\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"onSelectLineBusiness\", function (selectedOptions) {\n      var parents = selectedOptions[0];\n      var child = selectedOptions[1];\n\n      var arr = _toConsumableArray(_this.state.selectLineBusinessArray);\n\n      arr.push({\n        id: child.id,\n        name: child.name,\n        parentsName: parents.name\n      }); // 数组去重\n\n      var selectLineBusinessArray = uniqBy(arr, 'id');\n\n      _this.setState({\n        selectLineBusinessArray: selectLineBusinessArray\n      }, function () {\n        var validateFields = _this.props.form.validateFields;\n        validateFields([\"lineOfBusinessIds\".concat(_this.props.index)], {\n          force: true\n        }, function () {\n          return;\n        });\n\n        _this.upDataValue();\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"onClickCloseIcon\", function (id, type) {\n      var selectedArray = [];\n      var selectedArrayId = [];\n      var selectedDomainsArray = [];\n\n      if (type === 'exceptionCompany') {\n        selectedArray = _toConsumableArray(_this.state.selectExceptionCompany);\n        selectedArrayId = _toConsumableArray(_this.state.exceptionCompanyIds);\n      }\n\n      if (type === 'LineBusiness') {\n        selectedArray = _toConsumableArray(_this.state.selectLineBusinessArray);\n      }\n\n      if (type === 'Domains') {\n        selectedDomainsArray = _toConsumableArray(_this.state.selectLineBusinessArray);\n      }\n\n      selectedArray = selectedArray.filter(function (v) {\n        return v.id !== id;\n      });\n      selectedDomainsArray = selectedDomainsArray.filter(function (v) {\n        return v.value !== id;\n      });\n      selectedArrayId = selectedArrayId.filter(function (v) {\n        return v !== id;\n      });\n\n      if (type === 'LineBusiness') {\n        _this.setState({\n          selectLineBusinessArray: selectedArray\n        }, function () {\n          var lineOfBusinessIds = \"lineOfBusinessIds\".concat(_this.props.index);\n\n          _this.props.form.setFieldsValue(_defineProperty({}, lineOfBusinessIds, _this.state.selectLineBusinessArray));\n\n          _this.props.form.validateFieldsAndScroll([\"lineOfBusinessIds\".concat(_this.props.index)], {\n            force: true\n          }, function () {\n            return;\n          });\n\n          _this.upDataValue();\n        });\n      }\n\n      if (type === 'exceptionCompany') {\n        _this.setState({\n          selectExceptionCompany: selectedArray,\n          exceptionCompanyIds: selectedArrayId\n        }, function () {\n          _this.props.form.setFieldsValue({\n            selectExceptionCompany: _this.state.selectExceptionCompany,\n            exceptionCompanyIds: _this.state.exceptionCompanyIds\n          });\n\n          _this.props.form.validateFieldsAndScroll(['exceptionCompanyIds'], {\n            force: true\n          }, function () {\n            return;\n          });\n        });\n      }\n\n      if (type === 'Domains') {\n        _this.setState({\n          domainsArray: selectedDomainsArray\n        }, _this.upDataValue);\n      }\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"renderLineBusinessTags\", function (data, type) {\n      return data.map(function (v) {\n        var id = v.id,\n            name = v.name,\n            parentsName = v.parentsName;\n        return React.createElement(TagsItem, {\n          key: id,\n          closable: true,\n          onClose: _this.onClickCloseIcon.bind(_assertThisInitialized(_this), id, type)\n        }, \"\".concat(parentsName, \"/\").concat(name));\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"onChangeIsNowPay\", function (e) {\n      _this.setState({\n        isNowPay: e.target.value\n      }, _this.upDataValue);\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"onChangeExceptionCompanyIds\", function (_value, selectedOptions) {\n      var exceptionCompanyArray = {\n        id: selectedOptions[1].value,\n        name: selectedOptions[1].label,\n        parentsName: selectedOptions[0].label\n      };\n      var arr = [].concat(_toConsumableArray(_this.state.selectExceptionCompany), [exceptionCompanyArray]);\n      var arrId = [].concat(_toConsumableArray(_this.state.exceptionCompanyIds), [selectedOptions[1].value]);\n      var selectExceptionCompany = uniqBy(arr, 'id');\n      var exceptionCompanyIds = uniq(arrId);\n\n      _this.setState({\n        selectExceptionCompany: selectExceptionCompany,\n        exceptionCompanyIds: exceptionCompanyIds\n      }, _this.upDataValue);\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"checkLineOfBusinessIds\", function (_rule, _value, callback) {\n      setTimeout(function () {\n        if (_this.state.selectLineBusinessArray.length === 0) {\n          callback('必选项');\n        }\n\n        callback();\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"CheckSpanIndustryDifferentPrice\", function (e) {\n      setTimeout(function () {\n        _this.upDataValue();\n      }, 0);\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"upDataValue\", function () {\n      var _this$state = _this.state,\n          industryId = _this$state.industryId,\n          companyLevelId = _this$state.companyLevelId,\n          domainIds = _this$state.domainIds,\n          freezingPeriodType = _this$state.freezingPeriodType,\n          exceptionCompanyIds = _this$state.exceptionCompanyIds,\n          selectLineBusinessArray = _this$state.selectLineBusinessArray,\n          isNowPay = _this$state.isNowPay;\n\n      _this.props.updataOtherMinorJobApplicationInfo({\n        jobCharacterIds: _this.props.jobCharacters.map(function (item) {\n          return item.id;\n        }),\n        industryId: industryId,\n        companyLevelId: companyLevelId,\n        domainIds: freezingPeriodType ? undefined : domainIds,\n        exceptionCompanyIds: exceptionCompanyIds,\n        lineOfBusinessIds: selectLineBusinessArray.map(function (item) {\n          return item.id;\n        }),\n        spanIndustryDifferentPrice: _parseInt((_this.props.form.getFieldValue(\"spanIndustryDifferentPrice\".concat(_this.props.index)) * 100).toFixed(0), 10),\n        isSpanIndustryDifferentPricePayAtOnce: !isNowPay\n      }, _this.props.index);\n    });\n\n    _this.state = {\n      freezingPeriodType: true,\n      industryId: '',\n      companyLevelId: '',\n      isShowCompanyDomainSelect: false,\n      isHaveCompanyDomainSelect: false,\n      selectLineBusinessArray: [],\n      LineBusinessId: [],\n      exceptionCompanyIds: [],\n      isNowPay: true,\n      chooseCompanyLevel: '',\n      domainIds: [],\n      domainsArray: [],\n      domainNames: [],\n      selectExceptionCompany: []\n    };\n    return _this;\n  }\n\n  _createClass(MinorJobApplicationInfo, [{\n    key: \"render\",\n    value: function render() {\n      var getFieldDecorator = this.props.form.getFieldDecorator;\n      var _this$state2 = this.state,\n          companyLevelId = _this$state2.companyLevelId,\n          industryId = _this$state2.industryId,\n          freezingPeriodType = _this$state2.freezingPeriodType,\n          isNowPay = _this$state2.isNowPay,\n          chooseCompanyLevel = _this$state2.chooseCompanyLevel,\n          selectLineBusinessArray = _this$state2.selectLineBusinessArray,\n          domainIds = _this$state2.domainIds,\n          domainNames = _this$state2.domainNames,\n          selectExceptionCompany = _this$state2.selectExceptionCompany;\n      return React.createElement(React.Fragment, null, React.createElement(TextContainer, null, React.createElement(_Form.Item, {\n        label: \"\\u5C97\\u4F4D\\u6027\\u8D28\",\n        colon: false\n      }, React.createElement(FromContext, null, this.props.jobCharacters.map(function (item) {\n        return item.name;\n      }).join('、')))), React.createElement(TextContainer, null, React.createElement(_Form.Item, {\n        label: \"\\u6240\\u5728\\u884C\\u4E1A\",\n        required: true\n      }, getFieldDecorator(\"industryId\".concat(this.props.index), {\n        rules: [{\n          required: true,\n          message: '请选择'\n        }]\n      })(React.createElement(ZhiWenSelect, {\n        type: \"zhiwen-profession\",\n        placeholder: \"\\u8BF7\\u9009\\u62E9\",\n        onChange: this.chooseIndustryId\n      })))), React.createElement(TextContainer, null, React.createElement(_Form.Item, {\n        label: \"\\u76EE\\u6807\\u516C\\u53F8\\u7B49\\u7EA7\",\n        required: true\n      }, getFieldDecorator(\"companyLevelId\".concat(this.props.index), {\n        rules: [{\n          required: true,\n          message: '请选择'\n        }]\n      })(React.createElement(ZhiWenSelect, {\n        type: \"zhiwen-company-level\",\n        placeholder: \"\\u8BF7\\u9009\\u62E9\",\n        onChange: this.chooseCompanyLevelId\n      })))), React.createElement(TextContainer, null, React.createElement(_Form.Item, {\n        label: \"\\u4E1A\\u52A1\\u9886\\u57DF\\u6216\\u884C\\u4E1A\",\n        required: true\n      }, industryId !== '' && companyLevelId !== '' ? React.createElement(CompanyDomainSelectContainer, {\n        type: \"minor\",\n        mode: \"multiple\",\n        RadioFreezingChange: this.RadioFreezingChange,\n        freezingPeriodType: freezingPeriodType,\n        industryId: industryId,\n        companyLevelId: companyLevelId,\n        chooseCompanyLevel: chooseCompanyLevel,\n        onSelectDomains: this.onSelectDomains,\n        form: this.props.form,\n        index: this.props.index\n      }) : React.createElement(NoChoose, {\n        key: \"\".concat(industryId).concat(companyLevelId)\n      }, \"\\u8BF7\\u9009\\u62E9\\u300C\\u76EE\\u6807\\u516C\\u53F8\\u7B49\\u7EA7\\u300D\"))), React.createElement(TextContainer, null, React.createElement(_Form.Item, {\n        label: \"\\u5254\\u9664\\u516C\\u53F8\"\n      }, React.createElement(ZhiwenCompanySelect, {\n        disabled: industryId === '' || companyLevelId === '' || domainIds.length === 0,\n        placeholder: '请先选择「业务领域或行业」',\n        mode: \"multiple\",\n        industryId: industryId,\n        companyLevelId: companyLevelId,\n        domains: domainIds,\n        onChange: this.onChangeExceptionCompanyIds,\n        domainsName: domainNames\n      })), React.createElement(TagsWrapper, null, this.renderLineBusinessTags(selectExceptionCompany, 'exceptionCompany'))), React.createElement(TextContainer, null, React.createElement(_Form.Item, {\n        label: \"\\u804C\\u80FD\\u7EBF / \\u4E1A\\u52A1\\u7EBF\",\n        required: true\n      }, getFieldDecorator(\"lineOfBusinessIds\".concat(this.props.index), {\n        rules: [{\n          validator: this.checkLineOfBusinessIds,\n          message: '请选择'\n        }]\n      })(React.createElement(ZhiWenCascader, {\n        type: 'line-of-business',\n        getValue: this.onSelectLineBusiness,\n        displayRender: emptyCascaderRender.bind(this, ''),\n        returnType: \"option\"\n      }))), React.createElement(TagsWrapper, null, this.renderLineBusinessTags(selectLineBusinessArray, 'LineBusiness'))), React.createElement(TextContainer, null, React.createElement(_Form.Item, {\n        label: \"\\u8DE8\\u884C\\u4E1A\\u6295\\u9012\\u5DEE\\u4EF7\\uFF08CNY\\uFF09\",\n        required: true\n      }, getFieldDecorator(\"spanIndustryDifferentPrice\".concat(this.props.index), {\n        rules: [{\n          required: true,\n          message: '请选择'\n        }],\n        onChange: this.CheckSpanIndustryDifferentPrice\n      })(React.createElement(NumberInput, {\n        style: {\n          width: '340px'\n        },\n        precision: 2,\n        placeholder: \"\\u652F\\u6301\\u5C0F\\u6570\\uFF0C\\u6700\\u59271000000\",\n        max: 1000000,\n        min: 0\n      })))), React.createElement(TextContainer, null, React.createElement(_Form.Item, {\n        label: \"\\u8DE8\\u884C\\u4E1A\\u6295\\u9012\\u5DEE\\u4EF7\\u662F\\u5426\\u672C\\u6B21\\u652F\\u4ED8\\uFF08CNY\\uFF09\",\n        required: true\n      }, React.createElement(RadioGroup, {\n        value: isNowPay,\n        onChange: this.onChangeIsNowPay\n      }, React.createElement(RadioContainer, {\n        style: {\n          width: '340px',\n          justifyContent: 'space-between'\n        }\n      }, React.createElement(StyledRadio, {\n        value: true\n      }, \"\\u83B7\\u5F97 offer \\u540E\\u652F\\u4ED8\"), React.createElement(StyledRadio, {\n        value: false\n      }, \"\\u8BA1\\u5165\\u672C\\u6B21\\u5E94\\u4ED8\\u603B\\u4EF7\"))))), React.createElement(TextContainer, null, React.createElement(TextTitle, null, \"\\u9000\\u6B3E\\u65B9\\u6848\"), React.createElement(TextContext, null, breakLine(this.props.refundPlan) || '- - ')));\n    }\n  }]);\n\n  return MinorJobApplicationInfo;\n}(Component);\n\nexport { MinorJobApplicationInfo as default };","map":null,"metadata":{},"sourceType":"module"}