{"ast":null,"code":"import _classCallCheck from \"@babel/runtime-corejs2/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime-corejs2/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime-corejs2/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime-corejs2/helpers/esm/getPrototypeOf\";\nimport _inherits from \"@babel/runtime-corejs2/helpers/esm/inherits\";\nimport React from 'react';\nimport Loading from '../Loading';\nimport RootComponent from './components/RootComponent';\nimport ListPermissions, { QueryListPermissions } from './containers/QueryListPermissions';\n\nvar PermissionSelector =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(PermissionSelector, _React$Component);\n\n  function PermissionSelector(props) {\n    var _this;\n\n    _classCallCheck(this, PermissionSelector);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(PermissionSelector).call(this, props));\n    _this.state = {\n      checkIds: []\n    };\n    return _this;\n  }\n\n  _createClass(PermissionSelector, [{\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var getAllChecked = this.props.getAllChecked;\n      var variables = {\n        input: {\n          where: {\n            upperPermission: null\n          }\n        }\n      };\n      return React.createElement(ListPermissions, {\n        query: QueryListPermissions,\n        variables: variables,\n        notifyOnNetworkStatusChange: true\n      }, function (_ref) {\n        var data = _ref.data,\n            loading = _ref.loading,\n            error = _ref.error,\n            networkStatus = _ref.networkStatus;\n\n        if (loading || networkStatus === 4) {\n          return React.createElement(Loading, null);\n        }\n\n        if (error) {\n          return null;\n        }\n\n        return React.createElement(RootComponent, {\n          permissionsData: _this2.props.permissions,\n          permissions: data.permissions,\n          getAllChecked: getAllChecked\n        });\n      });\n    }\n  }]);\n\n  return PermissionSelector;\n}(React.Component);\n\nexport default PermissionSelector;","map":null,"metadata":{},"sourceType":"module"}