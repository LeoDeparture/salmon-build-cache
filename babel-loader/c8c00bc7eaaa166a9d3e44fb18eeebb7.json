{"ast":null,"code":"import _toConsumableArray from \"@babel/runtime-corejs2/helpers/esm/toConsumableArray\";\nimport _objectSpread from \"@babel/runtime-corejs2/helpers/esm/objectSpread\";\nimport _classCallCheck from \"@babel/runtime-corejs2/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime-corejs2/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime-corejs2/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime-corejs2/helpers/esm/getPrototypeOf\";\nimport _assertThisInitialized from \"@babel/runtime-corejs2/helpers/esm/assertThisInitialized\";\nimport _inherits from \"@babel/runtime-corejs2/helpers/esm/inherits\";\nimport _defineProperty from \"@babel/runtime-corejs2/helpers/esm/defineProperty\";\nimport React, { Component } from 'react';\nimport Loading from '../../../../components/Loading';\nimport { TableFooter } from '../../../../components/Table';\nimport OrderList from '../components/OrderList';\nimport ListOrders, { QueryListOrders } from './QueryListOrders';\nvar ItemsPerPage = 20;\n\nvar OrdersContainer =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(OrdersContainer, _Component);\n\n  function OrdersContainer(props) {\n    var _this;\n\n    _classCallCheck(this, OrdersContainer);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(OrdersContainer).call(this, props));\n\n    _defineProperty(_assertThisInitialized(_this), \"changeVariables\", function (input) {\n      if (!input) return;\n      var emptyInput = {\n        payType: _this.props.payType\n      };\n      _this.variables.input.listOrderWhereInput = _objectSpread({}, emptyInput, input);\n\n      _this.refetch(_this.variables);\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"queryMore\", function () {\n      var pageInfo = _this.state.pageInfo;\n\n      _this.fetchMore({\n        updateQuery: function updateQuery(prev, _ref) {\n          var newData = _ref.fetchMoreResult;\n\n          if (!newData) {\n            return prev;\n          }\n\n          var prevData = prev.orders.edges;\n          var fetchResult = newData.orders.edges;\n          newData.orders.edges = [].concat(_toConsumableArray(prevData), _toConsumableArray(fetchResult));\n          return newData;\n        },\n        variables: {\n          input: _objectSpread({}, _this.variables.input, {\n            after: pageInfo.endCursor,\n            first: ItemsPerPage\n          })\n        }\n      }).then(function () {\n        // 记录翻页数据\n        _this.variables.input.first += ItemsPerPage;\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"storePageInfo\", function (data) {\n      var pageInfo = data.orders.pageInfo;\n\n      _this.setState({\n        pageInfo: pageInfo\n      });\n    });\n\n    var payType = _this.props.payType;\n    _this.state = {\n      pageInfo: undefined\n    };\n    _this.variables = {\n      input: {\n        first: ItemsPerPage,\n        orderBy: 'updatedAt_DESC',\n        // 按照更新的倒序排列\n        listOrderWhereInput: {\n          payType: payType,\n          serviceTicketSearch: undefined,\n          studentSearch: undefined\n        }\n      }\n    };\n    return _this;\n  } // 修改请求变量\n\n\n  _createClass(OrdersContainer, [{\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var payType = this.props.payType;\n      var pageInfo = this.state.pageInfo;\n      return React.createElement(ListOrders, {\n        query: QueryListOrders,\n        variables: this.variables,\n        notifyOnNetworkStatusChange: true,\n        onCompleted: this.storePageInfo,\n        fetchPolicy: \"network-only\"\n      }, function (_ref2) {\n        var loading = _ref2.loading,\n            data = _ref2.data,\n            error = _ref2.error,\n            refetch = _ref2.refetch,\n            networkStatus = _ref2.networkStatus,\n            fetchMore = _ref2.fetchMore;\n        _this2.refetch = refetch;\n        _this2.fetchMore = fetchMore;\n\n        if (loading && ![3, 4].includes(networkStatus)) {\n          return React.createElement(Loading, {\n            type: \"flex\"\n          });\n        }\n\n        if (error) {\n          return null;\n        }\n\n        var orders = data.orders.edges.map(function (v) {\n          return v.node;\n        });\n        var footer = pageInfo.hasNextPage ? React.createElement(TableFooter, {\n          isLoading: networkStatus === 3,\n          onClickLink: _this2.queryMore\n        }) : null;\n        return React.createElement(OrderList, {\n          orders: orders,\n          changeVariables: _this2.changeVariables,\n          payType: payType,\n          footer: footer\n        });\n      });\n    }\n  }]);\n\n  return OrdersContainer;\n}(Component);\n\nexport { OrdersContainer as default };","map":null,"metadata":{},"sourceType":"module"}