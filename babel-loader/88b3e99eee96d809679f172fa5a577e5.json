{"ast":null,"code":"import \"antd/lib/table/style\";\nimport _Table from \"antd/lib/table\";\nimport _objectSpread from \"@babel/runtime-corejs2/helpers/esm/objectSpread\";\nimport \"antd/lib/menu/style\";\nimport _Menu from \"antd/lib/menu\";\nimport \"antd/lib/icon/style\";\nimport _Icon from \"antd/lib/icon\";\nimport \"antd/lib/modal/style\";\nimport _Modal from \"antd/lib/modal\";\nimport _classCallCheck from \"@babel/runtime-corejs2/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime-corejs2/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime-corejs2/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime-corejs2/helpers/esm/getPrototypeOf\";\nimport _assertThisInitialized from \"@babel/runtime-corejs2/helpers/esm/assertThisInitialized\";\nimport _inherits from \"@babel/runtime-corejs2/helpers/esm/inherits\";\nimport _defineProperty from \"@babel/runtime-corejs2/helpers/esm/defineProperty\";\nimport { compareAsc, format } from 'date-fns';\nimport React from 'react';\nimport Router from 'next/router';\nimport OperationLink from '../../../../components/OperationLink';\nimport { getPersonName, renderValidBadge } from '../../../../lib/commonJs';\n\nvar ServiceTicketList =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(ServiceTicketList, _React$Component);\n\n  function ServiceTicketList(props) {\n    var _this;\n\n    _classCallCheck(this, ServiceTicketList);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(ServiceTicketList).call(this, props));\n\n    _defineProperty(_assertThisInitialized(_this), \"connectPathWay\", function (record) {\n      var valid = record.valid;\n\n      if (!valid) {\n        _Modal.warning({\n          title: '无法关联此服务单',\n          content: '此服务单为无效状态，无法关联。',\n          okText: '我知道了'\n        });\n      } else {\n        var pathwayId = _this.state.pathwayId;\n        var id = record.id;\n        var _variables = {\n          pathwayId: pathwayId,\n          serviceTicketId: id\n        };\n\n        _this.props.connectPathwayServiceTicket(_variables);\n      }\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"onClickDisconnect\", function (record) {\n      var serviceTickets = _this.props.serviceTickets;\n      var pathwayId = _this.state.pathwayId; // 筛选已经关联本 pathway 的服务单\n\n      var connectedSheets = serviceTickets.filter(function (serviceTicket) {\n        if (!serviceTicket.pathway) {\n          return false;\n        }\n\n        return serviceTicket.pathway.id === pathwayId;\n      });\n\n      if (connectedSheets.length > 1) {\n        _Modal.confirm({\n          icon: React.createElement(_Icon, {\n            type: \"delete\"\n          }),\n          title: '确认取消关联此服务单？',\n          content: '取消此服务单后，学习计划内用户无法查看此服务单。',\n          cancelText: '放弃',\n          okText: '确认取消关联',\n          onOk: _this.confirmDisconnect.bind(_assertThisInitialized(_this), record),\n          okType: 'danger'\n        });\n      } else {\n        _Modal.warning({\n          icon: React.createElement(_Icon, {\n            type: \"exclamation-circle\"\n          }),\n          title: '无法取消关联',\n          content: '请保证至少关联一个服务单。',\n          okText: '我知道了'\n        });\n      }\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"confirmDisconnect\", function (record) {\n      var id = record.id;\n      var pathwayId = _this.state.pathwayId;\n      var variables = {\n        pathwayId: pathwayId,\n        serviceTicketId: id\n      };\n\n      _this.props.disconnectPathwayServiceTicket(variables);\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"renderOperating\", function (_text, record) {\n      var pathway = record.pathway;\n      var menu = React.createElement(_Menu, null, React.createElement(_Menu.Item, null, !pathway ? React.createElement(\"a\", {\n        onClick: _this.connectPathWay.bind(_assertThisInitialized(_this), record)\n      }, \"\\u5173\\u8054\") : React.createElement(\"a\", {\n        style: {\n          color: '#f30b0b'\n        },\n        onClick: _this.onClickDisconnect.bind(_assertThisInitialized(_this), record)\n      }, \"\\u53D6\\u6D88\\u5173\\u8054\")));\n      return React.createElement(OperationLink, {\n        overlay: menu\n      });\n    });\n\n    _this.state = {\n      pathwayId: null\n    };\n    return _this;\n  }\n\n  _createClass(ServiceTicketList, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var id = Router.query.id;\n      this.setState({\n        pathwayId: id\n      });\n    } // 关联服务单\n\n  }, {\n    key: \"render\",\n    value: function render() {\n      var serviceTickets = this.props.serviceTickets; // 处理数据源\n\n      var dataSource = serviceTickets.map(function (serviceTicket) {\n        return _objectSpread({\n          key: serviceTicket.id\n        }, serviceTicket);\n      }); // 生成表格 column\n\n      var columnsData = [{\n        title: '服务单ID',\n        key: 'serviceTicketNo',\n        width: '18%'\n      }, {\n        title: '经办人',\n        key: 'creator',\n        width: '15%',\n        render: function render(creator) {\n          return getPersonName(creator && creator.account);\n        }\n      }, {\n        title: '行业',\n        key: 'servicePlan',\n        width: '11%',\n        render: function render(servicePlan) {\n          return servicePlan.industry ? servicePlan.industry.name : '--';\n        }\n      }, {\n        title: '关联的计划ID',\n        key: 'pathway',\n        width: '17%',\n        render: function render(pathway) {\n          return pathway ? pathway.no : '--';\n        }\n      }, {\n        title: '服务单状态',\n        key: 'isValid',\n        width: '10%',\n        render: function render(isValid) {\n          return renderValidBadge(isValid);\n        }\n      }, {\n        title: '生成日期',\n        key: 'createdAt',\n        width: '15%',\n        render: function render(value) {\n          return format(value, 'YYYY/MM/DD HH:mm');\n        },\n        sorter: function sorter(a, b) {\n          return compareAsc(a.createdAt, b.createdAt);\n        }\n      }, {\n        title: '操作',\n        key: 'operating',\n        width: '14%',\n        render: this.renderOperating\n      }];\n      var columns = columnsData.map(function (column) {\n        return _objectSpread({}, column, {\n          dataIndex: column.key\n        });\n      });\n      return React.createElement(_Table, {\n        locale: {\n          emptyText: '暂无阶段，点击右上角按钮开始创建阶段'\n        },\n        pagination: false,\n        dataSource: dataSource,\n        columns: columns\n      });\n    }\n  }]);\n\n  return ServiceTicketList;\n}(React.Component);\n\nexport default ServiceTicketList;","map":null,"metadata":{},"sourceType":"module"}