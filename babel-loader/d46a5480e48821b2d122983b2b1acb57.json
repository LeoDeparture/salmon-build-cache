{"ast":null,"code":"import _classCallCheck from \"@babel/runtime-corejs2/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime-corejs2/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime-corejs2/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime-corejs2/helpers/esm/getPrototypeOf\";\nimport _assertThisInitialized from \"@babel/runtime-corejs2/helpers/esm/assertThisInitialized\";\nimport _inherits from \"@babel/runtime-corejs2/helpers/esm/inherits\";\nimport _defineProperty from \"@babel/runtime-corejs2/helpers/esm/defineProperty\";\nimport React from 'react';\nimport styled from 'styled-components';\nimport { FlexCenterColumn, TextContent } from '../../../lib/commonCss';\nimport ModalAcceptAndChangeTime from './ModalAcceptAndChangeTime';\nimport ModalCancelAppointment from './ModalCancelAppointment';\nimport ShowPathWay from './modalContent/ShowPathWay';\nimport ShowReassign from './modalContent/ShowReassign';\nimport ShowStudent from './modalContent/ShowStudent';\nimport ShowTime from './modalContent/ShowTime';\nimport ModalReassign from './ModalReassign';\n\nvar TemplateContent =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(TemplateContent, _React$Component);\n\n  function TemplateContent() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, TemplateContent);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(TemplateContent)).call.apply(_getPrototypeOf2, [this].concat(args)));\n\n    _defineProperty(_assertThisInitialized(_this), \"onBack\", function () {\n      _this.props.toSetState({\n        step: 0\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"modalCenter\", function () {\n      var _this$props = _this.props,\n          itemData = _this$props.itemData,\n          action = _this$props.action,\n          step = _this$props.step,\n          toSetState = _this$props.toSetState,\n          modalMutation = _this$props.modalMutation; // 未公开- 无法预约 已公开-可预约\n\n      if (action === 'publiclyUnavailable' || action === 'publiclyAvailable') {\n        return React.createElement(ShowTime, {\n          time: itemData.appointmentTime\n        });\n      }\n\n      if (action === 'expiredNoReservation') {\n        return React.createElement(ContentText, null, \"\\u6B64\\u9884\\u7EA6\\u65E5\\u7A0B\\u5DF2\\u5931\\u6548\");\n      } // 已接受-待履约  已履约  学员已接受服务时间变更 - 待履约\n\n\n      if (action === 'acceptedUnPerformance' || action === 'performanceFormulate' || action === 'timeChangeUnPerformance') {\n        if (step === 0) {\n          return React.createElement(FlexCenterColumn, null, React.createElement(ShowTime, {\n            time: itemData.appointmentTime\n          }), React.createElement(ShowStudent, {\n            itemData: itemData\n          }), React.createElement(ShowPathWay, {\n            itemData: itemData,\n            toSetState: toSetState,\n            modalMutation: modalMutation\n          }));\n        }\n\n        if (step === 1) {\n          return React.createElement(ContentText, null, \"\\u786E\\u8BA4\\u540E\\uFF0C\\u4F60\\u53EF\\u4EE5\\u524D\\u5F80\\u5B66\\u4E60\\u8BA1\\u5212\\u7BA1\\u7406\\u9875\\uFF0C\\u5F00\\u59CB\\u89C4\\u5212\\u5B66\\u4E60\\u8BA1\\u5212\\u3002\");\n        }\n\n        if (step === 2) {\n          return React.createElement(ContentText, null, React.createElement(TextContent, {\n            display: 'block',\n            style: {\n              marginBottom: '20px'\n            }\n          }, \"\\u5F53\\u524D\\u9884\\u7EA6\\u4EFB\\u52A1\\u7684\\u72B6\\u6001\\u4E3A\\u5F85\\u5C65\\u7EA6\\uFF0C\\u4F60\\u53EF\\u4EE5\\u5E2E\\u52A9\\u5B66\\u5458\\u9884\\u5148\\u89C4\\u5212\\u5B66\\u4E60\\u8BA1\\u5212\\uFF0C\\u4F46\\u5B66\\u4E60\\u8BA1\\u5212\\u6682\\u65F6\\u65E0\\u6CD5\\u751F\\u6210\\uFF0C\\u4EE5\\u53CA\\u5B66\\u5458\\u65E0\\u6CD5\\u67E5\\u770B\\u3002\"), React.createElement(TextContent, {\n            display: 'block'\n          }, \"\\u26A0\\uFE0F\\u6CE8\\u610F\\uFF1A\\u5F53\\u8BE5\\u9884\\u7EA6\\u4EFB\\u52A1\\u4E3A\\u53D6\\u6D88\\u6216\\u5931\\u6548\\u7B49\\u5F02\\u5E38\\u72B6\\u6001\\u65F6\\uFF0C\\u7CFB\\u7EDF\\u5C06\\u81EA\\u52A8\\u5220\\u9664\\u4E0E\\u8BE5\\u4EFB\\u52A1\\u6240\\u5173\\u8054\\u7684\\u5B66\\u4E60\\u8BA1\\u5212\\uFF0C\\u8BF7\\u5728\\u8054\\u7CFB\\u5B66\\u5458\\u540E\\u53CA\\u65F6\\u5C06\\u72B6\\u6001\\u7F6E\\u4E3A\\u5DF2\\u5C65\\u7EA6\\uFF0C\\u4EE5\\u514D\\u9020\\u6210\\u8BA1\\u5212\\u4E22\\u5931\\u3002\"));\n        }\n      } // 学员已预约 - 待接受（改派任务）的弹出框状态为 0 时; 改派至其他工作伙伴时\n\n\n      if (action === 'availableUnAccepted' && !step || action === 'reassign' && !step) {\n        var _this$props2 = _this.props,\n            amName = _this$props2.amName,\n            delegationMessage = _this$props2.delegationMessage;\n        return React.createElement(\"div\", null, React.createElement(ShowTime, {\n          time: itemData.appointmentTime\n        }), React.createElement(ShowStudent, {\n          itemData: itemData\n        }), React.createElement(ShowReassign, {\n          message: delegationMessage,\n          amName: amName,\n          action: action,\n          itemData: itemData\n        }));\n      } // 已预约-待接受  超时  学员已预约 - 待接受（改派任务）的弹出框状态为1，2，3\n\n\n      if (action === 'appointedUnAccepted' || action === 'timeOut' || action === 'availableUnAccepted') {\n        if (step === 1) {\n          return React.createElement(FlexCenterColumn, null, React.createElement(ModalAcceptAndChangeTime, {\n            slotTime: itemData.appointmentTime,\n            getModalOperateData: toSetState\n          }));\n        }\n\n        if (step === 2) {\n          return React.createElement(FlexCenterColumn, null, React.createElement(ModalReassign, {\n            time: itemData.appointmentTime,\n            getModalOperateData: toSetState\n          }));\n        }\n\n        if (step === 3) {\n          return React.createElement(FlexCenterColumn, null, React.createElement(ModalCancelAppointment, {\n            time: itemData.appointmentTime,\n            getModalOperateData: toSetState\n          }));\n        }\n\n        if (action !== 'availableUnAccepted' && step === 0) {\n          return React.createElement(FlexCenterColumn, null, React.createElement(ShowTime, {\n            time: itemData.appointmentTime\n          }), React.createElement(ShowStudent, {\n            itemData: itemData\n          }));\n        }\n      }\n      /* 有时间和学生信息的情况，\n          已履约 - 待制定学习计划，\n          已失效,\n          学员已确认服务时间变更 - 待履约,\n          学员已拒绝服务时间变更 - 已取消,\n          已接受并变更预约时间 - 待学员确认\n          已履约 - 已制定学习计划\n          已预约-待接受  超时 状态为 0 时的内容\n      */\n\n\n      return React.createElement(FlexCenterColumn, null, React.createElement(ShowTime, {\n        time: itemData.appointmentTime\n      }), React.createElement(ShowStudent, {\n        itemData: itemData\n      }));\n    });\n\n    return _this;\n  }\n\n  _createClass(TemplateContent, [{\n    key: \"render\",\n    value: function render() {\n      return this.modalCenter();\n    }\n  }]);\n\n  return TemplateContent;\n}(React.Component);\n\n_defineProperty(TemplateContent, \"defaultProps\", {\n  hasLeftBut: false,\n  hasRightBut: false,\n  amName: null,\n  appointmentTime: null,\n  targetOperatorId: null,\n  cancellationMessage: null,\n  delegationMessage: null,\n  rightBut: []\n});\n\nexport default TemplateContent;\nvar ContentText = styled.div.withConfig({\n  displayName: \"TemplateContent__ContentText\",\n  componentId: \"qv1cl1-0\"\n})([\"min-height:90px;font-size:14px;color:#4a4a4a;white-space:normal;\"]);","map":null,"metadata":{},"sourceType":"module"}