{"ast":null,"code":"import _classCallCheck from \"@babel/runtime-corejs2/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime-corejs2/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime-corejs2/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime-corejs2/helpers/esm/getPrototypeOf\";\nimport _assertThisInitialized from \"@babel/runtime-corejs2/helpers/esm/assertThisInitialized\";\nimport _inherits from \"@babel/runtime-corejs2/helpers/esm/inherits\";\nimport _defineProperty from \"@babel/runtime-corejs2/helpers/esm/defineProperty\";\nimport React from 'react';\nimport styled from 'styled-components';\nimport { EmptyTxt, ItemContainer, ItemInfo, MainContainer, Mask, selectedStyle } from './FolderList'; // Types\n\nvar FileList =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(FileList, _React$Component);\n\n  function FileList() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, FileList);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(FileList)).call.apply(_getPrototypeOf2, [this].concat(args)));\n\n    _defineProperty(_assertThisInitialized(_this), \"onClickFile\", function (fileLink) {\n      _this.props.storeFileLink(fileLink);\n    });\n\n    return _this;\n  }\n\n  _createClass(FileList, [{\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var _this$props = this.props,\n          filesData = _this$props.filesData,\n          selectedFileLinks = _this$props.selectedFileLinks,\n          typeList = _this$props.typeList,\n          typeTxt = _this$props.typeTxt;\n\n      if (!filesData) {\n        return null;\n      }\n\n      var filteredData = filesData.filter(function (fileLink) {\n        return typeList.includes(fileLink.format);\n      });\n      var selectedFileLinkIds = selectedFileLinks.map(function (fileLink) {\n        return fileLink.id;\n      }); // 有数据\n\n      var content;\n\n      if (filteredData.length > 0) {\n        content = filteredData.filter(function (fileLink) {\n          return [1, 3].includes(fileLink.file.status);\n        }).map(function (fileLink, index) {\n          var isSelected = selectedFileLinkIds.includes(fileLink.id);\n          var file = fileLink.file,\n              owner = fileLink.owner,\n              format = fileLink.format;\n          var iconUrl = \"/static/fileicon/\".concat(format, \".png\");\n          return React.createElement(ItemContainer, {\n            key: 'file:' + index\n          }, React.createElement(Mask, {\n            style: isSelected ? selectedStyle : {},\n            onClick: _this2.onClickFile.bind(_this2, fileLink)\n          }), React.createElement(FileIconImg, {\n            src: iconUrl\n          }), React.createElement(ItemInfo, null, React.createElement(\"h1\", null, file.filename), React.createElement(\"h2\", null, \"\\u6DFB\\u52A0\\u4EBA: \", owner.person.name)));\n        });\n      } else {\n        // 无数据\n        content = React.createElement(EmptyTxt, null, \"\\u6682\\u65E0\", typeTxt);\n      }\n\n      return React.createElement(MainContainer, null, content);\n    }\n  }]);\n\n  return FileList;\n}(React.Component);\n\nexport default FileList;\nvar FileIconImg = styled.img.withConfig({\n  displayName: \"FileList__FileIconImg\",\n  componentId: \"sc-1s7jma7-0\"\n})([\"width:34px;height:40px;\"]);","map":null,"metadata":{},"sourceType":"module"}