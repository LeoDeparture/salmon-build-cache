{"ast":null,"code":"import _extends from \"@babel/runtime-corejs2/helpers/esm/extends\";\nimport _objectSpread from \"@babel/runtime-corejs2/helpers/esm/objectSpread\";\nimport \"antd/lib/select/style\";\nimport _Select from \"antd/lib/select\";\nimport _classCallCheck from \"@babel/runtime-corejs2/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime-corejs2/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime-corejs2/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime-corejs2/helpers/esm/getPrototypeOf\";\nimport _assertThisInitialized from \"@babel/runtime-corejs2/helpers/esm/assertThisInitialized\";\nimport _inherits from \"@babel/runtime-corejs2/helpers/esm/inherits\";\nimport _defineProperty from \"@babel/runtime-corejs2/helpers/esm/defineProperty\";\nimport React from 'react';\n\nvar ZhiWenSelect =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(ZhiWenSelect, _React$Component);\n\n  function ZhiWenSelect() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, ZhiWenSelect);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(ZhiWenSelect)).call.apply(_getPrototypeOf2, [this].concat(args)));\n\n    _defineProperty(_assertThisInitialized(_this), \"filterData\", function (input, option) {\n      return option.props.children.toLowerCase().indexOf(input.toLowerCase()) >= 0;\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"renderOptions\", function (data) {\n      return data && data.map(function (item, index) {\n        return React.createElement(_Select.Option, {\n          value: item.id,\n          key: index\n        }, item.name);\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"prepareData\", function (type) {\n      var data;\n      var allEnum = JSON.parse(localStorage.getItem('zhiwen_all_enum'));\n\n      if (type === 'foreign-country') {\n        data = JSON.parse(localStorage.getItem('zhiwen_foreign_country'));\n      }\n\n      if (type === 'china-country') {\n        data = JSON.parse(localStorage.getItem('zhiwen_province_city'));\n      }\n\n      if (type === 'account-type') {\n        data = allEnum.listAccountTypeEnum;\n      }\n\n      if (type === 'job-category') {\n        data = allEnum.listJobCategoryEnum;\n      }\n\n      if (type === 'zhiwen-profession') {\n        data = allEnum.listZhiWenProfessionEnum;\n      }\n\n      if (type === 'zhiwen-level') {\n        data = allEnum.listZhiwenLevelEnum;\n      }\n\n      if (type === 'cooperative-mode') {\n        data = allEnum.listCooperativeModeEnum;\n      }\n\n      if (type === 'degree') {\n        data = allEnum.listDegreeEnum;\n      }\n\n      if (type === 'gender') {\n        data = allEnum.listGenderEnum;\n      }\n\n      if (type === 'employment') {\n        data = allEnum.listEmploymentEnum;\n      }\n\n      if (type === 'job-seeking-status') {\n        data = allEnum.listJobSeekingStatusEnum;\n      }\n\n      if (type === 'language-level') {\n        data = allEnum.listLanguageLevelEnum;\n      }\n\n      if (type === 'school-category') {\n        data = allEnum.listSchoolCategoryEnum;\n      }\n\n      if (type === 'record-status') {\n        data = allEnum.listRecordStatusEnum;\n      }\n\n      if (type === 'salary-interval') {\n        data = allEnum.listSalaryIntervalEnum;\n      }\n\n      if (type === 'slot-status') {\n        data = allEnum.listSlotStatusEnum;\n      }\n\n      if (type === 'review-status') {\n        data = allEnum.listStaticReviewStatusEnum;\n      }\n\n      if (type === 'pay-status') {\n        data = allEnum.listStaticPayStatusEnum;\n      }\n\n      if (type === 'zhiwen-company-level') {\n        data = allEnum.listStaticZhiwenCompanyLevelEnum;\n      }\n\n      if (type === 'marketing-channel') {\n        data = allEnum.listStaticMarketingChannel;\n      }\n\n      if (type === 'job-character') {\n        data = allEnum.listStaticJobCharacterEnum;\n      }\n\n      if (type === 'working-style') {\n        data = allEnum.listStaticWorkingStyleEnum;\n      }\n\n      if (type === 'identification') {\n        data = allEnum.listStaticIdentificationTypeEnum;\n      }\n\n      if (type === 'job-business-match-degree') {\n        data = allEnum.listStaticJobBusinessMatchDegreeEnum;\n      }\n\n      if (type === 'job-property') {\n        data = allEnum.listStaticJobPropertyEnums;\n      }\n\n      if (type === 'job-status') {\n        data = allEnum.listStaticJobStatusEnums.map(function (v) {\n          var name;\n\n          if (v.key === 'PUBLISHED') {\n            name = '已上线';\n          }\n\n          if (v.key === 'UNPUBLISHED') {\n            name = '未上线';\n          }\n\n          if (v.key === 'INVALID') {\n            name = '已下线';\n          }\n\n          return _objectSpread({}, v, {\n            name: name\n          });\n        });\n      }\n\n      return data;\n    });\n\n    return _this;\n  }\n\n  _createClass(ZhiWenSelect, [{\n    key: \"render\",\n    value: function render() {\n      var _this$props = this.props,\n          type = _this$props.type,\n          placeholder = _this$props.placeholder;\n      var data = this.prepareData(type);\n      return React.createElement(_Select, _extends({}, this.props, {\n        placeholder: placeholder ? placeholder : '请选择',\n        filterOption: this.filterData\n      }), this.renderOptions(data));\n    }\n  }]);\n\n  return ZhiWenSelect;\n}(React.Component);\n\nexport { ZhiWenSelect as default };","map":null,"metadata":{},"sourceType":"module"}