{"ast":null,"code":"import \"antd/lib/config-provider/style\";\nimport _ConfigProvider from \"antd/lib/config-provider\";\nimport \"antd/lib/table/style\";\nimport _Table from \"antd/lib/table\";\nimport \"antd/lib/badge/style\";\nimport _Badge from \"antd/lib/badge\";\nimport _regeneratorRuntime from \"@babel/runtime-corejs2/regenerator\";\nimport \"antd/lib/message/style\";\nimport _message from \"antd/lib/message\";\nimport \"antd/lib/icon/style\";\nimport _Icon from \"antd/lib/icon\";\nimport \"antd/lib/modal/style\";\nimport _Modal from \"antd/lib/modal\";\nimport _asyncToGenerator from \"@babel/runtime-corejs2/helpers/esm/asyncToGenerator\";\nimport _Object$values from \"@babel/runtime-corejs2/core-js/object/values\";\nimport _objectSpread from \"@babel/runtime-corejs2/helpers/esm/objectSpread\";\nimport \"antd/lib/popover/style\";\nimport _Popover from \"antd/lib/popover\";\nimport _classCallCheck from \"@babel/runtime-corejs2/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime-corejs2/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime-corejs2/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime-corejs2/helpers/esm/getPrototypeOf\";\nimport _assertThisInitialized from \"@babel/runtime-corejs2/helpers/esm/assertThisInitialized\";\nimport _inherits from \"@babel/runtime-corejs2/helpers/esm/inherits\";\nimport _defineProperty from \"@babel/runtime-corejs2/helpers/esm/defineProperty\";\nimport Router from 'next/router';\nimport React from 'react';\nimport styled from 'styled-components';\nimport EmptyComponents from '../../../../components/Empty';\nimport TableOperation from '../../../../components/Table/TableOperation';\n\nvar ServicePlanTable =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(ServicePlanTable, _React$Component);\n\n  function ServicePlanTable(props) {\n    var _this;\n\n    _classCallCheck(this, ServicePlanTable);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(ServicePlanTable).call(this, props));\n\n    _defineProperty(_assertThisInitialized(_this), \"toDetailPage\", function (id) {\n      Router.push(\"/service/plan-detail/\".concat(id));\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"renderPopover\", function () {\n      var content = React.createElement(React.Fragment, null, React.createElement(\"div\", null, \"\\u5DF2\\u6709\\u670D\\u52A1\\u5355\\u5173\\u8054\\u8BE5\\u65B9\\u6848\\uFF0C\"), React.createElement(\"div\", null, \"\\u6682\\u65F6\\u65E0\\u6CD5\\u5220\\u9664\\u3002\"));\n      return React.createElement(_Popover, {\n        content: content,\n        trigger: \"hover\",\n        placement: \"topRight\"\n      }, React.createElement(\"a\", {\n        style: {\n          color: '#FFD4CB'\n        }\n      }, \"\\u5220\\u9664\"));\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"checkAllRequiredFilledIn\", function (record) {\n      var name = record.name,\n          serviceCatalog = record.serviceCatalog,\n          servicePeriod = record.servicePeriod,\n          prepayPercent = record.prepayPercent,\n          basePrice = record.basePrice,\n          maxDelayDays = record.maxDelayDays,\n          privateCourseConfig = record.careerBusinessPrivateCourseServiceConfig,\n          groupCourseConfig = record.careerBusinessGroupCourseServiceConfig,\n          subscriptionCourseConfig = record.careerBusinessSubscriptionCourseServiceConfig,\n          careerPlanConfig = record.careerBusinessCareerPlanningServiceConfig,\n          jobServiceConfig = record.jobBusinessJobRecommendationServiceConfig;\n      var baseInfo = Boolean(name && serviceCatalog && serviceCatalog.id && servicePeriod);\n      var priceInfo = Boolean(basePrice && prepayPercent && maxDelayDays);\n      var skill = [privateCourseConfig, groupCourseConfig, subscriptionCourseConfig, careerPlanConfig].filter(function (v) {\n        return v;\n      }).map(function (v) {\n        var obj = _objectSpread({}, v);\n\n        delete obj.introduction;\n        return obj;\n      }).every(function (v) {\n        return !_Object$values(v).some(function (item) {\n          return !item;\n        });\n      });\n      var jobService = jobServiceConfig ? Boolean(jobServiceConfig && jobServiceConfig.name && jobServiceConfig.validDuration && jobServiceConfig.jobCharacters.length && jobServiceConfig.refundPlan && jobServiceConfig.companyLevel && jobServiceConfig.requiredDomains) : true;\n      return !(baseInfo && priceInfo && skill && jobService);\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"changeOnlineStatus\",\n    /*#__PURE__*/\n    function () {\n      var _ref = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee(record) {\n        var id, key, isOnline, actionText, changeStatus;\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                id = record.id;\n                key = record.status.key;\n                isOnline = key === 'ONLINE';\n                actionText = isOnline ? '下线' : '上线';\n                changeStatus = _this.props.changeStatus;\n\n                if (!(!isOnline && _this.checkAllRequiredFilledIn(record))) {\n                  _context.next = 8;\n                  break;\n                }\n\n                _Modal.info({\n                  title: '不满足上线条件',\n                  icon: React.createElement(_Icon, {\n                    type: \"exclamation-circle\",\n                    theme: \"filled\",\n                    style: {\n                      color: '#FF991F'\n                    }\n                  }),\n                  content: '请在详情页中填写带有“待补全”的信息模块后，再尝试上线操作。'\n                });\n\n                return _context.abrupt(\"return\");\n\n              case 8:\n                return _context.abrupt(\"return\", changeStatus(id, isOnline ? 'OFFLINE' : 'ONLINE').then(function () {\n                  _message.destroy();\n\n                  _message.success(\"\\u5DF2\\u6210\\u529F\".concat(actionText, \"\\u65B9\\u6848\"));\n                }));\n\n              case 9:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee);\n      }));\n\n      return function (_x) {\n        return _ref.apply(this, arguments);\n      };\n    }());\n\n    _defineProperty(_assertThisInitialized(_this), \"changeLoading\", function (loading) {\n      _this.setState({\n        loading: loading\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"onClickChangeStatus\", function (record) {\n      var status = record.status.key !== 'ONLINE';\n\n      _Modal.confirm({\n        title: \"\\u786E\\u8BA4\".concat(status ? '上线' : '下线', \"\\u6B64\\u65B9\\u6848\\u5417\\uFF1F\"),\n        icon: React.createElement(_Icon, {\n          type: \"question-circle\",\n          theme: \"filled\"\n        }),\n        okText: \"\\u786E\\u8BA4\".concat(status ? '上线' : '下线'),\n        content: status ? '上线后，系统可使用此方案来创建服务单。' : '下线后，系统无法关联此方案来创建新服务单，但已创建的服务单不受影响。',\n        onOk: _this.changeOnlineStatus.bind(_assertThisInitialized(_this), record),\n        cancelText: '取消',\n        okButtonProps: {\n          type: 'primary',\n          ghost: true\n        }\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"formatOperations\", function (record) {\n      var id = record.id,\n          relatedServiceTicketCount = record.relatedServiceTicketCount;\n      var key = record.status.key;\n      var deletePlan = _this.props.deletePlan;\n      var isOnline = key === 'ONLINE';\n      var actionText = isOnline ? '下线' : '上线';\n      var noTicket = !relatedServiceTicketCount;\n      return [{\n        title: '查看详情',\n        onClick: _this.toDetailPage.bind(_assertThisInitialized(_this), id)\n      }, {\n        title: actionText,\n        onClick: function onClick() {\n          _this.onClickChangeStatus(record);\n        }\n      }, {\n        title: '删除',\n        color: '#FF5230',\n        onClick: deletePlan.bind(_assertThisInitialized(_this), id),\n        render: !noTicket && _this.renderPopover\n      }];\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"formatPrice\", function (v) {\n      var formatValue = v / 100;\n\n      if (\"\".concat(formatValue).includes('.')) {\n        return formatValue;\n      }\n\n      return formatValue + '.00';\n    });\n\n    _this.state = {\n      loading: false\n    };\n    return _this;\n  }\n\n  _createClass(ServicePlanTable, [{\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var _this$props = this.props,\n          servicePlans = _this$props.servicePlans,\n          footer = _this$props.footer;\n      var dataSource = servicePlans;\n      var columns = [{\n        title: '方案名称',\n        dataIndex: 'name',\n        key: 'name',\n        width: '25%',\n        render: function render(value, record) {\n          var id = record.id;\n          return React.createElement(\"a\", {\n            onClick: _this2.toDetailPage.bind(_this2, id)\n          }, value);\n        }\n      }, {\n        title: '行业',\n        dataIndex: 'industry',\n        key: 'industry',\n        width: '9.4%',\n        render: function render(v) {\n          return v.name;\n        }\n      }, {\n        title: '所属目录',\n        dataIndex: 'serviceCatalog',\n        key: 'serviceCatalog',\n        width: '9.4%',\n        render: function render(v) {\n          return v.name;\n        }\n      }, {\n        title: '价格（元）',\n        dataIndex: 'basePrice',\n        key: 'basePrice',\n        width: '10.2%',\n        render: function render(v) {\n          return v ? _this2.formatPrice(v) : '- -';\n        }\n      }, {\n        title: '状态',\n        dataIndex: 'status',\n        key: 'status',\n        width: '12%',\n        render: function render(v) {\n          var key = v.key,\n              name = v.name;\n          var badgeStatus;\n\n          if (key === 'ONLINE') {\n            badgeStatus = 'success';\n          } else if (key === 'OFFLINE') {\n            badgeStatus = 'default';\n          } else if (key === 'UNPUBLISHED') {\n            badgeStatus = 'warning';\n          }\n\n          return React.createElement(_Badge, {\n            status: badgeStatus,\n            text: name\n          });\n        }\n      }, {\n        title: '已关联服务单数量',\n        dataIndex: 'relatedServiceTicketCount',\n        key: 'relatedServiceTicketCount',\n        width: '15%'\n      }, {\n        title: '操作',\n        key: 'operation',\n        width: '19%',\n        render: function render(_value, record) {\n          return React.createElement(TableOperation, {\n            operations: _this2.formatOperations(record)\n          });\n        }\n      }];\n\n      var Empty = function Empty() {\n        return React.createElement(EmptyComponents, null);\n      };\n\n      return React.createElement(_ConfigProvider, {\n        renderEmpty: Empty\n      }, React.createElement(TableWrapper, null, React.createElement(_Table, {\n        dataSource: dataSource,\n        columns: columns,\n        pagination: false,\n        footer: footer,\n        loading: this.state.loading\n      })));\n    }\n  }]);\n\n  return ServicePlanTable;\n}(React.Component);\n\nvar TableWrapper = styled.div.withConfig({\n  displayName: \"ServicePlanTable__TableWrapper\",\n  componentId: \"jvwilj-0\"\n})([\"width:100%;margin-top:24px;\"]);\nexport default ServicePlanTable;","map":null,"metadata":{},"sourceType":"module"}