{"ast":null,"code":"import \"antd/lib/table/style\";\nimport _Table from \"antd/lib/table\";\nimport \"antd/lib/button/style\";\nimport _Button from \"antd/lib/button\";\nimport \"antd/lib/col/style\";\nimport _Col from \"antd/lib/col\";\nimport \"antd/lib/dropdown/style\";\nimport _Dropdown from \"antd/lib/dropdown\";\nimport \"antd/lib/menu/style\";\nimport _Menu from \"antd/lib/menu\";\nimport _objectWithoutProperties from \"@babel/runtime-corejs2/helpers/esm/objectWithoutProperties\";\nimport \"antd/lib/icon/style\";\nimport _Icon from \"antd/lib/icon\";\nimport _classCallCheck from \"@babel/runtime-corejs2/helpers/esm/classCallCheck\";\nimport _possibleConstructorReturn from \"@babel/runtime-corejs2/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime-corejs2/helpers/esm/getPrototypeOf\";\nimport _assertThisInitialized from \"@babel/runtime-corejs2/helpers/esm/assertThisInitialized\";\nimport _inherits from \"@babel/runtime-corejs2/helpers/esm/inherits\";\nimport _defineProperty from \"@babel/runtime-corejs2/helpers/esm/defineProperty\";\nimport \"antd/lib/modal/style\";\nimport _Modal from \"antd/lib/modal\";\nimport Router from 'next/router';\nimport React from 'react';\nimport styled from 'styled-components';\nimport { FlexCenterColumn } from '../../../../lib/commonCss';\nvar FormattedRow = styled.div.withConfig({\n  displayName: \"SubscriptionCourseSeriesTable__FormattedRow\",\n  componentId: \"sc-1y11fzz-0\"\n})([\"display:flex;justify-content:space-between;padding:0 30px 0 0;margin:14px;\"]);\nvar Circle = styled.div.withConfig({\n  displayName: \"SubscriptionCourseSeriesTable__Circle\",\n  componentId: \"sc-1y11fzz-1\"\n})([\"display:inline-block;width:6px;height:6px;margin:0 5px;border-radius:50%;\"]);\nvar confirm = _Modal.confirm;\n\nvar SubscriptionCourseSeriesTable =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(SubscriptionCourseSeriesTable, _React$Component);\n\n  function SubscriptionCourseSeriesTable() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, SubscriptionCourseSeriesTable);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(SubscriptionCourseSeriesTable)).call.apply(_getPrototypeOf2, [this].concat(args)));\n\n    _defineProperty(_assertThisInitialized(_this), \"state\", {\n      listSubscriptionCourseSeriesData: _this.props.listSubscriptionCourseSeriesData,\n      loading: false,\n      showHoverData: ''\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"showConfirm\", function (action, record) {\n      if (action === '上线') {\n        confirm({\n          cancelText: '取消',\n          centered: true,\n          icon: React.createElement(_Icon, {\n            type: \"question-circle\",\n            theme: \"filled\"\n          }),\n          okText: '确认上线',\n          okType: 'primary',\n          onOk: _this.props.enableMutation.bind(_assertThisInitialized(_this), record.id),\n          title: \"\\u786E\\u8BA4\\u4E0A\\u7EBF\\u6B64\\u5468\\u671F\\u5417\\uFF1F\"\n        });\n      } else if (action === '下线') {\n        confirm({\n          cancelText: '取消',\n          centered: true,\n          content: React.createElement(\"div\", {\n            style: {\n              fontSize: '13px'\n            }\n          }, React.createElement(\"p\", null, \"\\u5F53\\u524D\\u5468\\u671F\\u6B63\\u751F\\u6548\\uFF0C\\u5982\\u679C\\u7EE7\\u7EED\\u6267\\u884C\\u505C\\u6B62\\u64CD\\u4F5C\\uFF0C\\u8BE5\\u8BFE\\u7A0B\\u4EA7\\u54C1\\u5C06\\u540C\\u65F6\\u88AB\\u6267\\u884C\\u4E0B\\u7EBF\\u64CD\\u4F5C\\u3002\\u6CE8\\u610F\\uFF0C\\u4E0B\\u6B21\\u542F\\u7528\\u6B64\\u8BFE\\u7A0B\\u5468\\u671F\\u65F6\\uFF0C\\u9700\\u8981\\u624B\\u52A8\\u6267\\u884C\\u8BFE\\u7A0B\\u4E0A\\u7EBF\\u64CD\\u4F5C\\u3002\"), React.createElement(\"p\", null, \"\\u4E0B\\u7EBF\\u6B64\\u8BFE\\u7A0B\\u5468\\u671F\\u540E\\uFF1A\"), React.createElement(\"p\", null, \"1\\u3001\\u672A\\u8BA2\\u9605\\u7684\\u7528\\u6237\\u5C06\\u65E0\\u6CD5\\u770B\\u5230\\u6B64\\u8BFE\\u7A0B\\u5468\\u671F\\uFF0C\\u8BE5\\u64CD\\u4F5C\\u53EF\\u80FD\\u5BFC\\u81F4\\u8BFE\\u7A0B\\u88AB\\u4E0B\\u67B6\\uFF1B\"), React.createElement(\"p\", null, \"2\\u3001\\u5DF2\\u8BA2\\u9605\\u7684\\u7528\\u6237\\u5C06\\u80FD\\u7EE7\\u7EED\\u8BBF\\u95EE\\u76F8\\u5173\\u8BFE\\u7A0B\\u6570\\u636E\\uFF1B\"), React.createElement(\"p\", null, \"3\\u3001\\u4E0B\\u7EBF\\u540E\\u8BE5\\u5468\\u671F\\u53EF\\u518D\\u6B21\\u4E0A\\u7EBF\\uFF1B\"), React.createElement(\"p\", null, \"4\\u3001\\u8BE5\\u5468\\u671F\\u5360\\u7528\\u7684\\u65F6\\u95F4\\u6BB5\\u5C06\\u4F9D\\u7136\\u6709\\u6548\\uFF08\\u65B0\\u7684\\u8BFE\\u7A0B\\u5468\\u671F\\u65E0\\u6CD5\\u88AB\\u8BBE\\u7F6E\\u5230\\u8BE5\\u65F6\\u6BB5\\uFF09\\u3002\")),\n          icon: React.createElement(_Icon, {\n            type: \"question-circle\",\n            theme: \"filled\"\n          }),\n          okText: '确认下线',\n          okType: 'primary',\n          onOk: _this.props.disableMutation.bind(_assertThisInitialized(_this), record.id),\n          title: \"\\u786E\\u8BA4\\u4E0B\\u7EBF\\u6B64\\u8BFE\\u7A0B\\u5468\\u671F\\u5417\\uFF1F\"\n        });\n      } else if (action === '移除') {\n        confirm({\n          cancelText: '取消',\n          centered: true,\n          content: React.createElement(\"div\", {\n            style: {\n              fontSize: '13px'\n            }\n          }, React.createElement(\"p\", null, \"\\u79FB\\u9664\\u6B64\\u5468\\u671F\\u540E\\uFF0CMIS \\u7CFB\\u7EDF\\u5185\\u7528\\u6237\\u65E0\\u6CD5\\u67E5\\u770B\\u5230\\u5468\\u671F\\u3002\")),\n          icon: React.createElement(_Icon, {\n            type: \"question-circle\",\n            theme: \"filled\"\n          }),\n          okText: '确认移除',\n          okType: 'danger',\n          onOk: _this.props.removeMutation.bind(_assertThisInitialized(_this), record.id),\n          title: \"\\u786E\\u8BA4\\u79FB\\u9664\\u6B64\\u5468\\u671F\\u5417\\uFF1F\"\n        });\n      }\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"switchPage\", function (data, page) {\n      var key = data.key,\n          duration = data.duration,\n          subscribersAmount = data.subscribersAmount,\n          chaptersAmount = data.chaptersAmount,\n          operation = data.operation,\n          status = data.status,\n          fillData = _objectWithoutProperties(data, [\"key\", \"duration\", \"subscribersAmount\", \"chaptersAmount\", \"operation\", \"status\"]);\n\n      _this.props.setCurrentSeries(fillData);\n\n      _this.props.switchPage(page);\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"menuItem\", function (showHoverData, record) {\n      var toDetail = function toDetail() {\n        Router.push(\"\".concat(Router.asPath, \"/subscription-course-series-detail/\").concat(record.id));\n      };\n\n      return showHoverData.map(function (item, index) {\n        if (item === '查看详情') {\n          return React.createElement(_Menu.Item, {\n            key: index,\n            onClick: toDetail\n          }, React.createElement(\"span\", null, item));\n        }\n\n        if (item === '编辑') {\n          return React.createElement(_Menu.Item, {\n            key: index,\n            onClick: _this.switchPage.bind(_assertThisInitialized(_this), record, 'series-edit')\n          }, React.createElement(\"span\", null, item));\n        }\n\n        if (item === '复制并创建周期') {\n          return React.createElement(_Menu.Item, {\n            key: index,\n            onClick: _this.switchPage.bind(_assertThisInitialized(_this), record, 'series-dupli')\n          }, React.createElement(\"span\", null, item));\n        }\n\n        if (item === '上线') {\n          return React.createElement(_Menu.Item, {\n            key: index,\n            onClick: _this.showConfirm.bind(_assertThisInitialized(_this), item, record)\n          }, React.createElement(\"a\", null, React.createElement(\"span\", null, item)));\n        }\n\n        if (item === '下线') {\n          return React.createElement(_Menu.Item, {\n            key: index,\n            onClick: _this.showConfirm.bind(_assertThisInitialized(_this), item, record)\n          }, React.createElement(\"a\", null, React.createElement(\"span\", null, item)));\n        }\n\n        if (item === '移除') {\n          return React.createElement(_Menu.Item, {\n            key: index\n          }, React.createElement(\"a\", {\n            style: {\n              color: 'red'\n            },\n            onClick: _this.showConfirm.bind(_assertThisInitialized(_this), item, record)\n          }, item));\n        }\n\n        return null;\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"menu\", function (record) {\n      var showHoverData = /未[^\\x00-\\x7F]+/.test(record.status) ? ['查看详情', '编辑', '复制并创建周期', '移除'] : record.status === '生效中' ? ['查看详情', '编辑', '复制并创建周期', '下线', '移除'] : record.status === '往期-已下线' ? ['查看详情', '编辑', '复制并创建周期', '移除'] : record.status === '当期-已下线' ? ['查看详情', '编辑', '复制并创建周期', '上线', '移除'] : [];\n      return React.createElement(_Menu, null, _this.menuItem(showHoverData, record));\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"render\", function () {\n      var data = _this.props.listSubscriptionCourseSeriesData;\n      var columns = [{\n        dataIndex: 'name',\n        key: 'name',\n        title: '对外课程名称',\n        width: '35%',\n        onCell: function onCell() {\n          return {\n            style: {\n              whiteSpace: 'nowrap',\n              maxWidth: 150\n            }\n          };\n        },\n        render: function render(text) {\n          return React.createElement(\"div\", {\n            style: {\n              textOverflow: 'ellipsis',\n              overflow: 'hidden'\n            }\n          }, text);\n        }\n      }, {\n        dataIndex: 'duration',\n        key: 'duration',\n        title: '周期有效期间',\n        width: '20%'\n      }, {\n        dataIndex: 'subscribersAmount',\n        key: 'subscribersAmount',\n        title: '订阅数',\n        width: '10%'\n      }, {\n        dataIndex: 'chaptersAmount',\n        key: 'chaptersAmount',\n        title: '章节数',\n        width: '10%'\n      }, {\n        dataIndex: 'status',\n        key: 'status',\n        render: function render(text) {\n          var bgrColour = /未[^\\x00-\\x7F]+/.test(text) ? {\n            backgroundColor: '#F5A623'\n          } : text === '生效中' ? {\n            backgroundColor: '#36B37E'\n          } : /[^\\x00-\\x7F]*已下线/.test(text) ? {\n            backgroundColor: '#CACACA'\n          } : {\n            backgroundColor: '#FFFFFF'\n          };\n          return React.createElement(\"div\", null, React.createElement(Circle, {\n            style: bgrColour\n          }), React.createElement(\"span\", {\n            style: {\n              marginBottom: 0\n            }\n          }, text));\n        },\n        title: '状态',\n        width: '15%'\n      }, {\n        dataIndex: 'operation',\n        key: 'operation',\n        render: function render(text, record) {\n          return React.createElement(_Dropdown, {\n            overlay: _this.menu(record)\n          }, React.createElement(\"span\", {\n            style: {\n              color: '#6285ff'\n            },\n            className: \"ant-dropdown-link\"\n          }, text, React.createElement(_Icon, {\n            type: \"down\"\n          })));\n        },\n        title: '操作',\n        width: '10%'\n      }];\n      return React.createElement(FlexCenterColumn, null, React.createElement(FormattedRow, null, React.createElement(_Col, {\n        span: 18\n      }, React.createElement(\"span\", {\n        style: {\n          fontWeight: 'bold'\n        }\n      }, \"\\u6B64\\u8BFE\\u7A0B\\u5185\\u5468\\u671F\")), React.createElement(_Col, {\n        span: 6,\n        style: {\n          textAlign: 'right'\n        }\n      }, React.createElement(_Button, {\n        type: \"primary\",\n        onClick: _this.props.switchPage.bind(_assertThisInitialized(_this), 'series-create')\n      }, \"\\u521B\\u5EFA\\u8BFE\\u7A0B\\u5468\\u671F\"))), React.createElement(_Table, {\n        dataSource: data,\n        columns: columns,\n        pagination: false,\n        loading: _this.state.loading,\n        footer: _this.props.footer,\n        bordered: false,\n        locale: {\n          emptyText: '暂无课程周期，点击右上角按钮开始创建课程周期'\n        }\n      }));\n    });\n\n    return _this;\n  }\n\n  return SubscriptionCourseSeriesTable;\n}(React.Component);\n\nexport { SubscriptionCourseSeriesTable };","map":null,"metadata":{},"sourceType":"module"}