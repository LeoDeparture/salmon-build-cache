{"ast":null,"code":"import \"antd/lib/skeleton/style\";\nimport _Skeleton from \"antd/lib/skeleton\";\nimport \"antd/lib/modal/style\";\nimport _Modal from \"antd/lib/modal\";\nimport _objectSpread from \"@babel/runtime-corejs2/helpers/esm/objectSpread\";\nimport _classCallCheck from \"@babel/runtime-corejs2/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime-corejs2/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime-corejs2/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime-corejs2/helpers/esm/getPrototypeOf\";\nimport _assertThisInitialized from \"@babel/runtime-corejs2/helpers/esm/assertThisInitialized\";\nimport _inherits from \"@babel/runtime-corejs2/helpers/esm/inherits\";\nimport _defineProperty from \"@babel/runtime-corejs2/helpers/esm/defineProperty\";\nimport React from 'react';\nimport styled, { css } from 'styled-components';\nimport { FlexContentCenterL } from '../../../lib/commonCss';\nimport { dataForModal } from '../components/DataForModal';\nimport TemplateContent from './TemplateContent';\nimport TemplateFooter from './TemplateFooter';\nimport TemplateTitle from './TemplateTitle';\n\nvar TemplateModal =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(TemplateModal, _React$Component);\n\n  function TemplateModal(props) {\n    var _this;\n\n    _classCallCheck(this, TemplateModal);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(TemplateModal).call(this, props));\n\n    _defineProperty(_assertThisInitialized(_this), \"toSetState\", function (obj) {\n      var thisState = _objectSpread({}, _this.state, obj);\n\n      _this.setState(thisState);\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"modalTitle\", function () {\n      var step = _this.state.step;\n      var _this$props = _this.props,\n          itemData = _this$props.itemData,\n          actionData = _this$props.actionData,\n          modalMutation = _this$props.modalMutation,\n          getSlotsDetails = _this$props.getSlotsDetails,\n          UpdateAfterCloseModal = _this$props.UpdateAfterCloseModal;\n      var modalData = dataForModal[actionData][step].title; // const modalData = dataForModal.availableUnAccepted[step].title;\n\n      return React.createElement(TemplateTitle, {\n        itemData: itemData,\n        actionData: actionData,\n        modalMutation: modalMutation,\n        getSlotsDetails: getSlotsDetails,\n        toSetState: _this.toSetState,\n        UpdateAfterCloseModal: UpdateAfterCloseModal,\n        backgroundColor: modalData.bgColor,\n        color: modalData.titleFontColor,\n        text: modalData.titleContent,\n        hasLeftBut: modalData.hasLeftBut,\n        hasRightBut: modalData.hasRightBut,\n        rightBut: modalData.rightBut\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"modalCenter\", function () {\n      var _this$state = _this.state,\n          step = _this$state.step,\n          amName = _this$state.amName,\n          appointmentTime = _this$state.appointmentTime,\n          targetOperatorId = _this$state.targetOperatorId,\n          cancellationMessage = _this$state.cancellationMessage,\n          delegationMessage = _this$state.delegationMessage;\n      var _this$props2 = _this.props,\n          itemData = _this$props2.itemData,\n          actionData = _this$props2.actionData,\n          modalMutation = _this$props2.modalMutation;\n      return React.createElement(\"div\", null, _this.modalTitle(), React.createElement(TemplateContent, {\n        itemData: itemData,\n        action: actionData,\n        step: step,\n        amName: amName,\n        modalMutation: modalMutation,\n        appointmentTime: appointmentTime,\n        targetOperatorId: targetOperatorId,\n        cancellationMessage: cancellationMessage,\n        delegationMessage: delegationMessage,\n        toSetState: _this.toSetState\n      }));\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"modalFooter\", function () {\n      var _this$state2 = _this.state,\n          step = _this$state2.step,\n          amName = _this$state2.amName,\n          disableBut = _this$state2.disableBut,\n          appointmentTime = _this$state2.appointmentTime,\n          targetOperatorId = _this$state2.targetOperatorId,\n          cancellationMessage = _this$state2.cancellationMessage,\n          delegationMessage = _this$state2.delegationMessage;\n      var _this$props3 = _this.props,\n          itemData = _this$props3.itemData,\n          actionData = _this$props3.actionData,\n          getSlotsDetails = _this$props3.getSlotsDetails,\n          modalMutation = _this$props3.modalMutation,\n          UpdateAfterCloseModal = _this$props3.UpdateAfterCloseModal;\n      return React.createElement(TemplateFooter, {\n        itemData: itemData,\n        action: actionData,\n        step: step,\n        disableBut: disableBut,\n        amName: amName,\n        modalMutation: modalMutation,\n        getSlotsDetails: getSlotsDetails,\n        appointmentTime: appointmentTime,\n        targetOperatorId: targetOperatorId,\n        cancellationMessage: cancellationMessage,\n        UpdateAfterCloseModal: UpdateAfterCloseModal,\n        delegationMessage: delegationMessage,\n        toSetState: _this.toSetState\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"cancel\", function () {\n      setTimeout(function () {\n        _this.props.getSlotsDetails(null, null, false);\n\n        _this.props.UpdateAfterCloseModal();\n\n        _this.setState({\n          step: 0\n        });\n      }, 500);\n    });\n\n    _this.state = {\n      step: 0,\n      amName: null,\n      disableBut: false,\n      appointmentTime: null,\n      targetOperatorId: null,\n      cancellationMessage: null,\n      delegationMessage: null\n    };\n    return _this;\n  } // 设置 state\n\n\n  _createClass(TemplateModal, [{\n    key: \"render\",\n    value: function render() {\n      var _this$props4 = this.props,\n          actionData = _this$props4.actionData,\n          modalVisible = _this$props4.modalVisible;\n\n      if (actionData) {\n        return React.createElement(_Modal, {\n          footer: this.modalFooter(),\n          onCancel: this.cancel,\n          destroyOnClose: true,\n          closable: false,\n          maskClosable: true,\n          style: {\n            minHeight: '300px',\n            position: 'relative'\n          },\n          visible: modalVisible\n        }, this.modalCenter());\n      }\n\n      return React.createElement(_Modal, {\n        onCancel: this.cancel,\n        afterClose: this.cancel,\n        closable: false,\n        footer: false,\n        style: {\n          minHeight: '300px'\n        },\n        visible: modalVisible\n      }, React.createElement(_Skeleton, {\n        active: true\n      }));\n    }\n  }]);\n\n  return TemplateModal;\n}(React.Component);\n\nexport default TemplateModal;\nexport var KeyFlexContentCenterL = styled(FlexContentCenterL).withConfig({\n  displayName: \"TemplateModal__KeyFlexContentCenterL\",\n  componentId: \"mn0cg7-0\"\n})([\"font-size:14px;color:\", \";text-align:center;\", \";word-break:keep-all;cursor:pointer;\"], function (props) {\n  return props.color;\n}, function (props) {\n  return props.isSec && // tslint:disable-next-line:no-nested-template-literals\n  css([\"&::before{padding:0 4px;color:#d0d0d0;content:'|';}\"]);\n});","map":null,"metadata":{},"sourceType":"module"}