{"ast":null,"code":"import \"antd/lib/icon/style\";\nimport _Icon from \"antd/lib/icon\";\nimport \"antd/lib/modal/style\";\nimport _Modal from \"antd/lib/modal\";\nimport \"antd/lib/message/style\";\nimport _message from \"antd/lib/message\";\nimport _classCallCheck from \"@babel/runtime-corejs2/helpers/esm/classCallCheck\";\nimport _possibleConstructorReturn from \"@babel/runtime-corejs2/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime-corejs2/helpers/esm/getPrototypeOf\";\nimport _assertThisInitialized from \"@babel/runtime-corejs2/helpers/esm/assertThisInitialized\";\nimport _inherits from \"@babel/runtime-corejs2/helpers/esm/inherits\";\nimport _defineProperty from \"@babel/runtime-corejs2/helpers/esm/defineProperty\";\nimport React from 'react';\nimport { parseErrorCode } from '../../../../lib/commonJs';\nimport { handleConfirmOtherError } from '../../../../lib/handleError';\nimport { EditSectionContent } from '../components/EditSectionContent';\nimport { EditSectionMutation, editSectionMutation } from './EditSectionMutation';\n\nvar EditSectionContainer =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(EditSectionContainer, _React$Component);\n\n  function EditSectionContainer() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, EditSectionContainer);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(EditSectionContainer)).call.apply(_getPrototypeOf2, [this].concat(args)));\n\n    _defineProperty(_assertThisInitialized(_this), \"editdSuccessful\", function () {\n      _message.success('保存成功', 3);\n\n      _this.props.switchPage('list');\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"editFailed\", function (err) {\n      if (parseErrorCode(err) === 'DuplicationError') {\n        _Modal.warning({\n          icon: React.createElement(_Icon, {\n            type: \"exclamation-circle\",\n            style: {\n              color: 'orange'\n            },\n            theme: \"filled\"\n          }),\n          content: '此小节名称在此章节中已被占用，请重新输入。',\n          okText: '我知道了',\n          title: '名称已存在此章节中'\n        });\n      } else if (handleConfirmOtherError(err)) {\n        _message.error('编辑失败');\n      }\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"render\", function () {\n      var data = _this.props.sectionData;\n\n      if (data) {\n        return React.createElement(EditSectionMutation, {\n          mutation: editSectionMutation,\n          onError: _this.editFailed,\n          onCompleted: _this.editdSuccessful\n        }, function (EditSection) {\n          var editMutation = function editMutation(_ref) {\n            var _ref$input = _ref.input,\n                id = _ref$input.id,\n                name = _ref$input.name,\n                description = _ref$input.description,\n                mediaFileDescription = _ref$input.mediaFileDescription,\n                attachmentIds = _ref$input.attachmentIds,\n                tutorDescriptions = _ref$input.tutorDescriptions;\n            return EditSection({\n              variables: {\n                input: {\n                  id: id,\n                  name: name,\n                  mediaFileDescription: mediaFileDescription,\n                  attachmentIds: attachmentIds,\n                  description: description,\n                  tutorDescriptions: tutorDescriptions\n                }\n              }\n            });\n          };\n\n          return React.createElement(EditSectionContent, {\n            data: data,\n            editData: editMutation,\n            switchPage: _this.props.switchPage\n          });\n        });\n      } else {\n        return null;\n      }\n    });\n\n    return _this;\n  }\n\n  return EditSectionContainer;\n}(React.Component);\n\nexport { EditSectionContainer };","map":null,"metadata":{},"sourceType":"module"}