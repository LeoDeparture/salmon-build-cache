{"ast":null,"code":"import \"antd/lib/modal/style\";\nimport _Modal from \"antd/lib/modal\";\nimport \"antd/lib/table/style\";\nimport _Table from \"antd/lib/table\";\nimport _objectSpread from \"@babel/runtime-corejs2/helpers/esm/objectSpread\";\nimport \"antd/lib/avatar/style\";\nimport _Avatar from \"antd/lib/avatar\";\nimport \"antd/lib/switch/style\";\nimport _Switch from \"antd/lib/switch\";\nimport \"antd/lib/badge/style\";\nimport _Badge from \"antd/lib/badge\";\nimport \"antd/lib/popover/style\";\nimport _Popover from \"antd/lib/popover\";\nimport \"antd/lib/button/style\";\nimport _Button from \"antd/lib/button\";\nimport _classCallCheck from \"@babel/runtime-corejs2/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime-corejs2/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime-corejs2/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime-corejs2/helpers/esm/getPrototypeOf\";\nimport _assertThisInitialized from \"@babel/runtime-corejs2/helpers/esm/assertThisInitialized\";\nimport _inherits from \"@babel/runtime-corejs2/helpers/esm/inherits\";\nimport _defineProperty from \"@babel/runtime-corejs2/helpers/esm/defineProperty\";\nimport { compareAsc, format } from 'date-fns';\nimport Router from 'next/router';\nimport React, { Component } from 'react';\nimport styled from 'styled-components';\nimport Loading from '../../../../components/Loading';\nimport { PageBlock, PageInfoHeader } from '../../../../components/PageLayout';\nimport { InfoBody, Item, ItemContent, ItemTitle, LineWrapper } from '../../CSSComponents';\nimport ListSubscriptionCourse, { QueryListSubscriptionCourse } from '../containers/QueryListSubscriptionCourse';\n\nvar Header =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(Header, _Component);\n\n  function Header(props) {\n    var _this;\n\n    _classCallCheck(this, Header);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Header).call(this, props));\n\n    _defineProperty(_assertThisInitialized(_this), \"renderPopover\", function () {\n      var content = React.createElement(\"div\", null, \"\\u5DF2\\u6709\\u8BA2\\u9605\\u8BFE\\u7A0B\\u5173\\u8054\\u8BE5\\u5957\\u9898\\uFF0C\\u65E0\\u6CD5\\u5220\\u9664\");\n      return React.createElement(_Popover, {\n        content: content,\n        trigger: \"hover\",\n        placement: \"topRight\"\n      }, React.createElement(_Button, {\n        style: {\n          color: '#FFD4CB',\n          marginLeft: '12px'\n        }\n      }, \"\\u5220\\u9664\"));\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"jumpToEditPage\", function () {\n      Router.push(\"/question-bank/create/\".concat(Router.query.id));\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"openOrCloseModal\", function () {\n      _this.setState(function (prev) {\n        return {\n          visible: !prev.visible\n        };\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"sortTime\", function (left, right) {\n      return compareAsc(left.questionBankRelatedAt, right.questionBankRelatedAt);\n    });\n\n    _this.state = {\n      visible: false,\n      loading: false\n    };\n    _this.variables = {\n      input: {\n        orderBy: 'questionBankRelatedAt_DESC',\n        where: {\n          isDeleted: false,\n          questionBank: {\n            id: undefined\n          }\n        }\n      }\n    };\n    return _this;\n  }\n\n  _createClass(Header, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.variables.input.where.questionBank.id = Router.query.id;\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var _this$props = this.props,\n          deleteQuestionBank = _this$props.deleteQuestionBank,\n          getQuestionBankById = _this$props.getQuestionBankById,\n          changeQuestionBankStatus = _this$props.changeQuestionBankStatus;\n      var isValid = getQuestionBankById.isValid,\n          no = getQuestionBankById.no,\n          createdAt = getQuestionBankById.createdAt,\n          name = getQuestionBankById.name,\n          relatedSubscriptionCourseSeriesCount = getQuestionBankById.relatedSubscriptionCourseSeriesCount,\n          person = getQuestionBankById.creator.account.person;\n      var _this$state = this.state,\n          visible = _this$state.visible,\n          loading = _this$state.loading;\n\n      var badge = function badge() {\n        var status = isValid ? 'success' : 'warning';\n        var text = isValid ? '有效' : '无效';\n        return React.createElement(_Badge, {\n          style: {\n            color: '#172B4D',\n            marginLeft: 12\n          },\n          status: status,\n          text: text\n        });\n      };\n\n      var buttons = React.createElement(React.Fragment, null, React.createElement(SwitchText, null, \"\\u6709\\u6548\"), React.createElement(_Switch, {\n        defaultChecked: isValid,\n        onChange: changeQuestionBankStatus.bind(this, !isValid)\n      }), React.createElement(_Button, {\n        onClick: this.jumpToEditPage,\n        style: {\n          marginLeft: '12px',\n          color: '#172B4D'\n        }\n      }, \"\\u7F16\\u8F91\"), !relatedSubscriptionCourseSeriesCount ? React.createElement(_Button, {\n        onClick: deleteQuestionBank,\n        style: {\n          marginLeft: '12px',\n          color: 'red'\n        }\n      }, \"\\u5220\\u9664\") : this.renderPopover());\n      var columns = [{\n        title: '名称',\n        dataIndex: 'name',\n        key: 'name',\n        width: '51%',\n        render: function render(v, r) {\n          return React.createElement(SubscriptionCourseName, {\n            href: \"/subscription-course-detail/ck0c5g53a0hxc0i34q4xduzjt/subscription-course-series-detail/\".concat(r.id)\n          }, v);\n        }\n      }, {\n        title: '类型',\n        dataIndex: 'type',\n        key: 'type',\n        width: '14.5%'\n      }, {\n        title: '操作人',\n        dataIndex: 'questionBankRelatedOperator',\n        render: function render(v) {\n          return v && v.account.person.name;\n        },\n        width: '14.5%'\n      }, {\n        title: '关联时间',\n        dataIndex: 'questionBankRelatedAt',\n        sorter: this.sortTime,\n        render: function render(v) {\n          return v && format(v, 'YYYY/MM/DD HH:mm');\n        }\n      }];\n      return React.createElement(React.Fragment, null, React.createElement(PageBlock, null, React.createElement(PageInfoHeader, {\n        text: name,\n        badge: badge(),\n        buttons: buttons\n      }), React.createElement(HeaderDetail, null, React.createElement(InfoBodyWrapper, null, React.createElement(InfoBody, null, React.createElement(LineWrapper, null, React.createElement(Item, null, React.createElement(ItemTitle, null, \"ID\\uFF1A\"), React.createElement(ItemContent, null, no)), React.createElement(Item, null, React.createElement(ItemTitle, null, \"\\u5DF2\\u5173\\u8054\\u8BB0\\u5F55\\u6570\\uFF1A\"), React.createElement(ItemContent, null, relatedSubscriptionCourseSeriesCount), !!relatedSubscriptionCourseSeriesCount && React.createElement(\"a\", {\n        style: {\n          marginLeft: 12\n        },\n        onClick: this.openOrCloseModal\n      }, \"\\u67E5\\u770B\\u8BB0\\u5F55\"))), React.createElement(LineWrapper, null, React.createElement(Item, null, React.createElement(ItemTitle, null, \"\\u521B\\u5EFA\\u4EBA\\uFF1A\"), React.createElement(CreatorWrapper, null, React.createElement(_Avatar, {\n        size: 28,\n        icon: \"user\",\n        src: person.avatar,\n        style: {\n          marginRight: 8,\n          marginTop: -4\n        }\n      }), React.createElement(\"span\", null, person.name, \" | \", person.nickname))), React.createElement(Item, null, React.createElement(ItemTitle, null, \"\\u521B\\u5EFA\\u65F6\\u95F4\\uFF1A\"), React.createElement(ItemContent, null, format(createdAt, 'YYYY/MM/DD')))))))), React.createElement(_Modal, {\n        width: 893,\n        bodyStyle: BodyStyle,\n        title: React.createElement(ModalTitle, null, \"\\u5173\\u8054\\u8BB0\\u5F55\"),\n        visible: visible,\n        onCancel: this.openOrCloseModal,\n        footer: null\n      }, React.createElement(ModalWrapper, null, React.createElement(ListSubscriptionCourse, {\n        query: QueryListSubscriptionCourse,\n        variables: this.variables\n      }, function (_ref) {\n        var data = _ref.data,\n            queryLoading = _ref.loading,\n            refetch = _ref.refetch,\n            error = _ref.error;\n        _this2.refetch = refetch;\n\n        if (queryLoading) {\n          return React.createElement(Loading, null);\n        }\n\n        if (error) {\n          return null;\n        }\n\n        var listData = data.listSubscriptionCourseSerieses.map(function (v) {\n          return _objectSpread({}, v, {\n            type: '订阅课程'\n          });\n        });\n        return React.createElement(_Table, {\n          style: {\n            width: '100%'\n          },\n          pagination: false,\n          columns: columns,\n          dataSource: listData,\n          loading: loading\n        });\n      }))));\n    }\n  }]);\n\n  return Header;\n}(Component);\n\nexport { Header as default };\nvar InfoBodyWrapper = styled.div.withConfig({\n  displayName: \"Header__InfoBodyWrapper\",\n  componentId: \"sc-1b2t45f-0\"\n})([\"width:580px;\"]);\nvar BodyStyle = {\n  padding: 0,\n  height: 407,\n  overflow: 'hidden',\n  overflowY: 'scroll'\n};\nvar HeaderDetail = styled.div.withConfig({\n  displayName: \"Header__HeaderDetail\",\n  componentId: \"sc-1b2t45f-1\"\n})([\"display:flex;align-items:center;justify-content:space-between;\"]);\nvar CreatorWrapper = styled.div.withConfig({\n  displayName: \"Header__CreatorWrapper\",\n  componentId: \"sc-1b2t45f-2\"\n})([\"display:flex;justify-content:center;color:#172b4d;word-break:break-all;\"]);\nvar SwitchText = styled.span.withConfig({\n  displayName: \"Header__SwitchText\",\n  componentId: \"sc-1b2t45f-3\"\n})([\"margin-right:8px;color:#172b4d;\"]);\nvar ModalTitle = styled.div.withConfig({\n  displayName: \"Header__ModalTitle\",\n  componentId: \"sc-1b2t45f-4\"\n})([\"width:100%;font-size:16px;font-weight:500;color:#172b4d;text-align:center;\"]);\nvar SubscriptionCourseName = styled.a.withConfig({\n  displayName: \"Header__SubscriptionCourseName\",\n  componentId: \"sc-1b2t45f-5\"\n})([\"display:block;width:422px;overflow:hidden;text-overflow:ellipsis;white-space:nowrap;\"]);\nvar ModalWrapper = styled.div.withConfig({\n  displayName: \"Header__ModalWrapper\",\n  componentId: \"sc-1b2t45f-6\"\n})([\".ant-table{color:#172b4d;table a{color:#5674bf;}.ant-table-column-title{font-size:14px;line-height:22px;color:#172b4d;}.ant-table-tbody{font-size:14px;.ant-badge-status-text{font-size:14px;}}}\"]);","map":null,"metadata":{},"sourceType":"module"}