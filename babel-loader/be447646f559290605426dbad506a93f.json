{"ast":null,"code":"import _classCallCheck from \"@babel/runtime-corejs2/helpers/esm/classCallCheck\";\nimport _possibleConstructorReturn from \"@babel/runtime-corejs2/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime-corejs2/helpers/esm/getPrototypeOf\";\nimport _inherits from \"@babel/runtime-corejs2/helpers/esm/inherits\";\nimport _taggedTemplateLiteral from \"@babel/runtime-corejs2/helpers/esm/taggedTemplateLiteral\";\n\nfunction _templateObject() {\n  var data = _taggedTemplateLiteral([\"\\n  query getQuestionBankById($id: ID!) {\\n    getQuestionBankById(id: $id) {\\n      ...questionBank\\n    }\\n  }\\n  \", \"\\n\"]);\n\n  _templateObject = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n\nimport gql from 'graphql-tag';\nimport { Query } from 'react-apollo';\nimport { FragmentQuestionBank } from '../../Fragments';\nexport var QueryGetQuestionBankById = gql(_templateObject(), FragmentQuestionBank);\n\nvar GetQuestionBankById =\n/*#__PURE__*/\nfunction (_Query) {\n  _inherits(GetQuestionBankById, _Query);\n\n  function GetQuestionBankById() {\n    _classCallCheck(this, GetQuestionBankById);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(GetQuestionBankById).apply(this, arguments));\n  }\n\n  return GetQuestionBankById;\n}(Query);\n\nexport { GetQuestionBankById as default };","map":null,"metadata":{},"sourceType":"module"}