{"ast":null,"code":"import \"antd/lib/button/style\";\nimport _Button from \"antd/lib/button\";\nimport \"antd/lib/badge/style\";\nimport _Badge from \"antd/lib/badge\";\nimport \"antd/lib/col/style\";\nimport _Col from \"antd/lib/col\";\nimport \"antd/lib/breadcrumb/style\";\nimport _Breadcrumb from \"antd/lib/breadcrumb\";\nimport \"antd/lib/icon/style\";\nimport _Icon from \"antd/lib/icon\";\nimport _classCallCheck from \"@babel/runtime-corejs2/helpers/esm/classCallCheck\";\nimport _possibleConstructorReturn from \"@babel/runtime-corejs2/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime-corejs2/helpers/esm/getPrototypeOf\";\nimport _assertThisInitialized from \"@babel/runtime-corejs2/helpers/esm/assertThisInitialized\";\nimport _inherits from \"@babel/runtime-corejs2/helpers/esm/inherits\";\nimport _defineProperty from \"@babel/runtime-corejs2/helpers/esm/defineProperty\";\nimport \"antd/lib/modal/style\";\nimport _Modal from \"antd/lib/modal\";\nimport Link from 'next/link';\nimport React from 'react';\nimport styled from 'styled-components';\nvar TitleBoard = styled.div.withConfig({\n  displayName: \"SubscriptionCourseDetailContent__TitleBoard\",\n  componentId: \"o93xc0-0\"\n})([\"padding:2px;background-color:#fff;\"]);\nvar FormattedRow = styled.div.withConfig({\n  displayName: \"SubscriptionCourseDetailContent__FormattedRow\",\n  componentId: \"o93xc0-1\"\n})([\"display:flex;justify-content:space-between;padding:0 30px;margin:14px;\"]);\nvar confirm = _Modal.confirm;\nvar info = _Modal.info;\n\nvar SubscriptionCourseDetailContent =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(SubscriptionCourseDetailContent, _React$Component);\n\n  function SubscriptionCourseDetailContent() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, SubscriptionCourseDetailContent);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(SubscriptionCourseDetailContent)).call.apply(_getPrototypeOf2, [this].concat(args)));\n\n    _defineProperty(_assertThisInitialized(_this), \"showConfirm\", function (action, record) {\n      if (action === '上线') {\n        if (!record.hasOnlineSeries) {\n          info({\n            centered: true,\n            content: React.createElement(\"p\", {\n              style: {\n                fontSize: '13px'\n              }\n            }, \"\\u6B64\\u8BFE\\u7A0B\\u5185\\u672A\\u627E\\u5230\\u751F\\u6548\\u4E2D\\u72B6\\u6001\\u7684\\u8BFE\\u7A0B\\u5468\\u671F\\uFF0C\\u6682\\u65F6\\u65E0\\u6CD5\\u4E0A\\u7EBF\\u6B64\\u8BFE\\u7A0B\\u3002\"),\n            icon: React.createElement(_Icon, {\n              type: \"exclamation-circle\",\n              style: {\n                color: 'orange'\n              },\n              theme: \"filled\"\n            }),\n            okText: '我知道了',\n            okType: 'primary',\n            title: \"\\u65E0\\u6CD5\\u4E0A\\u7EBF\\u6B64\\u8BFE\\u7A0B\"\n          });\n        } else {\n          confirm({\n            cancelText: '取消',\n            centered: true,\n            icon: React.createElement(_Icon, {\n              type: \"question-circle\",\n              theme: \"filled\"\n            }),\n            okText: '确认上线',\n            okType: 'primary',\n            onOk: _this.props.enableMutation.bind(_assertThisInitialized(_this), record.id),\n            title: \"\\u786E\\u8BA4\\u8981\\u4E0A\\u7EBF\\u6B64\\u8BFE\\u7A0B\\u5417\\uFF1F\"\n          });\n        }\n      } else if (action === '下线') {\n        confirm({\n          cancelText: '取消',\n          centered: true,\n          content: React.createElement(\"div\", {\n            style: {\n              fontSize: '13px'\n            }\n          }, React.createElement(\"p\", null, \"\\u4E0B\\u7EBF\\u6B64\\u8BFE\\u7A0B\\u540E\\uFF1A\"), React.createElement(\"p\", null, \"1\\u3001\\u672A\\u8BA2\\u9605\\u7684\\u7528\\u6237\\u5C06\\u65E0\\u6CD5\\u770B\\u5230\\u6B64\\u8BFE\\u7A0B\\uFF08\\u4F8B\\uFF0C\\u65E0\\u6CD5\\u518D\\u88AB\\u8BA2\\u9605\\uFF09\\uFF1B\"), React.createElement(\"p\", null, \"2\\u3001\\u5DF2\\u8BA2\\u9605\\u7684\\u7528\\u6237\\u5C06\\u80FD\\u7EE7\\u7EED\\u8BBF\\u95EE\\u76F8\\u5173\\u8BFE\\u7A0B\\u6570\\u636E\\uFF1B\"), React.createElement(\"p\", null, \"3\\u3001MIS \\u7CFB\\u7EDF\\u5185\\u53EF\\u4EE5\\u88AB\\u770B\\u5230\\uFF0C\\u4F46\\u65E0\\u6CD5\\u88AB\\u5E94\\u7528\\u5230\\u4E1A\\u52A1\\u4E2D\\uFF1B\"), React.createElement(\"p\", null, \"3\\u3001MIS \\u7CFB\\u7EDF\\u5185\\u53EF\\u4EE5\\u88AB\\u770B\\u5230\\uFF0C\\u4F46\\u65E0\\u6CD5\\u88AB\\u5E94\\u7528\\u5230\\u4E1A\\u52A1\\u4E2D\\uFF1B\"), React.createElement(\"p\", null, \"4\\u3001\\u4E0B\\u7EBF\\u540E\\u7684\\u8BFE\\u7A0B\\u53EF\\u4EE5\\u91CD\\u65B0\\u4E0A\\u7EBF\\u3002\")),\n          icon: React.createElement(_Icon, {\n            type: \"question-circle\",\n            theme: \"filled\"\n          }),\n          okText: '确认下线',\n          okType: 'primary',\n          onOk: _this.props.disableMutation.bind(_assertThisInitialized(_this), record.id),\n          title: \"\\u786E\\u5B9A\\u8981\\u4E0B\\u7EBF\\u6B64\\u8BFE\\u7A0B\\u5417\\uFF1F\"\n        });\n      } else if (action === '移除') {\n        confirm({\n          cancelText: '取消',\n          centered: true,\n          content: React.createElement(\"div\", {\n            style: {\n              fontSize: '13px'\n            }\n          }, React.createElement(\"p\", null, \"\\u79FB\\u9664\\u6B64\\u8BFE\\u7A0B\\u540E\\uFF1A\"), React.createElement(\"p\", null, \"1\\u3001\\u672A\\u8BA2\\u9605\\u7684\\u7528\\u6237\\u5C06\\u65E0\\u6CD5\\u770B\\u5230\\u6B64\\u8BFE\\u7A0B\\uFF08\\u4F8B\\uFF0C\\u65E0\\u6CD5\\u518D\\u88AB\\u8D2D\\u4E70\\uFF09\\uFF1B\"), React.createElement(\"p\", null, \"2\\u3001\\u5DF2\\u8BA2\\u9605\\u7684\\u7528\\u6237\\u5C06\\u80FD\\u7EE7\\u7EED\\u8BBF\\u95EE\\u76F8\\u5173\\u8BFE\\u7A0B\\u6570\\u636E\\uFF1B\"), React.createElement(\"p\", null, \"3\\u3001MIS \\u7CFB\\u7EDF\\u5185\\u7528\\u6237\\u65E0\\u6CD5\\u67E5\\u770B\\u5230\\u8BE5\\u8BFE\\u7A0B\\u3002\")),\n          icon: React.createElement(_Icon, {\n            type: \"question-circle\",\n            theme: \"filled\"\n          }),\n          okText: '确认移除',\n          okType: 'danger',\n          onOk: _this.props.removeMutation.bind(_assertThisInitialized(_this), record.id),\n          title: \"\\u786E\\u5B9A\\u8981\\u79FB\\u9664\\u6B64\\u8BFE\\u7A0B\\u5417\\uFF1F\"\n        });\n      }\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"switchEdit\", function (data) {\n      var fillData = data ? {\n        id: data.id,\n        name: data.name,\n        industryId: data.industry.id,\n        remark: data.remark,\n        courseCatName: data.category\n      } : {};\n\n      _this.props.setCurrentSub(fillData);\n\n      _this.props.switchPage('edit');\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"render\", function () {\n      var data = _this.props.data;\n      return React.createElement(TitleBoard, null, React.createElement(FormattedRow, null, React.createElement(_Col, {\n        span: 24\n      }, React.createElement(_Breadcrumb, {\n        style: {\n          fontSize: '12px'\n        }\n      }, React.createElement(_Breadcrumb.Item, null, React.createElement(Link, {\n        href: \"/subscription-course-management\"\n      }, React.createElement(\"a\", null, \"\\u8BFE\\u7A0B\\u7BA1\\u7406\"))), React.createElement(_Breadcrumb.Item, null, React.createElement(\"span\", null, \"\\u8BFE\\u7A0B\\u8BE6\\u60C5\"))))), React.createElement(FormattedRow, null, React.createElement(\"div\", {\n        style: {\n          display: 'flex',\n          // tslint:disable-next-line:no-duplicate-string\n          justifyContent: 'flex-start'\n        }\n      }, React.createElement(\"div\", {\n        style: {\n          fontWeight: 'bold',\n          paddingRight: '10px',\n          wordBreak: 'break-word'\n        }\n      }, data.name), React.createElement(\"div\", {\n        style: {\n          flexShrink: 0\n        }\n      }, React.createElement(_Badge, {\n        status: /未[^\\x00-\\x7F]+/.test(data.status.name) ? 'warning' : data.status.name === '已上线' ? 'success' : /已下线/.test(data.status.name) ? 'default' : 'error'\n      }), React.createElement(\"span\", {\n        style: {\n          fontSize: '12px'\n        }\n      }, data.status.name))), React.createElement(\"div\", {\n        style: {\n          flexShrink: 0,\n          textAlign: 'right'\n        }\n      }, React.createElement(_Button, {\n        type: \"default\",\n        style: {\n          marginLeft: '12px'\n        },\n        onClick: _this.switchEdit.bind(_assertThisInitialized(_this), data)\n      }, \"\\u7F16\\u8F91\"), data.status.name === '已上线' ? React.createElement(_Button, {\n        type: \"default\",\n        style: {\n          marginLeft: '12px'\n        },\n        onClick: _this.showConfirm.bind(_assertThisInitialized(_this), '下线', data)\n      }, \"\\u4E0B\\u7EBF\") : React.createElement(_Button, {\n        type: \"default\",\n        style: {\n          marginLeft: '12px'\n        },\n        onClick: _this.showConfirm.bind(_assertThisInitialized(_this), '上线', data)\n      }, \"\\u4E0A\\u7EBF\"), React.createElement(_Button, {\n        type: \"danger\",\n        style: {\n          marginLeft: '12px'\n        },\n        onClick: _this.showConfirm.bind(_assertThisInitialized(_this), '移除', data)\n      }, \"\\u79FB\\u9664\"))), React.createElement(FormattedRow, {\n        style: {\n          fontSize: '12px',\n          justifyContent: 'flex-start'\n        }\n      }, React.createElement(\"div\", null, React.createElement(\"span\", {\n        style: {\n          color: '#D8D8D8'\n        }\n      }, \"\\u6240\\u5C5E\\u884C\\u4E1A\\uFF1A\"), React.createElement(\"span\", null, data.industry.name)), React.createElement(\"div\", {\n        style: {\n          marginLeft: '88px'\n        }\n      }, React.createElement(\"span\", {\n        style: {\n          color: '#D8D8D8'\n        }\n      }, \"\\u6240\\u5C5E\\u5206\\u7C7B\\uFF1A\"), React.createElement(\"span\", null, data.category))), React.createElement(FormattedRow, {\n        style: {\n          fontSize: '12px',\n          justifyContent: 'flex-start'\n        }\n      }, React.createElement(\"div\", {\n        style: {\n          verticalAlign: 'top',\n          flexShrink: 0,\n          color: '#D8D8D8'\n        }\n      }, \"\\u5BF9\\u5185\\u5907\\u6CE8\\uFF1A\"), React.createElement(\"div\", {\n        style: {\n          width: '700px'\n        }\n      }, data.remark ? data.remark.split('\\n').map(function (line, index) {\n        return React.createElement(\"span\", {\n          key: index\n        }, line, React.createElement(\"br\", null));\n      }) : null)));\n    });\n\n    return _this;\n  }\n\n  return SubscriptionCourseDetailContent;\n}(React.Component);\n\nexport { SubscriptionCourseDetailContent };","map":null,"metadata":{},"sourceType":"module"}