{"ast":null,"code":"import \"antd/lib/badge/style\";\nimport _Badge from \"antd/lib/badge\";\nimport _classCallCheck from \"@babel/runtime-corejs2/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime-corejs2/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime-corejs2/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime-corejs2/helpers/esm/getPrototypeOf\";\nimport _assertThisInitialized from \"@babel/runtime-corejs2/helpers/esm/assertThisInitialized\";\nimport _inherits from \"@babel/runtime-corejs2/helpers/esm/inherits\";\nimport _defineProperty from \"@babel/runtime-corejs2/helpers/esm/defineProperty\";\nimport React from 'react';\nimport styled from 'styled-components';\nimport { CommonPBlock, FlexCenterColumn, FlexDisplay } from '../../../../lib/commonCss';\n\n/**\n *  pathwayStatus1: createStaticPathwayStatusEnum(data:{\n *    key: \"PLANNING\",\n *    name: \"规划中\"\n *  }) {id},\n *  pathwayStatus2: createStaticPathwayStatusEnum(data:{\n *    key: \"COMPLETED\",\n *    name: \"已完成\"\n *  }) {id},\n *  pathwayStatus3: createStaticPathwayStatusEnum(data:{\n *    key: \"UNPLANNED\",\n *    name: \"未规划\"\n */\nvar ShowPathWay =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(ShowPathWay, _React$Component);\n\n  function ShowPathWay() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, ShowPathWay);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(ShowPathWay)).call.apply(_getPrototypeOf2, [this].concat(args)));\n\n    _defineProperty(_assertThisInitialized(_this), \"pathWayStatus\", {\n      UNPLANNED: {\n        text: '未规划',\n        status: 'warning',\n        actionText: '立即规划'\n      },\n      PLANNING: {\n        text: '规划中',\n        status: 'warning',\n        actionText: '继续规划'\n      },\n      COMPLETED: {\n        text: '已发布',\n        status: 'success',\n        actionText: '查看详情'\n      }\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"pathWayAction\", function () {\n      var itemData = _this.props.itemData;\n      var pathway = itemData.reservation.pathway; // 继续规划\n\n      if (pathway && pathway.status.key === 'PLANNING') {\n        window.open(\"/pathway-detail/\".concat(pathway.id), '_blank');\n      }\n\n      if (pathway && pathway.id && pathway.status.key === 'UNPLANNED') {\n        window.open(\"/create-pathway/\".concat(pathway.id), '_blank');\n      } //  未规划  || (pathway && pathway.status.key === 'UNPLANNED')\n\n\n      if (!pathway) {\n        var reservation = itemData.reservation;\n\n        if (reservation.status.key === 'COMPLETED') {\n          var typeObject = {\n            studentAccountId: reservation.studentAccount.id,\n            reservationId: reservation.id\n          };\n\n          _this.props.modalMutation('CreateUnplannedPathway', typeObject).then(function (result) {\n            // 点击立即规划后\n            if (result.data && result.data.createUnplannedPathway) {\n              var createUnplannedPathway = result.data.createUnplannedPathway;\n              window.open(\"/create-pathway/\".concat(createUnplannedPathway.id), '_blank');\n            }\n          });\n\n          return;\n        }\n\n        _this.props.toSetState({\n          step: 2\n        });\n      } // 已规划\n\n\n      if (pathway && pathway.status.key === 'COMPLETED') {\n        window.open(\"/pathway-detail/\".concat(pathway.id), '_blank');\n      }\n    });\n\n    return _this;\n  }\n\n  _createClass(ShowPathWay, [{\n    key: \"render\",\n    value: function render() {\n      var itemData = this.props.itemData;\n      var pathway = itemData.reservation.pathway;\n      var key = pathway && pathway.status.key || 'UNPLANNED';\n\n      if (pathway && pathway.id && pathway.status.key === 'UNPLANNED') {\n        key = 'PLANNING';\n      }\n\n      var statusData = pathway ? this.pathWayStatus[key] : this.pathWayStatus.UNPLANNED;\n      return React.createElement(FlexCenterColumn, {\n        style: {\n          marginTop: '24px'\n        }\n      }, React.createElement(CommonPBlock, null, \"\\u5B66\\u4E60\\u8BA1\\u5212\"), React.createElement(FlexDisplay, {\n        style: {\n          marginTop: '4px'\n        }\n      }, React.createElement(_Badge, {\n        status: statusData.status\n      }), React.createElement(BadgeWrap, null, statusData.text), React.createElement(Button, {\n        onClick: this.pathWayAction\n      }, statusData.actionText)));\n    }\n  }]);\n\n  return ShowPathWay;\n}(React.Component);\n\nexport default ShowPathWay;\nvar BadgeWrap = styled.span.withConfig({\n  displayName: \"ShowPathWay__BadgeWrap\",\n  componentId: \"mvldkf-0\"\n})([\"margin:0 12px 0 4px;font-size:14px;\"]);\nvar Button = styled.a.withConfig({\n  displayName: \"ShowPathWay__Button\",\n  componentId: \"mvldkf-1\"\n})([\"font-size:14px;\"]);","map":null,"metadata":{},"sourceType":"module"}