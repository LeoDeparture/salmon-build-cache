{"ast":null,"code":"import \"antd/lib/button/style\";\nimport _Button from \"antd/lib/button\";\nimport \"antd/lib/row/style\";\nimport _Row from \"antd/lib/row\";\nimport \"antd/lib/col/style\";\nimport _Col from \"antd/lib/col\";\nimport \"antd/lib/form/style\";\nimport _Form from \"antd/lib/form\";\nimport \"antd/lib/message/style\";\nimport _message from \"antd/lib/message\";\nimport _objectSpread from \"@babel/runtime-corejs2/helpers/esm/objectSpread\";\nimport _classCallCheck from \"@babel/runtime-corejs2/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime-corejs2/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime-corejs2/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime-corejs2/helpers/esm/getPrototypeOf\";\nimport _assertThisInitialized from \"@babel/runtime-corejs2/helpers/esm/assertThisInitialized\";\nimport _inherits from \"@babel/runtime-corejs2/helpers/esm/inherits\";\nimport _defineProperty from \"@babel/runtime-corejs2/helpers/esm/defineProperty\";\nimport CheckboxGroup from 'antd/lib/checkbox/Group';\nimport TextArea from 'antd/lib/input/TextArea';\nimport Router from 'next/router';\nimport React, { Component } from 'react';\nimport styled from 'styled-components';\nimport LimitedInput from '../../../../../components/Input/LimitedInput';\nimport NumberInput from '../../../../../components/Input/NumberInput';\nimport PriceDiff from '../../../../../components/PriceDiff';\nimport ZhiWenSelect from '../../../../../components/Select/ZhiWenSelect';\nimport { allEnum } from '../../../../../lib/commonJs';\nimport { NoEmptyOtherRule } from '../../../../../lib/commonRule';\nimport { BlockContent, formStyle, LabelDescription, LabelWrapper } from '../../../components/CSSComponents';\nimport BlockHeader from '../BlockHeader';\nimport { PopoverLabel } from '../PriceInfo/EditPriceInfo';\nimport ExceptionCompanyMaxCount from './ExceptionCompanyMaxCount';\nimport { priceDifferenceConfigsText } from './JobService';\nimport ModalRefundPlan from './ModalRefundPlan';\nimport RequiredDomain from './RequiredDomain';\n\nvar EditJobService =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(EditJobService, _Component);\n\n  function EditJobService(props) {\n    var _this;\n\n    _classCallCheck(this, EditJobService);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(EditJobService).call(this, props));\n\n    _defineProperty(_assertThisInitialized(_this), \"openRefundPlanModal\", function () {\n      _this.setState(function (prev) {\n        return {\n          modalVisible: !prev.modalVisible\n        };\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"onPriceDiffChange\", function (v) {\n      _this.setState({\n        priceDifferenceConfigs: v\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"onSelectCompanyLevel\", function (selectedCompanyLevelId) {\n      // 切换等级, 清空已选的业务领域\n      _this.props.form.setFieldsValue({\n        requiredDomainIds: []\n      }); // TODO: 重置差价\n      // TODO: 重置可剔除公司数量\n\n\n      _this.setState({\n        selectedCompanyLevelId: selectedCompanyLevelId\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"toValidateFields\", function (type) {\n      _this.props.form.validateFieldsAndScroll([type], {\n        force: true\n      }, function () {\n        return;\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"onChangeDomainRadio\", function (e) {\n      _this.setState({\n        domainDisabled: !e.target.value\n      }, function () {\n        _this.toValidateFields('requiredDomainIds');\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"changeRadioStatus\", function (v) {\n      var value = v.target.value;\n      var notRemovableState = true;\n      var companyMaxCountDisabledState = true;\n\n      if (value === '-1') {\n        notRemovableState = true;\n        companyMaxCountDisabledState = true;\n      }\n\n      if (value === 'none') {\n        notRemovableState = false;\n        companyMaxCountDisabledState = true;\n      }\n\n      if (value === 'yes') {\n        notRemovableState = false;\n        companyMaxCountDisabledState = false;\n      }\n\n      _this.setState(_objectSpread({}, _this.state, {\n        companyMaxCountDisabled: companyMaxCountDisabledState,\n        notRemovable: notRemovableState\n      }), function () {\n        _this.toValidateFields('exceptionCompanyMaxCount');\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"onClickSave\", function (e) {\n      e.preventDefault();\n\n      _this.props.form.validateFields(function (err, values) {\n        if (!err) {\n          var _this$props = _this.props,\n              updatePlan = _this$props.updatePlan,\n              switchEdit = _this$props.switchEdit;\n          var _this$state = _this.state,\n              domainDisabled = _this$state.domainDisabled,\n              notRemovable = _this$state.notRemovable,\n              companyMaxCountDisabled = _this$state.companyMaxCountDisabled,\n              priceDifferenceConfigs = _this$state.priceDifferenceConfigs;\n          var month = values.month,\n              day = values.day,\n              requiredDomainIds = values.requiredDomainIds;\n          var validDuration = month && month === 1000 ? month * 30 : month * 30 + day;\n          delete values.month;\n          delete values.day;\n\n          _this.setState({\n            loading: true\n          });\n\n          var radioValue = 0;\n\n          if (!companyMaxCountDisabled) {\n            radioValue = values.exceptionCompanyMaxCount;\n          }\n\n          if (notRemovable) {\n            radioValue = -1;\n          }\n\n          updatePlan({\n            id: Router.query.id,\n            jobBusinessJobRecommendation: _objectSpread({}, values, {\n              requiredDomainIds: domainDisabled ? [] : requiredDomainIds,\n              // 如果[必选业务领域]选择[无], 不传 id\n              exceptionCompanyMaxCount: radioValue,\n              // 如果不剔除, 剔除公司为 0 家, 无可剔除公司时 -1\n              priceDifferenceConfigs: priceDifferenceConfigs,\n              validDuration: validDuration\n            })\n          }).then(function () {\n            _message.success('已保存'); // 避免在接口返回之前,更新状态, 导致渲染错误\n\n\n            setTimeout(function () {\n              switchEdit();\n            });\n          }).finally(function () {\n            _this.setState({\n              loading: false\n            });\n          });\n        }\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"validatorForRadio\", function (type, _rule, value, callback) {\n      var _this$state2 = _this.state,\n          domainDisabled = _this$state2.domainDisabled,\n          companyMaxCountDisabled = _this$state2.companyMaxCountDisabled;\n\n      if (type === 'domainDisabled' && !domainDisabled && !(value && value.length) || type === 'companyMaxCountDisabled' && !companyMaxCountDisabled && (value === '' || !value)) {\n        callback('此字段不可为空');\n        return;\n      }\n\n      callback();\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"checkMinAndMaxNumber\", function (_rule, value, callback) {\n      var getFieldValue = _this.props.form.getFieldValue;\n      var dayValue = getFieldValue('day');\n      var monthValue = getFieldValue('month');\n\n      if (!dayValue && !monthValue) {\n        callback(\"\\u6B64\\u5B57\\u6BB5\\u4E0D\\u53EF\\u4E3A\\u7A7A\\uFF0C\\u6700\\u5C11\\u586B\\u5199\\u4E00\\u9879\");\n      }\n\n      callback();\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"validateOtherField\", function (_rule, _value, callback) {\n      _this.toValidateFields('month');\n\n      callback();\n    });\n\n    _this.state = {\n      loading: false,\n      notRemovable: false,\n      dayRequired: true,\n      monthRequired: true,\n      modalVisible: false,\n      domainDisabled: true,\n      priceDifferenceConfigs: [],\n      companyMaxCountDisabled: true,\n      selectedCompanyLevelId: null\n    };\n    return _this;\n  } // 打开模板弹窗\n\n\n  _createClass(EditJobService, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this2 = this;\n\n      // 数据回填\n      var jobServiceData = this.props.servicePlan.jobBusinessJobRecommendationServiceConfig;\n      var name = jobServiceData.name,\n          validDuration = jobServiceData.validDuration,\n          introduction = jobServiceData.introduction,\n          jobCharacters = jobServiceData.jobCharacters,\n          refundPlan = jobServiceData.refundPlan,\n          companyLevel = jobServiceData.companyLevel,\n          requiredDomains = jobServiceData.requiredDomains,\n          maxCount = jobServiceData.exceptionCompanyMaxCount,\n          priceDifferenceConfigs = jobServiceData.priceDifferenceConfigs;\n      var month = null;\n      var day = null;\n\n      if (validDuration) {\n        if (validDuration < 30) {\n          day = validDuration;\n          month = null;\n        } else if (validDuration >= 30 && validDuration <= 30000) {\n          day = validDuration % 30 === 0 ? null : validDuration % 30;\n          month = validDuration % 30 === 0 ? validDuration / 30 : (validDuration - day) / 30;\n        }\n      }\n\n      var data = {\n        name: name,\n        month: month,\n        day: day,\n        introduction: introduction,\n        jobCharacterIds: jobCharacters && jobCharacters.map(function (v) {\n          return v.id;\n        }),\n        refundPlan: refundPlan,\n        companyLevelId: companyLevel ? companyLevel.id : undefined,\n        exceptionCompanyMaxCount: maxCount <= 0 ? null : maxCount\n      }; // 根据数据更新 radio 的禁用/启用状态\n\n      this.setState({\n        selectedCompanyLevelId: companyLevel && companyLevel.id,\n        domainDisabled: !requiredDomains.length,\n        notRemovable: maxCount === -1,\n        companyMaxCountDisabled: maxCount <= 0,\n        priceDifferenceConfigs: priceDifferenceConfigs.map(function (v) {\n          return {\n            companyLevelId: v.companyLevel.id,\n            price: v.price\n          };\n        })\n      }, function () {\n        _this2.props.form.setFieldsValue(data); // 等待接口返回相应的选项后再执行回填, 避免渲染错误\n\n\n        setTimeout(function () {\n          _this2.props.form.setFieldsValue({\n            requiredDomainIds: requiredDomains.map(function (v) {\n              return v.id;\n            })\n          });\n        });\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var getFieldDecorator = this.props.form.getFieldDecorator;\n      var _this$props2 = this.props,\n          switchEdit = _this$props2.switchEdit,\n          servicePlan = _this$props2.servicePlan,\n          editStatus = _this$props2.editStatus;\n      var _this$state3 = this.state,\n          modalVisible = _this$state3.modalVisible,\n          selectedCompanyLevelId = _this$state3.selectedCompanyLevelId,\n          domainDisabled = _this$state3.domainDisabled,\n          notRemovable = _this$state3.notRemovable,\n          companyMaxCountDisabled = _this$state3.companyMaxCountDisabled;\n      var plainOptions = allEnum().listStaticJobCharacterEnum.map(function (v) {\n        return {\n          label: v.name,\n          value: v.id\n        };\n      });\n      var priceDifferenceConfigs = servicePlan.jobBusinessJobRecommendationServiceConfig.priceDifferenceConfigs;\n      var priceDiffData = priceDifferenceConfigs.map(function (v) {\n        return {\n          price: v.price,\n          companyLevelId: v.companyLevel.id\n        };\n      });\n      return React.createElement(BlockContent, null, React.createElement(BlockHeader, {\n        title: \"\\u5C97\\u4F4D\\u63A8\\u8350\\uFF08\\u4E3B\\u7533\\uFF09\",\n        showBtn: !editStatus\n      }), React.createElement(_Form, {\n        style: formStyle,\n        colon: false\n      }, React.createElement(_Row, {\n        gutter: 24\n      }, React.createElement(_Col, {\n        span: 8\n      }, React.createElement(_Form.Item, {\n        label: \"\\u670D\\u52A1\\u540D\\u79F0\"\n      }, getFieldDecorator('name', {\n        rules: NoEmptyOtherRule\n      })(React.createElement(LimitedInput, {\n        limit: 32,\n        placeholder: \"\\u8BF7\\u8F93\\u5165\"\n      })))), React.createElement(_Col, {\n        span: 8\n      }, React.createElement(_Form.Item, {\n        label: \"\\u9879\\u76EE\\u6709\\u6548\\u671F\",\n        required: true,\n        style: {\n          margin: 0\n        }\n      }), React.createElement(_Row, {\n        gutter: 8\n      }, React.createElement(_Col, {\n        span: 13\n      }, React.createElement(_Form.Item, null, getFieldDecorator('month', {\n        rules: [{\n          validator: this.checkMinAndMaxNumber\n        }]\n      })(React.createElement(NumberInput, {\n        max: 1000,\n        min: 1,\n        placeholder: \"\\u6700\\u59271000\",\n        style: {\n          width: '77%',\n          marginRight: '8px'\n        }\n      })), React.createElement(\"span\", null, \"\\u4E2A\\u6708\"))), React.createElement(_Col, {\n        span: 11\n      }, React.createElement(_Form.Item, null, getFieldDecorator('day', {\n        rules: [{\n          validator: this.validateOtherField\n        }]\n      })(React.createElement(NumberInput, {\n        max: 30,\n        min: 1,\n        placeholder: \"\\u6700\\u592730\",\n        style: {\n          width: '80%',\n          marginRight: '8px'\n        }\n      })), React.createElement(\"span\", null, \"\\u5929\"))))), React.createElement(_Col, {\n        span: 8\n      }, React.createElement(_Form.Item, {\n        colon: false,\n        label: \"\\u670D\\u52A1\\u4ECB\\u7ECD\"\n      }, getFieldDecorator('introduction')(React.createElement(TextArea, {\n        rows: 2,\n        placeholder: \"\\u8BF7\\u8F93\\u5165\"\n      }))))), React.createElement(_Row, {\n        gutter: 24\n      }, React.createElement(_Col, {\n        span: 8\n      }, React.createElement(_Form.Item, {\n        colon: false,\n        label: \"\\u5C97\\u4F4D\\u6027\\u8D28\"\n      }, getFieldDecorator('jobCharacterIds', {\n        rules: NoEmptyOtherRule\n      })(React.createElement(CheckboxGroup, {\n        options: plainOptions\n      })))), React.createElement(_Col, {\n        span: 16\n      }, React.createElement(_Form.Item, {\n        colon: false,\n        label: React.createElement(LabelWrapper, null, React.createElement(\"label\", null, \"\\u9000\\u6B3E\\u65B9\\u6848\"), React.createElement(LabelDescription, {\n          style: {\n            cursor: 'pointer'\n          },\n          onClick: this.openRefundPlanModal\n        }, \"\\u67E5\\u770B\\u4E66\\u5199\\u6A21\\u7248\"))\n      }, getFieldDecorator('refundPlan', {\n        rules: NoEmptyOtherRule\n      })(React.createElement(TextArea, {\n        rows: 5,\n        placeholder: \"\\u8BF7\\u8F93\\u5165\"\n      }))))), React.createElement(_Row, {\n        gutter: 24\n      }, React.createElement(_Col, {\n        span: 8\n      }, React.createElement(_Form.Item, {\n        label: \"\\u76EE\\u6807\\u516C\\u53F8\\u7B49\\u7EA7\"\n      }, getFieldDecorator('companyLevelId', {\n        rules: NoEmptyOtherRule\n      })(React.createElement(ZhiWenSelect, {\n        type: \"zhiwen-company-level\",\n        onSelect: this.onSelectCompanyLevel\n      })))), React.createElement(_Col, {\n        span: 16\n      }, React.createElement(_Form.Item, {\n        colon: false,\n        label: PopoverLabel('跨级投递方案', priceDifferenceConfigsText)\n      }, React.createElement(PriceDiffWrapper, null, React.createElement(PriceDiff, {\n        baseLevelId: selectedCompanyLevelId,\n        onChangeValue: this.onPriceDiffChange,\n        data: priceDiffData\n      }))))), React.createElement(_Row, {\n        gutter: 24\n      }, React.createElement(_Col, {\n        span: 8\n      }, React.createElement(_Form.Item, {\n        label: \"\\u5FC5\\u9009\\u4E1A\\u52A1\\u9886\\u57DF\\u6216\\u884C\\u4E1A\"\n      }, getFieldDecorator('requiredDomainIds', {\n        rules: [{\n          validator: this.validatorForRadio.bind(this, 'domainDisabled')\n        }]\n      })(selectedCompanyLevelId ? React.createElement(RequiredDomain, {\n        disabled: domainDisabled,\n        companyLevelId: selectedCompanyLevelId,\n        industryId: servicePlan.industry.id,\n        onChangeRadio: this.onChangeDomainRadio\n      }) : React.createElement(Placeholder, null, \"\\u8BF7\\u5148\\u9009\\u62E9\\u300C\\u76EE\\u6807\\u516C\\u53F8\\u7B49\\u7EA7\\u300D\")))), React.createElement(_Col, {\n        span: 8\n      }, React.createElement(_Form.Item, {\n        colon: false,\n        label: \"\\u6700\\u591A\\u53EF\\u5254\\u9664\\u516C\\u53F8\\u6570\\u91CF\"\n      }, getFieldDecorator('exceptionCompanyMaxCount', {\n        rules: [{\n          validator: this.validatorForRadio.bind(this, 'companyMaxCountDisabled')\n        }]\n      })(React.createElement(ExceptionCompanyMaxCount, {\n        disabled: companyMaxCountDisabled,\n        notRemovable: notRemovable,\n        changeRadio: this.changeRadioStatus\n      }))))), React.createElement(\"div\", null, React.createElement(_Button, {\n        onClick: switchEdit,\n        style: {\n          marginRight: 12\n        }\n      }, \"\\u53D6\\u6D88\"), React.createElement(_Button, {\n        type: \"primary\",\n        onClick: this.onClickSave,\n        loading: this.state.loading\n      }, \"\\u4FDD\\u5B58\"))), React.createElement(ModalRefundPlan, {\n        visible: modalVisible,\n        onClick: this.openRefundPlanModal\n      }));\n    }\n  }]);\n\n  return EditJobService;\n}(Component);\n\nvar PriceDiffWrapper = styled.div.withConfig({\n  displayName: \"EditJobService__PriceDiffWrapper\",\n  componentId: \"sc-1b1csqu-0\"\n})([\"width:100%;height:128px;overflow:hidden;border-radius:4px;\"]);\nvar Placeholder = styled.div.withConfig({\n  displayName: \"EditJobService__Placeholder\",\n  componentId: \"sc-1b1csqu-1\"\n})([\"display:flex;align-items:center;flex:1;justify-content:center;height:64px;font-size:12px;color:#a2aab8;background:rgba(225,225,232,0.22);border-radius:4px;\"]);\n\nvar EditJobServiceForm = _Form.create()(EditJobService);\n\nexport default EditJobServiceForm;","map":null,"metadata":{},"sourceType":"module"}