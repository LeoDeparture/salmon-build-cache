{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime-corejs2/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime-corejs2/helpers/esm/asyncToGenerator\";\nimport _classCallCheck from \"@babel/runtime-corejs2/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime-corejs2/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime-corejs2/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime-corejs2/helpers/esm/getPrototypeOf\";\nimport _assertThisInitialized from \"@babel/runtime-corejs2/helpers/esm/assertThisInitialized\";\nimport _inherits from \"@babel/runtime-corejs2/helpers/esm/inherits\";\nimport _defineProperty from \"@babel/runtime-corejs2/helpers/esm/defineProperty\";\nimport _taggedTemplateLiteral from \"@babel/runtime-corejs2/helpers/esm/taggedTemplateLiteral\";\n\nfunction _templateObject() {\n  var data = _taggedTemplateLiteral([\"\\n  query getLinkFromShortLink($input: LinkInput!) {\\n    getLinkFromShortLink(input: $input) {\\n      link\\n    }\\n  }\\n\"]);\n\n  _templateObject = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n\nimport gql from 'graphql-tag';\nimport Router from 'next/router';\nimport React from 'react';\nimport { ApolloConsumer } from 'react-apollo';\nimport Loading from '../../components/Loading';\nvar getLinkQuery = gql(_templateObject());\n\nvar RedirectUrl =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(RedirectUrl, _React$Component);\n\n  function RedirectUrl() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, RedirectUrl);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(RedirectUrl)).call.apply(_getPrototypeOf2, [this].concat(args)));\n\n    _defineProperty(_assertThisInitialized(_this), \"componentDidMount\",\n    /*#__PURE__*/\n    _asyncToGenerator(\n    /*#__PURE__*/\n    _regeneratorRuntime.mark(function _callee() {\n      var variables, result;\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              variables = {\n                input: {\n                  link: Router.query.link\n                }\n              };\n              _context.next = 3;\n              return _this.client.query({\n                query: getLinkQuery,\n                variables: variables\n              }).catch(function (err) {\n                return err;\n              });\n\n            case 3:\n              result = _context.sent;\n\n              if (result && result.data && result.data.getLinkFromShortLink) {\n                Router.push(result.data.getLinkFromShortLink.link);\n              } else {\n                Router.push('/fourzerofour');\n              }\n\n            case 5:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    })));\n\n    return _this;\n  }\n\n  _createClass(RedirectUrl, [{\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      return React.createElement(ApolloConsumer, null, function (client) {\n        _this2.client = client;\n        return React.createElement(\"div\", {\n          style: {\n            height: '100vh'\n          }\n        }, React.createElement(Loading, null));\n      });\n    }\n  }]);\n\n  return RedirectUrl;\n}(React.Component);\n\nexport { RedirectUrl as default };","map":null,"metadata":{},"sourceType":"module"}