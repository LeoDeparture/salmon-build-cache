{"ast":null,"code":"import \"antd/lib/cascader/style\";\nimport _Cascader from \"antd/lib/cascader\";\nimport _objectSpread from \"@babel/runtime-corejs2/helpers/esm/objectSpread\";\nimport _regeneratorRuntime from \"@babel/runtime-corejs2/regenerator\";\nimport _toConsumableArray from \"@babel/runtime-corejs2/helpers/esm/toConsumableArray\";\nimport _asyncToGenerator from \"@babel/runtime-corejs2/helpers/esm/asyncToGenerator\";\nimport _classCallCheck from \"@babel/runtime-corejs2/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime-corejs2/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime-corejs2/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime-corejs2/helpers/esm/getPrototypeOf\";\nimport _assertThisInitialized from \"@babel/runtime-corejs2/helpers/esm/assertThisInitialized\";\nimport _inherits from \"@babel/runtime-corejs2/helpers/esm/inherits\";\nimport _defineProperty from \"@babel/runtime-corejs2/helpers/esm/defineProperty\";\nimport Head from 'next/head';\nimport React from 'react';\nimport ListCourseCategories, { listCourseCategoriesQuery } from '../../routes/courseCategory/containers/QueryListCourseCategories';\n\nfunction getCascaderLabel(item) {\n  var s = [];\n  s.push('（');\n  s.push(item.status.name);\n  s.push('）');\n  var name = item.name; // item.name.length <= 6 ? item.name : item.name.substr(0, 6) + '...';\n\n  s.push(name);\n  return s.join('');\n}\n\nvar SelectCourseCategories =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(SelectCourseCategories, _React$Component);\n\n  function SelectCourseCategories() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, SelectCourseCategories);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(SelectCourseCategories)).call.apply(_getPrototypeOf2, [this].concat(args)));\n\n    _defineProperty(_assertThisInitialized(_this), \"variables\", {\n      CourseCategoriesInput: {\n        where: {\n          level: 0,\n          status: {\n            key_not: 'REMOVED'\n          },\n          type: {\n            key: _this.props.serviceTypeKey\n          },\n          isDeleted: false\n        },\n        orderBy: 'sort_ASC'\n      }\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"state\", {\n      options: [],\n      value: []\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"componentWillReceiveProps\", function (nextProps) {\n      if (_this.props.setValue !== nextProps.setValue) {\n        _this.setState({\n          value: nextProps.setValue\n        });\n      }\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"loadData\", function (selectedOptions) {\n      var targetOption = selectedOptions[selectedOptions.length - 1];\n      targetOption.loading = true;\n      var variables = {\n        CourseCategoriesInput: {\n          where: {\n            parent: {\n              id: targetOption.value\n            },\n            status: {\n              key_not: 'REMOVED'\n            },\n            isDeleted: false\n          },\n          orderBy: 'sort_ASC'\n        }\n      };\n      setTimeout(\n      /*#__PURE__*/\n      _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee() {\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                _context.next = 2;\n                return _this.client.query({\n                  query: listCourseCategoriesQuery,\n                  variables: variables,\n                  fetchPolicy: 'network-only'\n                }).then(function (result) {\n                  targetOption.loading = result.loading;\n                  targetOption.children = _this.filterOptionData('child', result.data);\n\n                  _this.setState({\n                    options: _toConsumableArray(_this.state.options)\n                  });\n                });\n\n              case 2:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee);\n      })), 1000);\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"componentDidMount\", function () {\n      if (!_this.state.options.length) {\n        _this.refetch({});\n      }\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"filterOptionData\", function (level, data) {\n      var result = [];\n\n      if (data && data.listCourseCategories) {\n        if (!data.listCourseCategories.length) {\n          result = [{\n            isLeaf: true,\n            label: '暂无分类',\n            value: null,\n            disabled: true\n          }];\n        } else {\n          data.listCourseCategories.map(function (item) {\n            result.push(_objectSpread({\n              isLeaf: item.childrenType,\n              label: getCascaderLabel(item),\n              value: item.id\n            }, item));\n          });\n        }\n      }\n\n      if (level === 'root') {\n        _this.setState({\n          options: result\n        });\n      }\n\n      return result;\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"onChange\", function (value, selectedOptions) {\n      var selected = selectedOptions.slice(-1).pop();\n\n      _this.setState({\n        value: value\n      });\n\n      _this.props.getValue(value, selected);\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"reloadOnError\", function () {\n      _this.refetch(listCourseCategoriesQuery).then(function (res) {\n        _this.filterOptionData('root', res.data);\n      });\n    });\n\n    return _this;\n  }\n\n  _createClass(SelectCourseCategories, [{\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      return React.createElement(React.Fragment, null, React.createElement(Head, null, React.createElement(\"link\", {\n        rel: \"stylesheet\",\n        href: \"/static/css/courseCategoriesSelector.css\"\n      })), React.createElement(ListCourseCategories, {\n        query: listCourseCategoriesQuery,\n        variables: this.variables,\n        onCompleted: this.filterOptionData.bind(this, 'root'),\n        fetchPolicy: \"network-only\"\n      }, function (_ref2) {\n        var loading = _ref2.loading,\n            refetch = _ref2.refetch,\n            client = _ref2.client,\n            error = _ref2.error;\n        _this2.refetch = refetch;\n        _this2.client = client;\n\n        if (error) {\n          var options = [{\n            isLeaf: true,\n            label: '加载失败',\n            value: null,\n            disabled: true\n          }];\n          return React.createElement(_Cascader, {\n            style: {\n              flex: 1\n            },\n            options: options,\n            placeholder: '请选择一个课程分类',\n            onPopupVisibleChange: _this2.reloadOnError\n          });\n        }\n\n        if (loading) {\n          var _options = [{\n            isLeaf: true,\n            label: '加载中...',\n            value: null,\n            disabled: true\n          }];\n          return React.createElement(_Cascader, {\n            style: {\n              flex: 1\n            },\n            options: _options,\n            placeholder: '请选择一个课程分类'\n          });\n        }\n\n        return React.createElement(_Cascader, {\n          style: {\n            flex: 1\n          },\n          onChange: _this2.onChange,\n          value: _this2.state.value,\n          options: _this2.state.options,\n          loadData: _this2.loadData,\n          placeholder: '请选择一个课程分类',\n          notFoundContent: React.createElement(\"div\", null, \"\\u6682\\u65E0\\u8BFE\\u7A0B\\u5206\\u7C7B\")\n        });\n      }));\n    }\n  }]);\n\n  return SelectCourseCategories;\n}(React.Component);\n\n_defineProperty(SelectCourseCategories, \"defaultProps\", {\n  showDeleted: false\n});\n\nexport default SelectCourseCategories;","map":null,"metadata":{},"sourceType":"module"}