{"ast":null,"code":"import _classCallCheck from \"@babel/runtime-corejs2/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime-corejs2/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime-corejs2/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime-corejs2/helpers/esm/getPrototypeOf\";\nimport _inherits from \"@babel/runtime-corejs2/helpers/esm/inherits\";\nimport React from 'react';\nimport Loading from '../../../components/Loading';\nimport PathwayList from '../components/PathwayList';\nimport ListPathways, { QueryListPathways } from './QueryListPathways';\n\nvar PathwayListContainer =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(PathwayListContainer, _React$Component);\n\n  function PathwayListContainer() {\n    _classCallCheck(this, PathwayListContainer);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(PathwayListContainer).apply(this, arguments));\n  }\n\n  _createClass(PathwayListContainer, [{\n    key: \"render\",\n    value: function render() {\n      var _this = this;\n\n      return React.createElement(ListPathways, {\n        query: QueryListPathways,\n        fetchPolicy: \"network-only\",\n        variables: {\n          input: {\n            where: {\n              creator: {\n                id: JSON.parse(localStorage.getItem('misViewer')).operatorAccount.id\n              }\n            }\n          }\n        },\n        notifyOnNetworkStatusChange: true\n      }, function (_ref) {\n        var data = _ref.data,\n            loading = _ref.loading,\n            error = _ref.error,\n            refetch = _ref.refetch,\n            client = _ref.client,\n            networkStatus = _ref.networkStatus;\n        _this.client = client;\n        _this.refetch = refetch;\n\n        if (loading || networkStatus === 4) {\n          return React.createElement(Loading, null);\n        }\n\n        if (error) {\n          return null;\n        }\n\n        return React.createElement(PathwayList, {\n          pathways: data.pathways,\n          refetch: refetch\n        });\n      });\n    }\n  }]);\n\n  return PathwayListContainer;\n}(React.Component);\n\nexport default PathwayListContainer;","map":null,"metadata":{},"sourceType":"module"}