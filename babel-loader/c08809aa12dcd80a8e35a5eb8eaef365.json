{"ast":null,"code":"import _objectSpread from \"@babel/runtime-corejs2/helpers/esm/objectSpread\";\nimport _regeneratorRuntime from \"@babel/runtime-corejs2/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime-corejs2/helpers/esm/asyncToGenerator\";\nimport \"antd/lib/select/style\";\nimport _Select from \"antd/lib/select\";\nimport _classCallCheck from \"@babel/runtime-corejs2/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime-corejs2/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime-corejs2/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime-corejs2/helpers/esm/getPrototypeOf\";\nimport _assertThisInitialized from \"@babel/runtime-corejs2/helpers/esm/assertThisInitialized\";\nimport _inherits from \"@babel/runtime-corejs2/helpers/esm/inherits\";\nimport _defineProperty from \"@babel/runtime-corejs2/helpers/esm/defineProperty\";\nimport React from 'react';\nimport { ApolloConsumer } from 'react-apollo';\nimport { QueryListLanguages } from '../../../common/queries/QueryListLanguages';\n\nvar ZhiWenSelect =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(ZhiWenSelect, _React$Component);\n\n  function ZhiWenSelect() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, ZhiWenSelect);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(ZhiWenSelect)).call.apply(_getPrototypeOf2, [this].concat(args)));\n\n    _defineProperty(_assertThisInitialized(_this), \"state\", {\n      value: undefined,\n      options: [],\n      placeholder: ''\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"componentWillReceiveProps\", function (nextProps) {\n      if (_this.props.value !== nextProps.value) {\n        _this.setState({\n          value: nextProps.value\n        });\n      }\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"filterData\", function (input, option) {\n      return option.props.children.toLowerCase().indexOf(input.toLowerCase()) >= 0;\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"onChange\", function (value, option) {\n      var _this$props = _this.props,\n          getValue = _this$props.getValue,\n          returnType = _this$props.returnType;\n\n      _this.setState({\n        value: value\n      });\n\n      if (getValue) {\n        if (returnType === 'id') {\n          _this.props.getValue(value);\n        }\n\n        if (returnType === 'option') {\n          _this.props.getValue(option);\n        }\n      }\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"renderOptions\", function (data) {\n      if (!data.length) {\n        return;\n      }\n\n      return data.map(function (item, index) {\n        return React.createElement(_Select.Option, {\n          value: item.id,\n          key: index\n        }, item.name);\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"prepareData\",\n    /*#__PURE__*/\n    _asyncToGenerator(\n    /*#__PURE__*/\n    _regeneratorRuntime.mark(function _callee() {\n      var type, placeholder, options, allEnum, data, result, _data;\n\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              type = _this.props.type;\n              placeholder = '请选择';\n              options = [];\n              allEnum = JSON.parse(localStorage.getItem('zhiwen_all_enum'));\n\n              if (type === 'foreign-country') {\n                placeholder = '仅支持搜索国家';\n                data = localStorage.getItem('zhiwen_foreign_country');\n                options = _this.renderOptions(JSON.parse(data));\n              }\n\n              if (type === 'account-type') {\n                options = _this.renderOptions(allEnum.listAccountTypeEnum);\n              }\n\n              if (type === 'job-category') {\n                options = _this.renderOptions(allEnum.listJobCategoryEnum);\n              }\n\n              if (type === 'zhiwen-profession') {\n                options = _this.renderOptions(allEnum.listZhiWenProfessionEnum);\n              }\n\n              if (type === 'zhiwen-level') {\n                options = _this.renderOptions(allEnum.listZhiwenLevelEnum);\n              }\n\n              if (type === 'cooperative-mode') {\n                options = _this.renderOptions(allEnum.listCooperativeModeEnum);\n              }\n\n              if (type === 'degree') {\n                options = _this.renderOptions(allEnum.listDegreeEnum);\n              }\n\n              if (type === 'gender') {\n                options = _this.renderOptions(allEnum.listGenderEnum);\n              }\n\n              if (type === 'employment') {\n                options = _this.renderOptions(allEnum.listEmploymentEnum);\n              }\n\n              if (type === 'job-seeking-status') {\n                options = _this.renderOptions(allEnum.listJobSeekingStatusEnum);\n              }\n\n              if (type === 'language-level') {\n                options = _this.renderOptions(allEnum.listLanguageLevelEnum);\n              }\n\n              if (type === 'school-category') {\n                options = _this.renderOptions(allEnum.listSchoolCategoryEnum);\n              }\n\n              if (type === 'record-status') {\n                options = _this.renderOptions(allEnum.listRecordStatusEnum);\n              }\n\n              if (type === 'salary-interval') {\n                options = _this.renderOptions(allEnum.listSalaryIntervalEnum);\n              }\n\n              if (type === 'slot-status') {\n                options = _this.renderOptions(allEnum.listSlotStatusEnum);\n              }\n\n              if (!(type === 'language')) {\n                _context.next = 25;\n                break;\n              }\n\n              _context.next = 22;\n              return _this.client.query({\n                query: QueryListLanguages,\n                variables: {\n                  input: {}\n                }\n              });\n\n            case 22:\n              result = _context.sent;\n              _data = result.data.languages;\n              options = _this.renderOptions(_data);\n\n            case 25:\n              _this.setState({\n                options: options,\n                placeholder: placeholder\n              });\n\n            case 26:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    })));\n\n    return _this;\n  }\n\n  _createClass(ZhiWenSelect, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.prepareData();\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var _this$props2 = this.props,\n          style = _this$props2.style,\n          disabled = _this$props2.disabled,\n          mode = _this$props2.mode;\n      var _this$state = this.state,\n          value = _this$state.value,\n          placeholder = _this$state.placeholder,\n          options = _this$state.options;\n      return React.createElement(ApolloConsumer, null, function (client) {\n        _this2.client = client;\n        return React.createElement(_Select, {\n          showSearch: true,\n          placeholder: placeholder,\n          filterOption: _this2.filterData,\n          onChange: _this2.onChange,\n          style: _objectSpread({}, style, {\n            flex: 1\n          }),\n          value: value,\n          mode: mode,\n          disabled: disabled\n        }, options);\n      });\n    }\n  }]);\n\n  return ZhiWenSelect;\n}(React.Component);\n\n_defineProperty(ZhiWenSelect, \"defaultProps\", {\n  returnType: 'id',\n  disabled: false,\n  mode: ''\n});\n\nexport default ZhiWenSelect;","map":null,"metadata":{},"sourceType":"module"}