{"ast":null,"code":"import _extends from \"@babel/runtime-corejs2/helpers/esm/extends\";\nimport _regeneratorRuntime from \"@babel/runtime-corejs2/regenerator\";\nimport \"antd/lib/message/style\";\nimport _message from \"antd/lib/message\";\nimport _asyncToGenerator from \"@babel/runtime-corejs2/helpers/esm/asyncToGenerator\";\nimport _classCallCheck from \"@babel/runtime-corejs2/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime-corejs2/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime-corejs2/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime-corejs2/helpers/esm/getPrototypeOf\";\nimport _assertThisInitialized from \"@babel/runtime-corejs2/helpers/esm/assertThisInitialized\";\nimport _inherits from \"@babel/runtime-corejs2/helpers/esm/inherits\";\nimport _defineProperty from \"@babel/runtime-corejs2/helpers/esm/defineProperty\";\nimport Router from 'next/router';\nimport React, { Component } from 'react';\nimport { ApolloConsumer } from 'react-apollo';\nimport { QueryMisViewer } from '../../common/queries/QueryMisViewer';\nimport CONFIG from '../../lib/config';\n\nvar JumpLink =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(JumpLink, _Component);\n\n  function JumpLink() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, JumpLink);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(JumpLink)).call.apply(_getPrototypeOf2, [this].concat(args)));\n\n    _defineProperty(_assertThisInitialized(_this), \"onClickAnchor\",\n    /*#__PURE__*/\n    _asyncToGenerator(\n    /*#__PURE__*/\n    _regeneratorRuntime.mark(function _callee() {\n      var result, permissions, _this$props, url, permissionName;\n\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.next = 2;\n              return _this.client.query({\n                query: QueryMisViewer,\n                fetchPolicy: 'network-only'\n              });\n\n            case 2:\n              result = _context.sent;\n\n              if (result && result.data && result.data.misViewer) {\n                permissions = result.data.misViewer.permissions;\n                _this$props = _this.props, url = _this$props.url, permissionName = _this$props.permission; // 若有指定权限, 跳转到相应 url\n\n                if (permissions.find(function (permission) {\n                  return permission.name === permissionName;\n                })) {\n                  Router.push(url);\n                } else {\n                  _message.destroy();\n\n                  _message.error(CONFIG.txt.noAuth);\n                }\n              }\n\n            case 4:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    })));\n\n    return _this;\n  }\n\n  _createClass(JumpLink, [{\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var text = this.props.text;\n      return React.createElement(ApolloConsumer, null, function (client) {\n        _this2.client = client;\n        return React.createElement(\"a\", _extends({\n          onClick: _this2.onClickAnchor\n        }, _this2.props), text);\n      });\n    }\n  }]);\n\n  return JumpLink;\n}(Component);\n\nexport { JumpLink as default };","map":null,"metadata":{},"sourceType":"module"}