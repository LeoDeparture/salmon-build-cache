{"ast":null,"code":"import \"antd/lib/spin/style\";\nimport _Spin from \"antd/lib/spin\";\nimport \"antd/lib/message/style\";\nimport _message from \"antd/lib/message\";\nimport _classCallCheck from \"@babel/runtime-corejs2/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime-corejs2/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime-corejs2/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime-corejs2/helpers/esm/getPrototypeOf\";\nimport _assertThisInitialized from \"@babel/runtime-corejs2/helpers/esm/assertThisInitialized\";\nimport _inherits from \"@babel/runtime-corejs2/helpers/esm/inherits\";\nimport _defineProperty from \"@babel/runtime-corejs2/helpers/esm/defineProperty\";\nimport React from 'react';\nimport { errMessage } from '../../../lib/commonJs';\nimport CONFIG from '../../../lib/config';\nimport styled from 'styled-components';\nimport { loadingStyle } from '../components/FileCenterComponent';\nimport FolderList from '../components/FolderList';\nimport { MutationCreateFolder } from './MutationCreateFolder';\nimport ListAllFolders, { query as QueryListAllFolders } from './QueryListAllFolders'; // 每次加载多少条数据\n\nvar itemsPerPage = 1000;\nexport var ListAllFoldersInput = {\n  input: {\n    first: itemsPerPage,\n    where: {}\n  }\n};\n\nvar ListAllFoldersContainer =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(ListAllFoldersContainer, _React$Component);\n\n  function ListAllFoldersContainer() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, ListAllFoldersContainer);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(ListAllFoldersContainer)).call.apply(_getPrototypeOf2, [this].concat(args)));\n\n    _defineProperty(_assertThisInitialized(_this), \"createFolder\", function (variables, success, complete) {\n      _this.client.mutate({\n        mutation: MutationCreateFolder,\n        variables: {\n          input: variables\n        },\n        // 创建文件夹后刷新列表\n        refetchQueries: [{\n          query: QueryListAllFolders,\n          variables: ListAllFoldersInput\n        }, {\n          query: QueryListAllFolders,\n          variables: {\n            input: {\n              where: {\n                owner: {\n                  person: {\n                    id: localStorage.getItem('zhiwen_person_id')\n                  }\n                }\n              }\n            }\n          }\n        }]\n      }).then(function (result) {\n        if (result.data) {\n          _message.destroy();\n\n          _message.success(CONFIG.txt.folder.create.success);\n\n          success();\n          complete();\n        }\n      }).catch(function (error) {\n        errMessage(error);\n        complete();\n      });\n    });\n\n    return _this;\n  }\n\n  _createClass(ListAllFoldersContainer, [{\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      return React.createElement(ListAllFolders, {\n        query: QueryListAllFolders,\n        variables: ListAllFoldersInput\n      }, function (_ref) {\n        var data = _ref.data,\n            loading = _ref.loading,\n            error = _ref.error,\n            client = _ref.client;\n        _this2.client = client;\n\n        if (loading) {\n          return React.createElement(LoadingWrapper, null, React.createElement(_Spin, {\n            style: loadingStyle,\n            tip: \"Loading...\",\n            size: \"large\"\n          }));\n        }\n\n        if (error) {\n          errMessage(error);\n          return null;\n        }\n\n        var folderData = data.listAllFoldersWithPagination.edges;\n        return React.createElement(FolderList, {\n          folderData: folderData,\n          createFolder: _this2.createFolder\n        });\n      });\n    }\n  }]);\n\n  return ListAllFoldersContainer;\n}(React.Component);\n\nexport default ListAllFoldersContainer;\nvar LoadingWrapper = styled.div.withConfig({\n  displayName: \"FolderListContainer__LoadingWrapper\",\n  componentId: \"sc-1i3d454-0\"\n})([\"display:flex;align-items:center;justify-content:center;min-height:500px;\"]);","map":null,"metadata":{},"sourceType":"module"}