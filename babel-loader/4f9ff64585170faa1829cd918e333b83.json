{"ast":null,"code":"import \"antd/lib/input/style\";\nimport _Input from \"antd/lib/input\";\nimport _extends from \"@babel/runtime-corejs2/helpers/esm/extends\";\nimport _classCallCheck from \"@babel/runtime-corejs2/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime-corejs2/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime-corejs2/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime-corejs2/helpers/esm/getPrototypeOf\";\nimport _inherits from \"@babel/runtime-corejs2/helpers/esm/inherits\";\nimport Head from 'next/head';\nimport React from 'react';\nimport LengthIndicator from './LengthIndicator';\n\nvar LimitedInput =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(LimitedInput, _React$Component);\n\n  function LimitedInput(props) {\n    _classCallCheck(this, LimitedInput);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(LimitedInput).call(this, props));\n  }\n\n  _createClass(LimitedInput, [{\n    key: \"render\",\n    value: function render() {\n      var _this$props = this.props,\n          limit = _this$props.limit,\n          value = _this$props.value;\n      var length = value ? value.toString().length : 0;\n      return React.createElement(React.Fragment, null, React.createElement(Head, null, React.createElement(\"link\", {\n        rel: \"stylesheet\",\n        href: \"/static/css/custom.css\"\n      })), React.createElement(_Input, _extends({}, this.props, {\n        className: \"zw-limited-input\",\n        suffix: limit && React.createElement(LengthIndicator, {\n          length: length,\n          limit: limit\n        }),\n        maxLength: limit\n      })));\n    }\n  }]);\n\n  return LimitedInput;\n}(React.Component);\n\nexport default LimitedInput;","map":null,"metadata":{},"sourceType":"module"}