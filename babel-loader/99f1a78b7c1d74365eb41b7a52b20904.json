{"ast":null,"code":"import \"antd/lib/message/style\";\nimport _message from \"antd/lib/message\";\nimport \"antd/lib/button/style\";\nimport _Button from \"antd/lib/button\";\nimport _classCallCheck from \"@babel/runtime-corejs2/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime-corejs2/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime-corejs2/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime-corejs2/helpers/esm/getPrototypeOf\";\nimport _assertThisInitialized from \"@babel/runtime-corejs2/helpers/esm/assertThisInitialized\";\nimport _inherits from \"@babel/runtime-corejs2/helpers/esm/inherits\";\nimport _defineProperty from \"@babel/runtime-corejs2/helpers/esm/defineProperty\";\nimport dynamic from 'next/dynamic';\nimport React from 'react';\nimport styled from 'styled-components';\nimport CONFIG from '../../../../lib/config';\nimport FileListContainer from '../../containers/FileListContainer';\nimport DeleteFolderPop from './DeleteFolderPop';\nimport EditMemberPop from './EditMemberPop';\nimport RenameFolderPop from './RenameFolderPop';\nvar ReactFilestack = dynamic(function () {\n  return import('filestack-react');\n}, {\n  ssr: false,\n  loadableGenerated: {\n    webpack: function webpack() {\n      return [require.resolveWeak('filestack-react')];\n    },\n    modules: ['filestack-react']\n  }\n});\n\nvar FolderDetail =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(FolderDetail, _React$Component);\n\n  function FolderDetail() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, FolderDetail);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(FolderDetail)).call.apply(_getPrototypeOf2, [this].concat(args)));\n\n    _defineProperty(_assertThisInitialized(_this), \"onRefDeleteFolderPop\", function (ref) {\n      _this.deleteFolderPop = ref;\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"onClickDeleteFolder\", function () {\n      _this.deleteFolderPop.showPop();\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"onRefRenameFolderPop\", function (ref) {\n      _this.renameFolderPop = ref;\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"onClickRenameFolder\", function () {\n      _this.renameFolderPop.showPop();\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"onRefEditMemberPop\", function (ref) {\n      _this.editMemberPop = ref;\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"onClickEditMember\", function () {\n      _this.editMemberPop.showPop();\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"renderUploadBtn\", function (_ref) {\n      var onPick = _ref.onPick;\n      return React.createElement(_Button, {\n        style: BtnStyle,\n        onClick: onPick,\n        icon: \"upload\"\n      }, \"\\u4E0A\\u4F20\\u6587\\u4EF6\");\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"onSuccess\", function (_ref2) {\n      var filesUploaded = _ref2.filesUploaded;\n\n      if (filesUploaded.length === 0) {\n        return;\n      }\n\n      var handles = filesUploaded.map(function (v) {\n        var handle = v.handle,\n            mimetype = v.mimetype,\n            filename = v.filename,\n            size = v.size;\n        return {\n          filename: filename,\n          handle: handle,\n          mimetype: mimetype,\n          size: size\n        };\n      }); // 执行 mutation\n\n      _this.props.uploadFile(handles);\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"onError\", function (_error) {\n      _message.error(CONFIG.filestack.message.fail);\n    });\n\n    return _this;\n  }\n\n  _createClass(FolderDetail, [{\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var _this$props = this.props,\n          isMyFolder = _this$props.isMyFolder,\n          folderData = _this$props.folderData;\n      var hasSharers = folderData.sharers.length > 0;\n      var filestackOptions = {\n        maxFiles: 50,\n        maxSize: 10 * 1024 * 1024 * 1024,\n        // 单个文件大小上限 10G\n        fromSources: ['local_file_system']\n      };\n\n      var Header = function Header() {\n        return React.createElement(HeaderContainer, null, React.createElement(HeaderInner, null, React.createElement(Info, null, React.createElement(\"h1\", null, folderData.name), React.createElement(\"h2\", null, \"\\u521B\\u5EFA\\u4EBA\\uFF1A\", folderData.owner.person.name)), React.createElement(Buttons, {\n          hidden: !isMyFolder\n        }, React.createElement(_Button, {\n          type: \"danger\",\n          icon: \"delete\",\n          onClick: _this2.onClickDeleteFolder\n        }, \"\\u5220\\u9664\"), React.createElement(_Button, {\n          style: BtnStyle,\n          icon: \"edit\",\n          onClick: _this2.onClickRenameFolder\n        }, \"\\u91CD\\u547D\\u540D\"), React.createElement(_Button, {\n          style: BtnStyle,\n          icon: \"setting\",\n          onClick: _this2.onClickEditMember\n        }, \"\\u67E5\\u770B/\\u7F16\\u8F91\\u5171\\u4EAB\\u8005\"), React.createElement(ReactFilestack, {\n          apikey: CONFIG.filestack.apikey,\n          options: filestackOptions,\n          onSuccess: _this2.onSuccess,\n          onError: _this2.onError,\n          render: _this2.renderUploadBtn\n        }))));\n      };\n\n      return React.createElement(FolderDetailWrapper, null, React.createElement(Header, null), React.createElement(DeleteFolderPop, {\n        onRef: this.onRefDeleteFolderPop,\n        deletable: !hasSharers,\n        deleteFolder: this.props.deleteFolder\n      }), React.createElement(RenameFolderPop, {\n        onRef: this.onRefRenameFolderPop,\n        canRename: !hasSharers,\n        updateFolder: this.props.updateFolder,\n        folderName: folderData.name\n      }), React.createElement(EditMemberPop, {\n        onRef: this.onRefEditMemberPop,\n        sharersData: folderData.sharers,\n        searchAccount: this.props.searchAccount,\n        updateFolder: this.props.updateFolder\n      }), React.createElement(FileListWrapper, null, React.createElement(FileListContainer, {\n        type: \"folder\"\n      })));\n    }\n  }]);\n\n  return FolderDetail;\n}(React.Component);\n\nexport default FolderDetail;\nvar BtnStyle = {\n  marginLeft: 12\n};\nvar FolderDetailWrapper = styled.div.withConfig({\n  displayName: \"FolderDetail__FolderDetailWrapper\",\n  componentId: \"sc-177b0i-0\"\n})([\"position:relative;display:flex;flex-direction:column;height:100%;min-width:1136px;\"]);\nvar HeaderContainer = styled.div.withConfig({\n  displayName: \"FolderDetail__HeaderContainer\",\n  componentId: \"sc-177b0i-1\"\n})([\"height:80px;padding:0 43px 0 32px;h1{margin:0;overflow:hidden;font-size:22px;line-height:32px;color:#172b4d;text-overflow:ellipsis;white-space:nowrap;}h2{margin:0;overflow:hidden;font-size:12px;line-height:18px;color:#b9b9b9;text-overflow:ellipsis;white-space:nowrap;}\"]);\nvar HeaderInner = styled.div.withConfig({\n  displayName: \"FolderDetail__HeaderInner\",\n  componentId: \"sc-177b0i-2\"\n})([\"display:flex;height:100%;border-bottom:solid 1px rgba(171,178,191,0.32);\"]);\nvar Info = styled.div.withConfig({\n  displayName: \"FolderDetail__Info\",\n  componentId: \"sc-177b0i-3\"\n})([\"position:relative;flex:1;padding-top:14px;overflow:hidden;\"]);\nvar Buttons = styled.div.withConfig({\n  displayName: \"FolderDetail__Buttons\",\n  componentId: \"sc-177b0i-4\"\n})([\"position:relative;padding-top:24px;margin-left:20px;\"]);\nvar FileListWrapper = styled.div.withConfig({\n  displayName: \"FolderDetail__FileListWrapper\",\n  componentId: \"sc-177b0i-5\"\n})([\"position:relative;height:100%;\"]);","map":null,"metadata":{},"sourceType":"module"}