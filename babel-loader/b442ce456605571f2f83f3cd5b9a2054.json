{"ast":null,"code":"import \"antd/lib/button/style\";\nimport _Button from \"antd/lib/button\";\nimport \"antd/lib/badge/style\";\nimport _Badge from \"antd/lib/badge\";\nimport \"antd/lib/col/style\";\nimport _Col from \"antd/lib/col\";\nimport \"antd/lib/breadcrumb/style\";\nimport _Breadcrumb from \"antd/lib/breadcrumb\";\nimport \"antd/lib/icon/style\";\nimport _Icon from \"antd/lib/icon\";\nimport _classCallCheck from \"@babel/runtime-corejs2/helpers/esm/classCallCheck\";\nimport _possibleConstructorReturn from \"@babel/runtime-corejs2/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime-corejs2/helpers/esm/getPrototypeOf\";\nimport _assertThisInitialized from \"@babel/runtime-corejs2/helpers/esm/assertThisInitialized\";\nimport _inherits from \"@babel/runtime-corejs2/helpers/esm/inherits\";\nimport _defineProperty from \"@babel/runtime-corejs2/helpers/esm/defineProperty\";\nimport \"antd/lib/modal/style\";\nimport _Modal from \"antd/lib/modal\";\nimport Link from 'next/link';\nimport Router from 'next/router';\nimport React from 'react';\nimport styled from 'styled-components';\nvar TitleBoard = styled.div.withConfig({\n  displayName: \"ChapterDetailContent__TitleBoard\",\n  componentId: \"sc-2l2jx1-0\"\n})([\"padding:2px;background-color:#fff;\"]);\nvar FormattedRow = styled.div.withConfig({\n  displayName: \"ChapterDetailContent__FormattedRow\",\n  componentId: \"sc-2l2jx1-1\"\n})([\"display:flex;justify-content:space-between;padding:0 30px;margin:14px;\"]);\nvar confirm = _Modal.confirm;\n\nvar ChapterDetailContent =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(ChapterDetailContent, _React$Component);\n\n  function ChapterDetailContent() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, ChapterDetailContent);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(ChapterDetailContent)).call.apply(_getPrototypeOf2, [this].concat(args)));\n\n    _defineProperty(_assertThisInitialized(_this), \"showConfirm\", function (action, record) {\n      if (action === '上线') {\n        confirm({\n          cancelText: '取消',\n          centered: true,\n          icon: React.createElement(_Icon, {\n            type: \"question-circle\",\n            theme: \"filled\"\n          }),\n          okText: '确认上线',\n          okType: 'primary',\n          onOk: _this.props.enableMutation.bind(_assertThisInitialized(_this), record.id),\n          title: \"\\u786E\\u8BA4\\u4E0A\\u7EBF\\u6B64\\u7AE0\\u8282\\u5417\\uFF1F\"\n        });\n      } else if (action === '下线') {\n        confirm({\n          cancelText: '取消',\n          centered: true,\n          content: React.createElement(\"div\", {\n            style: {\n              fontSize: '13px'\n            }\n          }, React.createElement(\"p\", null, \"\\u4E0B\\u7EBF\\u6B64\\u7AE0\\u8282\\u540E\\uFF1A\"), React.createElement(\"p\", null, \"1\\u3001\\u6240\\u6709\\u7528\\u6237\\u5747\\u4E0D\\u53EF\\u518D\\u770B\\u5230\\u6B64\\u7AE0\\u8282\\u7684\\u5185\\u5BB9\\uFF1B\"), React.createElement(\"p\", null, \"2\\u3001\\u4E0B\\u7EBF\\u540E\\u7684\\u7AE0\\u8282\\u53EF\\u4EE5\\u91CD\\u65B0\\u4E0A\\u7EBF\\u3002\")),\n          icon: React.createElement(_Icon, {\n            type: \"question-circle\",\n            theme: \"filled\"\n          }),\n          okText: '确认下线',\n          okType: 'primary',\n          onOk: _this.props.disableMutation.bind(_assertThisInitialized(_this), record.id),\n          title: \"\\u786E\\u8BA4\\u4E0B\\u7EBF\\u6B64\\u7AE0\\u8282\\u5417\\uFF1F\"\n        });\n      } else if (action === '删除') {\n        confirm({\n          cancelText: '取消',\n          centered: true,\n          content: React.createElement(\"div\", {\n            style: {\n              fontSize: '13px'\n            }\n          }, React.createElement(\"p\", null, \"\\u5220\\u9664\\u540E\\uFF1A\"), React.createElement(\"p\", null, \"APP\\u7AEF\\u548CMIS\\u7528\\u6237\\u5C06\\u65E0\\u6CD5\\u770B\\u5230\\u6B64\\u7AE0\\u8282\\u3002\")),\n          icon: React.createElement(_Icon, {\n            type: \"question-circle\",\n            theme: \"filled\"\n          }),\n          okText: '确认删除',\n          okType: 'danger',\n          onOk: _this.props.removeMutation.bind(_assertThisInitialized(_this), record.id),\n          title: \"\\u786E\\u8BA4\\u5220\\u9664\\u6B64\\u7AE0\\u8282\\u5417\\uFF1F\"\n        });\n      }\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"switchChapterEdit\", function (data) {\n      var id = data.id,\n          name = data.name,\n          description = data.description;\n      var fillData = {\n        id: id,\n        name: name,\n        description: description\n      };\n\n      _this.props.setCurrentChapter(fillData);\n\n      _this.props.switchPage('chapter-edit');\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"render\", function () {\n      var data = _this.props.data.getChapterById;\n      return React.createElement(TitleBoard, null, React.createElement(FormattedRow, null, React.createElement(_Col, {\n        span: 24\n      }, React.createElement(_Breadcrumb, {\n        style: {\n          fontSize: '12px'\n        }\n      }, React.createElement(_Breadcrumb.Item, null, React.createElement(Link, {\n        href: \"/subscription-course-management\"\n      }, React.createElement(\"a\", null, \"\\u8BFE\\u7A0B\\u7BA1\\u7406\"))), React.createElement(_Breadcrumb.Item, null, React.createElement(Link, {\n        href: \"/subscription-course-detail/\".concat(Router.router.query.subCourseId)\n      }, React.createElement(\"a\", null, \"\\u8BFE\\u7A0B\\u8BE6\\u60C5\"))), React.createElement(_Breadcrumb.Item, null, React.createElement(Link, {\n        href: \"/subscription-course-detail/\".concat(Router.router.query.subCourseId, \"/subscription-course-series-detail/\").concat(Router.router.query.seriesId)\n      }, React.createElement(\"a\", null, \"\\u5468\\u671F\\u8BE6\\u60C5\"))), React.createElement(_Breadcrumb.Item, null, React.createElement(\"span\", null, \"\\u7AE0\\u8282\\u8BE6\\u60C5\"))))), React.createElement(FormattedRow, null, React.createElement(\"div\", {\n        style: {\n          display: 'flex',\n          // tslint:disable-next-line:no-duplicate-string\n          justifyContent: 'flex-start'\n        }\n      }, React.createElement(\"div\", {\n        style: {\n          fontWeight: 'bold',\n          paddingRight: '10px',\n          wordBreak: 'break-word'\n        }\n      }, data.name), React.createElement(\"div\", {\n        style: {\n          flexShrink: 0\n        }\n      }, React.createElement(_Badge, {\n        status: /未[^\\x00-\\x7F]+/.test(data.status.name) ? 'warning' : data.status.name === '已上线' ? 'success' : data.status.name === '已下线' ? 'default' : 'error'\n      }), React.createElement(\"span\", {\n        style: {\n          fontSize: '12px'\n        }\n      }, data.status.name))), React.createElement(\"div\", {\n        style: {\n          flexShrink: 0,\n          textAlign: 'right'\n        }\n      }, React.createElement(_Button, {\n        type: \"default\",\n        style: {\n          marginLeft: '12px'\n        },\n        onClick: _this.switchChapterEdit.bind(_assertThisInitialized(_this), data)\n      }, \"\\u7F16\\u8F91\"), data.status.name === '已上线' ? React.createElement(_Button, {\n        type: \"default\",\n        style: {\n          marginLeft: '12px'\n        },\n        onClick: _this.showConfirm.bind(_assertThisInitialized(_this), '下线', data)\n      }, \"\\u4E0B\\u7EBF\") : React.createElement(_Button, {\n        type: \"default\",\n        style: {\n          marginLeft: '12px'\n        },\n        onClick: _this.showConfirm.bind(_assertThisInitialized(_this), '上线', data)\n      }, \"\\u4E0A\\u7EBF\"), React.createElement(_Button, {\n        type: \"danger\",\n        style: {\n          marginLeft: '12px'\n        },\n        onClick: _this.showConfirm.bind(_assertThisInitialized(_this), '删除', data)\n      }, \"\\u5220\\u9664\"))), React.createElement(FormattedRow, {\n        style: {\n          fontSize: '12px',\n          justifyContent: 'flex-start'\n        }\n      }, React.createElement(\"div\", {\n        style: {\n          verticalAlign: 'top',\n          flexShrink: 0,\n          color: '#D8D8D8'\n        }\n      }, \"\\u7AE0\\u8282\\u7B80\\u4ECB\\uFF1A\"), React.createElement(\"div\", {\n        style: {\n          maxWidth: '700px'\n        }\n      }, data.description ? data.description.split('\\n').map(function (line, index) {\n        return React.createElement(\"span\", {\n          key: index\n        }, line, React.createElement(\"br\", null));\n      }) : null)));\n    });\n\n    return _this;\n  }\n\n  return ChapterDetailContent;\n}(React.Component);\n\nexport { ChapterDetailContent };","map":null,"metadata":{},"sourceType":"module"}