{"ast":null,"code":"import _JSON$stringify from \"@babel/runtime-corejs2/core-js/json/stringify\";\nimport \"antd/lib/select/style\";\nimport _Select from \"antd/lib/select\";\nimport _classCallCheck from \"@babel/runtime-corejs2/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime-corejs2/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime-corejs2/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime-corejs2/helpers/esm/getPrototypeOf\";\nimport _assertThisInitialized from \"@babel/runtime-corejs2/helpers/esm/assertThisInitialized\";\nimport _inherits from \"@babel/runtime-corejs2/helpers/esm/inherits\";\nimport _defineProperty from \"@babel/runtime-corejs2/helpers/esm/defineProperty\";\nimport React from 'react';\nimport { Query } from 'react-apollo';\nimport { QueryListGroupCourses, QueryListPrivateCourses, QueryListSubscriptionCourses } from './containers/CourseQueries';\n\nvar SelectCourse =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(SelectCourse, _React$Component);\n\n  function SelectCourse() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, SelectCourse);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(SelectCourse)).call.apply(_getPrototypeOf2, [this].concat(args)));\n\n    _defineProperty(_assertThisInitialized(_this), \"state\", {\n      options: [],\n      value: []\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"componentWillReceiveProps\", function (nextProps) {\n      if (_this.props.setValue !== nextProps.setValue) {\n        _this.setState({\n          value: nextProps.setValue\n        });\n      }\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"componentDidMount\", function () {\n      if (!_this.state.options.length) {\n        _this.refetch({});\n      }\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"onChange\", function (value) {\n      _this.props.getValue(JSON.parse(value));\n    });\n\n    return _this;\n  }\n\n  _createClass(SelectCourse, [{\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var _this$props = this.props,\n          type = _this$props.type,\n          categoryId = _this$props.categoryId,\n          value = _this$props.value;\n      var Option = _Select.Option; // query\n\n      var query;\n\n      if (type === 'PRIVATE_COURSE') {\n        query = QueryListPrivateCourses;\n      }\n\n      if (type === 'GROUP_COURSE') {\n        query = QueryListGroupCourses;\n      }\n\n      if (type === 'SUBSCRIPTION_COURSE') {\n        query = QueryListSubscriptionCourses;\n      }\n\n      var variables = {\n        input: {\n          where: {\n            status: {\n              key_not: 'REMOVED'\n            },\n            courseCategory: {\n              id: categoryId\n            }\n          }\n        }\n      };\n      return React.createElement(Query, {\n        query: query,\n        variables: variables,\n        fetchPolicy: \"network-only\"\n      }, function (_ref) {\n        var data = _ref.data,\n            loading = _ref.loading,\n            refetch = _ref.refetch,\n            client = _ref.client,\n            error = _ref.error;\n        _this2.refetch = refetch;\n        _this2.client = client;\n\n        if (error) {\n          return React.createElement(_Select, {\n            disabled: true\n          });\n        }\n\n        if (loading) {\n          return React.createElement(_Select, {\n            loading: true,\n            disabled: true\n          });\n        }\n\n        var courses = data.courses;\n        var placeholder = \"\\u8BF7\\u9009\\u62E9\\u4E00\\u4E2A\".concat(type !== 'SUBSCRIPTION_COURSE' ? '建议' : '', \"\\u8BFE\\u7A0B\");\n        return React.createElement(_Select, {\n          onChange: _this2.onChange,\n          placeholder: placeholder,\n          notFoundContent: \"\\u672A\\u627E\\u5230\\u4EFB\\u4F55\\u8BFE\\u7A0B\",\n          value: !value ? undefined : _JSON$stringify(value)\n        }, courses.map(function (course) {\n          var id = course.id,\n              name = course.name;\n          return React.createElement(Option, {\n            key: id,\n            value: _JSON$stringify(course)\n          }, name);\n        }));\n      });\n    }\n  }]);\n\n  return SelectCourse;\n}(React.Component);\n\nexport default SelectCourse;","map":null,"metadata":{},"sourceType":"module"}