{"ast":null,"code":"import \"antd/lib/config-provider/style\";\nimport _ConfigProvider from \"antd/lib/config-provider\";\nimport \"antd/lib/table/style\";\nimport _Table from \"antd/lib/table\";\nimport _objectSpread from \"@babel/runtime-corejs2/helpers/esm/objectSpread\";\nimport _classCallCheck from \"@babel/runtime-corejs2/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime-corejs2/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime-corejs2/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime-corejs2/helpers/esm/getPrototypeOf\";\nimport _assertThisInitialized from \"@babel/runtime-corejs2/helpers/esm/assertThisInitialized\";\nimport _inherits from \"@babel/runtime-corejs2/helpers/esm/inherits\";\nimport _defineProperty from \"@babel/runtime-corejs2/helpers/esm/defineProperty\";\nimport { format } from 'date-fns';\nimport Router from 'next/router';\nimport React, { Component } from 'react';\nimport styled from 'styled-components';\nimport EmptyComponents from '../../../../../components/Empty';\nimport { TableHeader } from '../../../../../components/Table';\nimport TableOperation from '../../../../../components/Table/TableOperation';\nimport StatusBadge from '../../../components/StatusBadge';\nimport { formatDict } from '../../../section/SubscriptionSection';\n\nvar ChapterTable =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(ChapterTable, _Component);\n\n  function ChapterTable(props) {\n    var _this;\n\n    _classCallCheck(this, ChapterTable);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(ChapterTable).call(this, props));\n\n    _defineProperty(_assertThisInitialized(_this), \"changeLoading\", function (loading) {\n      _this.setState({\n        loading: loading\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"toDetailPage\", function (id) {\n      var courseId = Router.query.courseId;\n      var seriesId = Router.query.id;\n      Router.push(\"/skill-course/section/\".concat(id, \"/\").concat(seriesId, \"/\").concat(courseId));\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"formatOperations\", function (record) {\n      var id = record.id,\n          status = record.status;\n      var _this$props = _this.props,\n          deleteSeries = _this$props.deleteSeries,\n          onlineSeries = _this$props.onlineSeries,\n          offlineSeries = _this$props.offlineSeries;\n      var isOnline = status.key === 'ONLINE';\n      return [{\n        title: '查看详情',\n        onClick: _this.toDetailPage.bind(_assertThisInitialized(_this), id)\n      }, {\n        title: '编辑',\n        onClick: _this.onClickCreate.bind(_assertThisInitialized(_this), 'edit', undefined, id)\n      }, {\n        render: isOnline ? offlineSeries.bind(_assertThisInitialized(_this), id) : onlineSeries.bind(_assertThisInitialized(_this), id)\n      }, {\n        render: deleteSeries.bind(_assertThisInitialized(_this), id)\n      }];\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"onClickCreate\", function () // chapterId\n    {\n      var type = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : undefined;\n      var seriesId = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : Router.query.id;\n      var chapterId = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : undefined;\n      Router.push(\"/skill-course/create-chapter/\".concat(type, \"/\").concat(seriesId + (chapterId ? '/' + chapterId : '')));\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"toSectionDetailPage\", function (id) {\n      var seriesId = Router.query.id;\n      var courseId = Router.query.courseId;\n      Router.push(\"/skill-course/section/\".concat(id, \"/\").concat(seriesId, \"/\").concat(courseId));\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"onClickEditSection\", function (id) {\n      Router.push(\"/skill-course/create-section/edit/\".concat(id));\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"formatOperationsSection\", function (record) {\n      var id = record.id,\n          status = record.status;\n      var _this$props2 = _this.props,\n          deleteSectionItem = _this$props2.deleteSectionItem,\n          onlineSectionSection = _this$props2.onlineSectionSection,\n          offlineSectionSection = _this$props2.offlineSectionSection;\n      var isOnline = status.key === 'ONLINE';\n      return [{\n        title: '查看详情',\n        onClick: _this.toSectionDetailPage.bind(_assertThisInitialized(_this), id)\n      }, {\n        title: '编辑',\n        onClick: _this.onClickEditSection.bind(_assertThisInitialized(_this), id)\n      }, {\n        render: isOnline ? offlineSectionSection.bind(_assertThisInitialized(_this), id) : onlineSectionSection.bind(_assertThisInitialized(_this), id)\n      }, {\n        render: deleteSectionItem.bind(_assertThisInitialized(_this), id)\n      }];\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"onTableChange\", function (_pagination, _filters, sorter) {\n      _this.props.onChangeSorter(sorter);\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"expandedRowRender\", function (data) {\n      var dataSource = data.skillSections.map(function (v, i) {\n        return _objectSpread({}, v, {\n          key: i\n        });\n      });\n      var columns = [{\n        title: '小节名称',\n        dataIndex: 'name',\n        key: 'name',\n        width: '24.3%'\n      }, {\n        title: '类型',\n        dataIndex: 'mediaFileDescription',\n        key: 'mediaFileDescription',\n        width: '12.8%',\n        render: function render(v) {\n          return v.map(function (mfd) {\n            return formatDict[mfd.file.format];\n          });\n        }\n      }, {\n        title: '导师',\n        dataIndex: 'tutorDescriptions',\n        key: 'tutorDescriptions',\n        width: '12.8%',\n        render: function render(v) {\n          return v.map(function (value) {\n            return value.tutor.nickname;\n          });\n        }\n      }, {\n        title: '状态',\n        dataIndex: 'status',\n        key: 'status',\n        width: '16.7%',\n        render: function render(v) {\n          return React.createElement(StatusBadge, {\n            currentStatus: v\n          });\n        }\n      }, {\n        title: '创建时间',\n        dataIndex: 'createdAt',\n        key: 'createdAt',\n        width: '16.8%',\n        render: function render(v) {\n          return format(v, 'YYYY/MM/DD HH:mm');\n        }\n      }, {\n        title: '操作',\n        key: 'operation',\n        width: '18.8%',\n        render: function render(_value, record) {\n          return React.createElement(TableOperation, {\n            operations: _this.formatOperationsSection(record)\n          });\n        }\n      }];\n      return React.createElement(_Table, {\n        dataSource: dataSource,\n        columns: columns,\n        pagination: false,\n        loading: _this.state.loading,\n        locale: {\n          emptyText: '此章节内暂无小节，进入章节详情页可创建小节'\n        }\n      });\n    });\n\n    _this.state = {\n      loading: false\n    };\n    return _this;\n  }\n\n  _createClass(ChapterTable, [{\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var _this$props3 = this.props,\n          tableData = _this$props3.tableData,\n          footer = _this$props3.footer;\n      var dataSource = tableData.map(function (v) {\n        return _objectSpread({}, v, {\n          key: v.id\n        });\n      });\n      var columns = [{\n        title: '小节名称',\n        dataIndex: 'name',\n        key: 'name',\n        width: '26.3%'\n      }, {\n        title: '小节数',\n        dataIndex: 'skillSectionsCount',\n        key: 'skillSectionsCount',\n        width: '12.8%'\n      }, {\n        title: '状态',\n        dataIndex: 'status',\n        key: 'status',\n        width: '16.7%',\n        render: function render(v) {\n          return React.createElement(StatusBadge, {\n            currentStatus: v\n          });\n        }\n      }, {\n        title: '创建时间',\n        dataIndex: 'createdAt',\n        key: 'createdAt',\n        width: '19.8%',\n        sorter: true,\n        render: function render(v) {\n          return format(v, 'YYYY/MM/DD HH:mm');\n        }\n      }, {\n        title: '操作',\n        key: 'operation',\n        width: '20.8%',\n        render: function render(_value, record) {\n          return React.createElement(TableOperation, {\n            operations: _this2.formatOperations(record)\n          });\n        }\n      }];\n\n      var Empty = function Empty() {\n        return React.createElement(EmptyComponents, null);\n      };\n\n      return React.createElement(React.Fragment, null, React.createElement(TableHeader, {\n        buttonText: \"\\u521B\\u5EFA\\u7AE0\\u8282\",\n        onClickButton: this.onClickCreate.bind(this, 'create', undefined, undefined)\n      }), React.createElement(_ConfigProvider, {\n        renderEmpty: Empty\n      }, React.createElement(TableWrapper, null, React.createElement(_Table, {\n        dataSource: dataSource,\n        columns: columns,\n        pagination: false,\n        footer: footer,\n        expandedRowRender: this.expandedRowRender,\n        loading: this.state.loading,\n        onChange: this.onTableChange\n      }))));\n    }\n  }]);\n\n  return ChapterTable;\n}(Component);\n\nexport { ChapterTable as default };\nvar TableWrapper = styled.div.withConfig({\n  displayName: \"ChapterTable__TableWrapper\",\n  componentId: \"ytcaan-0\"\n})([\"width:100%;margin-top:24px;\"]);","map":null,"metadata":{},"sourceType":"module"}