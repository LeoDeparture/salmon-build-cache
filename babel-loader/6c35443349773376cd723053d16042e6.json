{"ast":null,"code":"import _classCallCheck from \"@babel/runtime-corejs2/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime-corejs2/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime-corejs2/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime-corejs2/helpers/esm/getPrototypeOf\";\nimport _inherits from \"@babel/runtime-corejs2/helpers/esm/inherits\";\nimport React from 'react';\nimport Loading from '../../../components/Loading';\nimport FileList from '../components/FileList';\nimport ListFileLinks, { QueryListFolderFileLinks } from './QueryListFileLinks';\n\nvar FileListContainer =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(FileListContainer, _React$Component);\n\n  function FileListContainer() {\n    _classCallCheck(this, FileListContainer);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(FileListContainer).apply(this, arguments));\n  }\n\n  _createClass(FileListContainer, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.props.onRef(this);\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this = this;\n\n      var _this$props = this.props,\n          selectedFolderId = _this$props.selectedFolderId,\n          typeList = _this$props.typeList,\n          typeTxt = _this$props.typeTxt;\n      var variables = {\n        input: {\n          where: {\n            folder: {\n              id: selectedFolderId\n            }\n          }\n        }\n      };\n      return React.createElement(ListFileLinks, {\n        query: QueryListFolderFileLinks,\n        variables: variables,\n        notifyOnNetworkStatusChange: true,\n        onCompleted: this.props.stopLoading\n      }, function (_ref) {\n        var data = _ref.data,\n            loading = _ref.loading,\n            error = _ref.error,\n            refetch = _ref.refetch,\n            networkStatus = _ref.networkStatus;\n\n        if (loading || networkStatus === 4) {\n          return React.createElement(Loading, null);\n        }\n\n        if (error) {\n          return null;\n        }\n\n        _this.refetch = refetch;\n        var edges = data.folderFileLinks.edges;\n        var filesData = edges.map(function (v) {\n          return v.node;\n        });\n        return React.createElement(FileList, {\n          typeList: typeList,\n          typeTxt: typeTxt,\n          filesData: filesData,\n          storeFileLink: _this.props.storeFileLink,\n          selectedFileLinks: _this.props.selectedFileLinks\n        });\n      });\n    }\n  }]);\n\n  return FileListContainer;\n}(React.Component);\n\nexport default FileListContainer;","map":null,"metadata":{},"sourceType":"module"}