{"ast":null,"code":"import \"antd/lib/form/style\";\nimport _Form from \"antd/lib/form\";\nimport _toConsumableArray from \"@babel/runtime-corejs2/helpers/esm/toConsumableArray\";\nimport \"antd/lib/config-provider/style\";\nimport _ConfigProvider from \"antd/lib/config-provider\";\nimport \"antd/lib/table/style\";\nimport _Table from \"antd/lib/table\";\nimport \"antd/lib/button/style\";\nimport _Button from \"antd/lib/button\";\nimport \"antd/lib/message/style\";\nimport _message from \"antd/lib/message\";\nimport _classCallCheck from \"@babel/runtime-corejs2/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime-corejs2/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime-corejs2/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime-corejs2/helpers/esm/getPrototypeOf\";\nimport _assertThisInitialized from \"@babel/runtime-corejs2/helpers/esm/assertThisInitialized\";\nimport _inherits from \"@babel/runtime-corejs2/helpers/esm/inherits\";\nimport _defineProperty from \"@babel/runtime-corejs2/helpers/esm/defineProperty\";\nimport \"antd/lib/input/style\";\nimport _Input from \"antd/lib/input\";\nimport \"antd/lib/select/style\";\nimport _Select from \"antd/lib/select\";\nimport { format } from 'date-fns';\nimport Router from 'next/router';\nimport React, { Component } from 'react';\nimport styled from 'styled-components';\nimport EmptyComponents from '../../../../components/Empty';\nimport LimitedInput from '../../../../components/Input/LimitedInput';\nimport ZhiWenSelect from '../../../../components/Select/ZhiWenSelect';\nimport ShadowedTitle from '../../../../components/ShadowedTitle';\nimport { phoneNumberFormat } from '../../../../lib/commonJs';\nimport { NoEmptyInputRule } from '../../../../lib/commonRule';\nimport { BasicInfoWrapper, FooterWrapper } from '../CSSComponent';\nvar Option = _Select.Option;\nvar AvatarContainer = styled.div.withConfig({\n  displayName: \"ConfigureInfo__AvatarContainer\",\n  componentId: \"sc-12t8x61-0\"\n})([\"display:flex;align-items:center;width:176px;margin:-3px 0;\"]);\nvar AvatarImage = styled.img.withConfig({\n  displayName: \"ConfigureInfo__AvatarImage\",\n  componentId: \"sc-12t8x61-1\"\n})([\"display:block;width:28px;height:28px;margin-right:8px;border-radius:50%;\"]);\nvar NickAndName = styled.a.withConfig({\n  displayName: \"ConfigureInfo__NickAndName\",\n  componentId: \"sc-12t8x61-2\"\n})([\"max-width:138px;overflow:hidden;font-size:14px;line-height:28px;color:#5674bf;text-decoration:none;text-overflow:ellipsis;white-space:nowrap;\"]);\nvar TableContainer = styled.div.withConfig({\n  displayName: \"ConfigureInfo__TableContainer\",\n  componentId: \"sc-12t8x61-3\"\n})([\"width:100%;margin-bottom:44px;border-bottom:1px solid #e4e4e4;\"]);\nvar Tip = styled.div.withConfig({\n  displayName: \"ConfigureInfo__Tip\",\n  componentId: \"sc-12t8x61-4\"\n})([\"margin-bottom:44px;font-size:12px;line-height:18px;color:#a2aab8;\"]);\nvar Search = _Input.Search;\nvar StyledSearch = styled(Search).withConfig({\n  displayName: \"ConfigureInfo__StyledSearch\",\n  componentId: \"sc-12t8x61-5\"\n})([\"width:360px;margin-bottom:24px;\"]);\nexport var ConfigureInfo =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(ConfigureInfo, _Component);\n\n  function ConfigureInfo(props) {\n    var _this;\n\n    _classCallCheck(this, ConfigureInfo);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(ConfigureInfo).call(this, props));\n\n    _defineProperty(_assertThisInitialized(_this), \"allCountry\", JSON.parse(localStorage.getItem('zhiwen_all_country')));\n\n    _defineProperty(_assertThisInitialized(_this), \"setInitialValues\", function () {\n      var _this$props$form = _this.props.form,\n          setFieldsValue = _this$props$form.setFieldsValue,\n          validateFields = _this$props$form.validateFields;\n      setFieldsValue({\n        studentName: _this.state.initStudentName\n      });\n      validateFields(['studentName'], {\n        force: true\n      }, function () {\n        return;\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"chooseData\", function (record) {\n      _this.props.form.resetFields();\n\n      _this.setState({\n        isChoose: true,\n        studentAccountId: record.id,\n        initStudentName: record.account.person.name\n      }, _this.setInitialValues);\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"chooseIDType\", function (_value, item) {\n      var _this$props$form2 = _this.props.form,\n          validateFields = _this$props$form2.validateFields,\n          setFieldsValue = _this$props$form2.setFieldsValue;\n      setFieldsValue({\n        identificationNo: undefined\n      });\n\n      _this.setState({\n        identificationType: item.props.children\n      }, function () {\n        validateFields(['identificationNo'], {\n          force: true\n        }, function () {\n          return;\n        });\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"onSearch\", function (value) {\n      _this.props.changeInput(value.replace(/^\\s+|\\s+$/g, ''));\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"renderAvatar\", function (record, item) {\n      var toDetail = function toDetail() {\n        Router.push(\"/user-details/\".concat(item.id));\n      };\n\n      return React.createElement(AvatarContainer, {\n        onClick: toDetail\n      }, React.createElement(AvatarImage, {\n        src: record.person.avatar || '/static/default_avatar_new.png'\n      }), React.createElement(NickAndName, null, \"\".concat(record.person.name || '- -', \"\\u4E28\").concat(record.person.nickname || '- -')));\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"renderDate\", function (record) {\n      return record || '- -';\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"checkPhoneNumber\", function (_rule, _value, callback) {\n      var getFieldValue = _this.props.form.getFieldValue;\n      var phoneNumberCountry = getFieldValue('phoneNumberCountry');\n      var phoneNumber = getFieldValue('emergencyContactPhoneNumber');\n\n      if (!phoneNumberCountry && phoneNumber) {\n        callback('请选择区号');\n      }\n\n      if (phoneNumberCountry && !phoneNumber) {\n        callback('请输入手机号');\n      }\n\n      if (phoneNumberCountry && phoneNumber && !/^[0-9]{6,11}$/.test(phoneNumber)) {\n        callback('请输入6-11位数字的手机号码');\n      }\n\n      callback();\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"validateID\", function (_rule, _value, callback) {\n      var getFieldValue = _this.props.form.getFieldValue;\n      var identificationNo = getFieldValue('identificationNo');\n      var regIdNo = /(^\\d{15}$)|(^\\d{18}$)|(^\\d{17}(\\d|X|x)$)/;\n\n      if (_this.state.identificationType === '身份证' && identificationNo && !regIdNo.test(identificationNo)) {\n        callback('格式错误');\n        return;\n      }\n\n      callback();\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"onClickNextStep\", function () {\n      if (!_this.state.isChoose) {\n        _message.error('请选择学员');\n\n        return;\n      }\n\n      _this.props.form.validateFieldsAndScroll({\n        force: true\n      }, function (err, fieldsValue) {\n        if (!err) {\n          var studentName = fieldsValue.studentName,\n              identificationTypeId = fieldsValue.identificationTypeId,\n              identificationNo = fieldsValue.identificationNo,\n              mailAddress = fieldsValue.mailAddress,\n              emergencyContact = fieldsValue.emergencyContact,\n              phoneNumberCountry = fieldsValue.phoneNumberCountry,\n              emergencyContactPhoneNumber = fieldsValue.emergencyContactPhoneNumber;\n\n          _this.props.changeCreateData({\n            servicePlanSnapshotId: localStorage.getItem('servicePlanSnapshotId'),\n            servicePlanId: JSON.parse(localStorage.getItem('servicePlanSnapshot')).id,\n            studentAccountId: _this.state.studentAccountId,\n            studentName: studentName,\n            identificationTypeId: identificationTypeId,\n            identificationNo: identificationNo,\n            mailAddress: mailAddress,\n            emergencyContact: emergencyContact,\n            emergencyContactPhoneNumber: \"\".concat(phoneNumberCountry).concat(emergencyContactPhoneNumber)\n          }, _this.props.goNextStep);\n        }\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"validateOtherField\", function (_rule, _value, callback) {\n      var validateFieldsAndScroll = _this.props.form.validateFieldsAndScroll;\n      validateFieldsAndScroll(['emergencyContactPhoneNumber'], {\n        force: true\n      }, function () {\n        return;\n      });\n      callback();\n    });\n\n    _this.state = {\n      isChoose: false,\n      identificationType: '',\n      studentName: '',\n      studentAccountId: '',\n      initStudentName: ''\n    };\n    return _this;\n  }\n\n  _createClass(ConfigureInfo, [{\n    key: \"render\",\n    value: function render() {\n      var footer = this.props.footer;\n      var getFieldDecorator = this.props.form.getFieldDecorator;\n      var _this$state = this.state,\n          isChoose = _this$state.isChoose,\n          identificationType = _this$state.identificationType;\n      var columns = [{\n        title: 'ID',\n        width: '17%',\n        dataIndex: 'studentNo'\n      }, {\n        title: '学员（姓名 | 昵称）',\n        width: '23%',\n        dataIndex: 'account',\n        render: this.renderAvatar\n      }, {\n        title: '手机号',\n        width: '18%',\n        dataIndex: 'account.person.phoneNumber',\n        render: function render(value) {\n          return phoneNumberFormat(value);\n        }\n      }, {\n        title: '邮箱',\n        width: '19%',\n        dataIndex: 'account.person.email',\n        render: this.renderDate\n      }, {\n        title: '注册日期',\n        width: '17%',\n        dataIndex: 'createdAt',\n        render: function render(createdAt) {\n          return format(createdAt, 'YYYY/MM/DD');\n        }\n      }];\n\n      var Empty = function Empty() {\n        return React.createElement(EmptyComponents, null);\n      };\n\n      var telCodeOpts = this.allCountry.map(function (item) {\n        return React.createElement(Option, {\n          key: item.id,\n          value: \"+\".concat(item.countryTelCode)\n        }, \"+\".concat(item.countryTelCode, \" \").concat(item.name));\n      });\n      var prefixSelector = getFieldDecorator('phoneNumberCountry', {\n        rules: [{\n          validator: this.validateOtherField\n        }]\n      })(React.createElement(_Select, {\n        showSearch: true,\n        style: {\n          width: 135\n        },\n        placeholder: \"\\u8BF7\\u9009\\u62E9\" // onSelect={this.selectNumberCountry}\n\n      }, telCodeOpts));\n      return React.createElement(React.Fragment, null, React.createElement(ShadowedTitle, {\n        text: \"\\u8BF7\\u641C\\u7D22\\u5E76\\u9009\\u62E9\\u5B66\\u5458\",\n        style: {\n          margin: '44px 0'\n        }\n      }), React.createElement(StyledSearch, {\n        placeholder: \"\\u641C\\u7D22\\u5B66\\u5458ID\\u3001\\u624B\\u673A\\u53F7\\u3001\\u59D3\\u540D\\u3001\\u6635\\u79F0\\u3001\\u90AE\\u7BB1\",\n        enterButton: React.createElement(_Button, null, \"\\u641C\\u7D22\"),\n        onSearch: this.onSearch\n      }), React.createElement(TableContainer, null, React.createElement(_ConfigProvider, {\n        renderEmpty: Empty\n      }, React.createElement(_Table, {\n        style: {\n          width: '100%',\n          height: 297\n        },\n        pagination: false,\n        rowSelection: {\n          hideDefaultSelections: true,\n          type: 'radio',\n          fixed: false,\n          onSelect: this.chooseData\n        },\n        columns: columns,\n        dataSource: this.props.data,\n        scroll: {\n          y: 284\n        },\n        rowKey: \"id\",\n        footer: footer\n      }))), isChoose ? React.createElement(React.Fragment, null, React.createElement(ShadowedTitle, {\n        text: \"\\u8BF7\\u8865\\u5168\\u5B66\\u5458\\u4FE1\\u606F\",\n        style: {\n          margin: '44px 0 14px'\n        }\n      }), React.createElement(Tip, null, \"\\u5DF2\\u4E0B\\u5185\\u5BB9\\u4EC5\\u5728\\u672C\\u6B21\\u670D\\u52A1\\u5355\\u6709\\u6548\"), React.createElement(BasicInfoWrapper, null, React.createElement(_Form, {\n        style: {\n          width: '100%'\n        }\n      }, React.createElement(_Form.Item, {\n        label: \"\\u5B66\\u5458\\u59D3\\u540D\",\n        colon: false\n      }, getFieldDecorator('studentName', {\n        rules: [].concat(_toConsumableArray(NoEmptyInputRule), [{\n          max: 16,\n          message: '字符过长'\n        }])\n      })(React.createElement(LimitedInput, {\n        limit: 16,\n        placeholder: \"\\u8BF7\\u8F93\\u5165\"\n      }))), React.createElement(\"div\", {\n        style: {\n          display: 'flex',\n          flexDirection: 'row',\n          justifyContent: 'space-between'\n        }\n      }, React.createElement(_Form.Item, {\n        label: \"\\u8BC1\\u4EF6\\u7C7B\\u578B\",\n        colon: false\n      }, getFieldDecorator('identificationTypeId', {\n        rules: [{\n          required: true,\n          message: ' '\n        }]\n      })(React.createElement(ZhiWenSelect, {\n        type: \"identification\",\n        style: {\n          width: 107\n        },\n        placeholder: \"\\u8BF7\\u9009\\u62E9\",\n        onChange: this.chooseIDType\n      }))), React.createElement(_Form.Item, {\n        label: \"\\u8BC1\\u4EF6\\u53F7\",\n        colon: false\n      }, getFieldDecorator('identificationNo', {\n        rules: [{\n          required: true,\n          message: '当前字段不可为空'\n        }, {\n          validator: identificationType === '身份证' && this.validateID\n        }]\n      })(React.createElement(_Input, {\n        style: {\n          width: 197\n        },\n        placeholder: \"\\u8BF7\\u8F93\\u5165\"\n      })))), React.createElement(_Form.Item, {\n        label: \"\\u901A\\u8BAF\\u5730\\u5740\",\n        colon: false\n      }, getFieldDecorator('mailAddress', {\n        rules: []\n      })(React.createElement(_Input, {\n        placeholder: \"\\u8BF7\\u8F93\\u5165\"\n      }))), React.createElement(_Form.Item, {\n        label: \"\\u7D27\\u6025\\u8054\\u7CFB\\u4EBA\",\n        colon: false\n      }, getFieldDecorator('emergencyContact', {\n        rules: []\n      })(React.createElement(LimitedInput, {\n        limit: 16,\n        placeholder: \"\\u8BF7\\u8F93\\u5165\"\n      }))), React.createElement(_Form.Item, {\n        label: \"\\u7D27\\u6025\\u8054\\u7CFB\\u4EBA\\u7535\\u8BDD\",\n        colon: false\n      }, getFieldDecorator('emergencyContactPhoneNumber', {\n        rules: [{\n          validator: this.checkPhoneNumber\n        }]\n      })(React.createElement(_Input, {\n        addonBefore: prefixSelector,\n        placeholder: \"\\u8BF7\\u8F93\\u5165\"\n      })))))) : null, React.createElement(FooterWrapper, null, React.createElement(_Button, {\n        type: \"primary\",\n        disabled: false,\n        onClick: this.onClickNextStep\n      }, \"\\u4E0B\\u4E00\\u6B65\")));\n    }\n  }]);\n\n  return ConfigureInfo;\n}(Component);\nexport default _Form.create()(ConfigureInfo);","map":null,"metadata":{},"sourceType":"module"}