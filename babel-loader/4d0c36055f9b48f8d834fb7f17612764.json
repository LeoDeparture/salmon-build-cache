{"ast":null,"code":"import \"antd/lib/button/style\";\nimport _Button from \"antd/lib/button\";\nimport _toConsumableArray from \"@babel/runtime-corejs2/helpers/esm/toConsumableArray\";\nimport \"antd/lib/select/style\";\nimport _Select from \"antd/lib/select\";\nimport \"antd/lib/cascader/style\";\nimport _Cascader from \"antd/lib/cascader\";\nimport \"antd/lib/row/style\";\nimport _Row from \"antd/lib/row\";\nimport \"antd/lib/input/style\";\nimport _Input from \"antd/lib/input\";\nimport \"antd/lib/radio/style\";\nimport _Radio from \"antd/lib/radio\";\nimport \"antd/lib/col/style\";\nimport _Col from \"antd/lib/col\";\nimport \"antd/lib/form/style\";\nimport _Form from \"antd/lib/form\";\nimport _regeneratorRuntime from \"@babel/runtime-corejs2/regenerator\";\nimport _JSON$stringify from \"@babel/runtime-corejs2/core-js/json/stringify\";\nimport _Object$assign from \"@babel/runtime-corejs2/core-js/object/assign\";\nimport _asyncToGenerator from \"@babel/runtime-corejs2/helpers/esm/asyncToGenerator\";\nimport _classCallCheck from \"@babel/runtime-corejs2/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime-corejs2/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime-corejs2/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime-corejs2/helpers/esm/getPrototypeOf\";\nimport _assertThisInitialized from \"@babel/runtime-corejs2/helpers/esm/assertThisInitialized\";\nimport _inherits from \"@babel/runtime-corejs2/helpers/esm/inherits\";\nimport _defineProperty from \"@babel/runtime-corejs2/helpers/esm/defineProperty\";\nimport \"antd/lib/date-picker/style\";\nimport _DatePicker from \"antd/lib/date-picker\";\nimport RadioGroup from 'antd/lib/radio/group';\nimport moment from 'moment';\nimport React from 'react';\nvar MonthPicker = _DatePicker.MonthPicker;\nimport SelectCompany from '../../../../components/SelectComponents/SelectCompany';\nimport ZhiWenCascader from '../../../../components/SelectComponents/ZhiWenCascader';\nimport locale from 'antd/lib/date-picker/locale/zh_CN';\nimport styled from 'styled-components';\nimport { FlexDisplay } from '../../../../lib/commonCss';\nimport { renderSelectOptions, toCascadarOptions } from '../../../../lib/commonJs';\nimport commonFunc from '../CommonFunc';\nimport { FormStyle, InputPlaceHolder, noTxtRequireRule, RadioGroupStyle, RadioInputWrapper, RadioLabelStyle, RadioLabelWrapper, requireRule, SelectPlaceHolder, textAreaAutoSize, textAreaRule } from '../UserResumeComponent';\nvar Label = styled.label.withConfig({\n  displayName: \"EditWorkExperience__Label\",\n  componentId: \"zqy63j-0\"\n})([\"display:block;height:40px;line-height:40px;color:rgba(0,0,0,0.85);\"]);\nvar SelectTitle = styled.span.withConfig({\n  displayName: \"EditWorkExperience__SelectTitle\",\n  componentId: \"zqy63j-1\"\n})([\"min-width:35px;line-height:30px;\"]);\n\nvar ModuleForm =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(ModuleForm, _React$Component);\n\n  function ModuleForm() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, ModuleForm);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(ModuleForm)).call.apply(_getPrototypeOf2, [this].concat(args)));\n\n    _defineProperty(_assertThisInitialized(_this), \"state\", {\n      selectedAddressType: 0,\n      selectedCompanyType: 0,\n      selectedEntAtType: 0\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"updating\", false);\n\n    _defineProperty(_assertThisInitialized(_this), \"handleSubmit\",\n    /*#__PURE__*/\n    function () {\n      var _ref = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee(e) {\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                e.preventDefault();\n\n                if (!_this.updating) {\n                  _context.next = 3;\n                  break;\n                }\n\n                return _context.abrupt(\"return\");\n\n              case 3:\n                _this.updating = true;\n\n                _this.props.form.validateFieldsAndScroll(function (err, fieldsValue) {\n                  if (!err) {\n                    var channelId = fieldsValue.channelId,\n                        companyName = fieldsValue.companyName,\n                        department = fieldsValue.department,\n                        description = fieldsValue.description,\n                        employmentTypeId = fieldsValue.employmentTypeId,\n                        endAt = fieldsValue.endAt,\n                        foreignCompany = fieldsValue.foreignCompany,\n                        foreignCountryId = fieldsValue.foreignCountryId,\n                        industry = fieldsValue.industry,\n                        jobCategoryId = fieldsValue.jobCategoryId,\n                        jobTitle = fieldsValue.jobTitle,\n                        location = fieldsValue.location,\n                        remark = fieldsValue.remark,\n                        startAt = fieldsValue.startAt;\n                    var input = {\n                      channelId: channelId[channelId.length - 1],\n                      companyName: companyName,\n                      department: department,\n                      description: description || '',\n                      employmentTypeId: employmentTypeId,\n                      endAt: endAt ? endAt.toDate() : null,\n                      foreignCompany: foreignCompany,\n                      industryId: industry[1],\n                      jobCategoryId: jobCategoryId,\n                      jobTitle: jobTitle,\n                      remark: remark || '',\n                      startAt: startAt.toDate()\n                    }; // 是否选择国内地址\n\n                    var isForeignAddress = _this.state.selectedAddressType === 1; // 是否选择国内公司\n\n                    var isForeignCompany = _this.state.selectedCompanyType === 1; // 地址信息\n\n                    var addressInput = {\n                      locationCityId: isForeignAddress ? null : location[1],\n                      // 城市id\n                      locationCountryId: isForeignAddress ? foreignCountryId : localStorage.getItem('zhiwen_china_id'),\n                      // 如是中国城市, 获取中国id, 如不是则使用填写的国外id\n                      locationProvinceId: isForeignAddress ? null : location[0] // 省份id\n\n                    };\n\n                    _Object$assign(input, addressInput); // 选择国内/国外公司, 清空相应的国外/国内公司字段\n\n\n                    if (isForeignCompany) {\n                      input.companyName = null;\n                    } else {\n                      input.foreignCompany = null;\n                    } // 选择国内地址, 清空国外地址\n                    // 处理工作地点信息\n\n\n                    if (companyName) {\n                      _this.setState({\n                        selectedCompanyType: 0\n                      });\n                    }\n\n                    if (foreignCompany) {\n                      _this.setState({\n                        selectedCompanyType: 1\n                      });\n                    } // 处理结束时间(至今)\n\n\n                    if (_this.state.selectedEntAtType) {\n                      input.endAt = null;\n                    } // 如果是更新信息, 传信息Id, 如果是创建信息, 传 cvID\n\n\n                    if (_JSON$stringify(_this.props.data) === '{}') {\n                      _Object$assign(input, {\n                        id: _this.props.cvId\n                      });\n                    } else {\n                      _Object$assign(input, {\n                        id: _this.props.data.id\n                      });\n                    } // 执行 mutation\n\n\n                    _this.props.updateData(_this.props.mutation, input, _this.afterUpdate);\n                  } else {\n                    _this.updating = false;\n                  }\n                });\n\n              case 5:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee);\n      }));\n\n      return function (_x) {\n        return _ref.apply(this, arguments);\n      };\n    }());\n\n    _defineProperty(_assertThisInitialized(_this), \"afterUpdate\", function () {\n      _this.props.closeEdit();\n\n      _this.updating = false;\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"handleIndustry\", function (data, filterArr) {\n      var result = filterArr;\n      result.unshift(data.id);\n\n      if (data.parent) {\n        _this.handleIndustry(data.parent, result);\n      }\n\n      return result;\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"componentDidMount\", function () {\n      // 数据回填\n      var _this$props$data = _this.props.data,\n          industry = _this$props$data.industry,\n          company = _this$props$data.company,\n          foreignCompany = _this$props$data.foreignCompany,\n          locationCountry = _this$props$data.locationCountry,\n          locationProvince = _this$props$data.locationProvince,\n          locationCity = _this$props$data.locationCity,\n          department = _this$props$data.department,\n          employmentType = _this$props$data.employmentType,\n          jobCategory = _this$props$data.jobCategory,\n          jobTitle = _this$props$data.jobTitle,\n          channel = _this$props$data.channel,\n          startAt = _this$props$data.startAt,\n          endAt = _this$props$data.endAt,\n          description = _this$props$data.description,\n          remark = _this$props$data.remark;\n      var data = {\n        channelId: channel && _this.handleIndustry(channel, []),\n        companyName: company && company.companyName,\n        department: department,\n        description: description,\n        employmentTypeId: employmentType && employmentType.id,\n        endAt: endAt ? moment(endAt) : undefined,\n        foreignCompany: foreignCompany,\n        industry: industry && _this.handleIndustry(industry, []),\n        jobTitle: jobTitle,\n        jobCategoryId: jobCategory && jobCategory.id,\n        remark: remark,\n        startAt: moment(startAt)\n      };\n\n      if (_JSON$stringify(_this.props.data) !== '{}') {\n        // 处理城市信息\n        commonFunc.assignAddress(_assertThisInitialized(_this), [locationCountry, locationProvince, locationCity], data); // 处理工作地点信息\n\n        if (company) {\n          _this.setState({\n            selectedCompanyType: 0\n          });\n        }\n\n        if (foreignCompany) {\n          _this.setState({\n            selectedCompanyType: 1\n          });\n        } // 处理当 结束时间为至今时\n\n\n        if (endAt) {\n          _this.setState({\n            selectedEntAtType: 0\n          });\n        } else {\n          _this.setState({\n            selectedEntAtType: 1\n          });\n        } // 执行回填\n\n\n        _this.props.form.setFieldsValue(data);\n      }\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"getValue\", function (type, values) {\n      _this.props.form.setFieldsValue(_defineProperty({}, type, values));\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"radioGroupChange\", function (disableName, e) {\n      _this.setState(_defineProperty({}, disableName, e.target.value), function () {\n        if (disableName === 'selectedAddressType') {\n          _this.props.form.validateFields(['location'], {\n            force: true\n          }, function () {\n            return;\n          });\n        }\n\n        if (disableName === 'selectedCompanyType') {\n          _this.props.form.validateFields(['companyName'], {\n            force: true\n          }, function () {\n            return;\n          });\n        }\n\n        if (disableName === 'selectedEntAtType') {\n          _this.props.form.validateFields(['endAt'], {\n            force: true\n          }, function () {\n            return;\n          });\n        }\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"checkHomeCity\", function (_rule, _value, callback) {\n      var getFieldValue = _this.props.form.getFieldValue;\n      var selectedAddressType = _this.state.selectedAddressType;\n      var location = getFieldValue('location');\n      var foreignCountryId = getFieldValue('foreignCountryId');\n\n      if (selectedAddressType === 0 && (!location || !location.length) || selectedAddressType === 1 && !foreignCountryId) {\n        callback('地点字段不可为空，请选填国内或国外地点');\n      }\n\n      callback();\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"validateCompany\", function (_rule, _value, callback) {\n      var getFieldValue = _this.props.form.getFieldValue;\n      var selectedCompanyType = _this.state.selectedCompanyType;\n      var foreignCompany = getFieldValue('foreignCompany');\n      var companyName = getFieldValue('companyName');\n\n      if (selectedCompanyType === 0 && !companyName || selectedCompanyType === 1 && !foreignCompany) {\n        callback(\"\\u516C\\u53F8\\u5B57\\u6BB5\\u4E0D\\u53EF\\u4E3A\\u7A7A\\uFF0C\\u8BF7\\u9009\\u586B\\u56FD\\u5185\\u6216\\u56FD\\u5916\\u516C\\u53F8\");\n      }\n\n      callback();\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"validateEndAt\", function (_rule, _value, callback) {\n      var selectedEntAtType = _this.state.selectedEntAtType;\n      var getFieldValue = _this.props.form.getFieldValue;\n      var endAt = getFieldValue('endAt');\n      var startAt = getFieldValue('startAt');\n\n      if (!endAt && selectedEntAtType === 0) {\n        callback(\"\\u6B64\\u5B57\\u6BB5\\u4E0D\\u53EF\\u4E3A\\u7A7A\");\n      }\n\n      if (selectedEntAtType === 1) {\n        endAt = moment().toISOString();\n      }\n\n      if (startAt && endAt && moment(endAt).endOf('month').isBefore(moment(startAt).startOf('month'))) {\n        callback(\"\\u7ED3\\u675F\\u65F6\\u95F4\\u4E0D\\u80FD\\u65E9\\u4E8E\\u5F00\\u59CB\\u65F6\\u95F4\");\n      }\n\n      callback();\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"validateOtherField\", function (type, _rule, _value, callback) {\n      var validateFieldsAndScroll = _this.props.form.validateFieldsAndScroll;\n      validateFieldsAndScroll([type], {\n        force: true\n      }, function () {\n        return;\n      });\n      callback();\n    });\n\n    return _this;\n  }\n\n  _createClass(ModuleForm, [{\n    key: \"render\",\n    value: function render() {\n      var _this$props$form = this.props.form,\n          getFieldDecorator = _this$props$form.getFieldDecorator,\n          getFieldValue = _this$props$form.getFieldValue;\n      var selectedCompanyType = this.state.selectedCompanyType;\n      var selectedAddressType = this.state.selectedAddressType;\n      var selectedEntAtType = this.state.selectedEntAtType;\n      return React.createElement(_Form, {\n        onSubmit: this.handleSubmit,\n        style: FormStyle,\n        colon: false\n      }, React.createElement(_Row, {\n        gutter: 24\n      }, React.createElement(_Col, {\n        span: 8\n      }, React.createElement(_Form.Item, {\n        label: \"\\u884C\\u4E1A\"\n      }, getFieldDecorator('industry', {\n        rules: noTxtRequireRule\n      })(React.createElement(ZhiWenCascader, {\n        type: \"industry\",\n        getValue: this.getValue.bind(this, 'industry')\n      })))), React.createElement(_Col, {\n        span: 16\n      }, React.createElement(_Form.Item, {\n        label: \"\\u516C\\u53F8\",\n        required: true\n      }, React.createElement(RadioGroup, {\n        style: RadioGroupStyle,\n        value: selectedCompanyType,\n        onChange: this.radioGroupChange.bind(this, 'selectedCompanyType')\n      }, React.createElement(_Col, {\n        span: 12\n      }, React.createElement(_Form.Item, {\n        label: \"\",\n        style: {\n          marginBottom: '0'\n        }\n      }, React.createElement(RadioInputWrapper, null, React.createElement(RadioLabelWrapper, null, React.createElement(_Radio, {\n        value: 0\n      }), React.createElement(\"span\", {\n        style: RadioLabelStyle\n      }, \"\\u56FD\\u5185\")), getFieldDecorator('companyName', {\n        rules: [{\n          required: Boolean(selectedCompanyType === 0),\n          validator: this.validateCompany\n        }]\n      })(React.createElement(SelectCompany, {\n        disabled: Boolean(selectedCompanyType !== 0),\n        setValue: getFieldValue('companyName'),\n        getValue: this.getValue.bind(this, 'companyName'),\n        style: {\n          maxWidth: '80%'\n        }\n      }))))), React.createElement(_Col, {\n        span: 12\n      }, React.createElement(_Form.Item, {\n        label: \"\",\n        style: {\n          marginBottom: '0',\n          marginLeft: '24px'\n        }\n      }, React.createElement(RadioInputWrapper, null, React.createElement(RadioLabelWrapper, null, React.createElement(_Radio, {\n        value: 1\n      }), React.createElement(\"span\", {\n        style: RadioLabelStyle\n      }, \"\\u56FD\\u5916\")), getFieldDecorator('foreignCompany', {\n        rules: [{\n          required: Boolean(selectedCompanyType === 1),\n          validator: this.validateOtherField.bind(this, 'companyName')\n        }]\n      })(React.createElement(_Input, {\n        placeholder: InputPlaceHolder,\n        style: {\n          flex: 1\n        },\n        disabled: Boolean(selectedCompanyType !== 1)\n      }))))))))), React.createElement(_Row, {\n        gutter: 24\n      }, React.createElement(_Col, {\n        span: 16\n      }, React.createElement(_Form.Item, {\n        label: \"\\u5DE5\\u4F5C\\u5730\\u70B9\",\n        required: true\n      }, React.createElement(RadioGroup, {\n        style: RadioGroupStyle,\n        value: selectedAddressType,\n        onChange: this.radioGroupChange.bind(this, 'selectedAddressType')\n      }, React.createElement(_Col, {\n        span: 12\n      }, React.createElement(_Form.Item, {\n        label: \"\",\n        style: {\n          marginBottom: '0'\n        }\n      }, React.createElement(RadioInputWrapper, null, React.createElement(RadioLabelWrapper, null, React.createElement(_Radio, {\n        value: 0\n      }), React.createElement(\"span\", {\n        style: RadioLabelStyle\n      }, \"\\u56FD\\u5185\")), getFieldDecorator('location', {\n        rules: [{\n          required: Boolean(selectedAddressType === 0),\n          validator: this.checkHomeCity\n        }]\n      })(React.createElement(_Cascader, {\n        disabled: Boolean(selectedAddressType !== 0),\n        showSearch: true,\n        style: {\n          flex: 1\n        },\n        options: toCascadarOptions(JSON.parse(localStorage.getItem('zhiwen_province_city')), 2),\n        allowClear: false,\n        placeholder: \"\\u8BF7\\u9009\\u62E9\",\n        notFoundContent: \"\\u65E0\\u7ED3\\u679C\"\n      }))))), React.createElement(_Col, {\n        span: 12\n      }, React.createElement(_Form.Item, {\n        label: \"\",\n        style: {\n          marginBottom: '0',\n          marginLeft: '24px'\n        }\n      }, React.createElement(RadioInputWrapper, null, React.createElement(RadioLabelWrapper, null, React.createElement(_Radio, {\n        value: 1\n      }), React.createElement(\"span\", {\n        style: RadioLabelStyle\n      }, \"\\u56FD\\u5916\")), getFieldDecorator('foreignCountryId', {\n        rules: [{\n          required: Boolean(selectedAddressType === 1),\n          validator: this.validateOtherField.bind(this, 'location')\n        }]\n      })(React.createElement(_Select, {\n        showSearch: true,\n        disabled: Boolean(selectedAddressType !== 1),\n        style: {\n          flex: 1\n        },\n        filterOption: commonFunc.filterData,\n        placeholder: \"\\u4EC5\\u652F\\u6301\\u641C\\u7D22\\u56FD\\u5BB6\"\n      }, renderSelectOptions(JSON.parse(localStorage.getItem('zhiwen_foreign_country'))))))))))), React.createElement(_Col, {\n        span: 8\n      }, React.createElement(_Form.Item, {\n        label: \"\\u6240\\u5C5E\\u90E8\\u95E8/\\u9886\\u57DF\"\n      }, getFieldDecorator('department', {\n        rules: requireRule\n      })(React.createElement(_Input, {\n        placeholder: '法律行业，请输入所在律所的业务领域'\n      }))))), React.createElement(_Row, {\n        gutter: 24\n      }, React.createElement(_Col, {\n        span: 8\n      }, React.createElement(_Form.Item, {\n        label: \"\\u804C\\u4F4D\\u7C7B\\u578B\"\n      }, getFieldDecorator('jobCategoryId', {\n        rules: noTxtRequireRule\n      })(React.createElement(_Select, {\n        placeholder: SelectPlaceHolder\n      }, JSON.parse(localStorage.getItem('zhiwen_all_enum')).listJobCategoryEnum.map(function (item, index) {\n        return React.createElement(_Select.Option, {\n          value: item.id,\n          key: index\n        }, item.name);\n      }))))), React.createElement(_Col, {\n        span: 8\n      }, React.createElement(_Form.Item, {\n        label: \"\\u804C\\u4F4D\"\n      }, getFieldDecorator('jobTitle', {\n        rules: requireRule\n      })(React.createElement(_Input, {\n        placeholder: '请输入职位全称'\n      })))), React.createElement(_Col, {\n        span: 8\n      }, React.createElement(_Form.Item, {\n        label: \"\\u804C\\u4F4D\\u6027\\u8D28\"\n      }, getFieldDecorator('employmentTypeId', {\n        rules: noTxtRequireRule\n      })(React.createElement(_Select, {\n        placeholder: SelectPlaceHolder\n      }, JSON.parse(localStorage.getItem('zhiwen_all_enum')).listEmploymentEnum.map(function (item, index) {\n        return React.createElement(_Select.Option, {\n          value: item.id,\n          key: index\n        }, item.name);\n      }))))), React.createElement(_Col, {\n        span: 8\n      }, React.createElement(_Form.Item, {\n        label: \"\\u83B7\\u53D6\\u6E20\\u9053\"\n      }, getFieldDecorator('channelId', {\n        rules: noTxtRequireRule\n      })(React.createElement(ZhiWenCascader, {\n        type: \"channel\",\n        getValue: this.getValue.bind(this, 'channelId')\n      })))), React.createElement(_Col, {\n        span: 8\n      }, React.createElement(_Form.Item, {\n        label: \"\\u5F00\\u59CB\\u65F6\\u95F4\"\n      }, getFieldDecorator('startAt', {\n        rules: [{\n          message: '此字段无法为空',\n          required: true\n        }, {\n          validator: this.validateOtherField.bind(this, 'endAt')\n        }]\n      })(React.createElement(MonthPicker, {\n        locale: locale,\n        placeholder: SelectPlaceHolder,\n        style: {\n          width: '100%'\n        }\n      })))), React.createElement(_Col, {\n        span: 8\n      }, React.createElement(_Col, {\n        span: 24,\n        style: {\n          paddingLeft: 0,\n          paddingRight: 0\n        }\n      }, React.createElement(RadioGroup, {\n        style: {\n          width: '100%'\n        },\n        value: selectedEntAtType,\n        onChange: this.radioGroupChange.bind(this, 'selectedEntAtType')\n      }, React.createElement(FlexDisplay, {\n        style: {\n          alignItems: 'flex-end'\n        }\n      }, React.createElement(_Col, {\n        span: 19,\n        style: {\n          paddingLeft: 0,\n          paddingRight: 0\n        }\n      }, React.createElement(Label, {\n        className: \"ant-form-item-required\",\n        title: \"\\u7ED3\\u675F\\u65F6\\u95F4\"\n      }, \"\\u7ED3\\u675F\\u65F6\\u95F4\"), React.createElement(_Form.Item, null, React.createElement(\"div\", {\n        style: {\n          display: 'flex'\n        }\n      }, React.createElement(_Radio, {\n        value: 0\n      }), React.createElement(SelectTitle, {\n        style: {\n          width: 100,\n          whiteSpace: 'nowrap'\n        }\n      }, \"\\u7ED3\\u675F\\u65F6\\u95F4\"), getFieldDecorator('endAt', {\n        rules: [{\n          validator: this.validateEndAt\n        }]\n      })(React.createElement(MonthPicker, {\n        disabled: Boolean(selectedEntAtType),\n        locale: locale,\n        placeholder: \"\\u8BF7\\u9009\\u62E9\",\n        style: {\n          width: '100%'\n        }\n      }))))), React.createElement(_Col, {\n        span: 4,\n        offset: 1,\n        style: {\n          paddingLeft: 0,\n          paddingRight: 0\n        }\n      }, React.createElement(_Form.Item, null, React.createElement(\"div\", {\n        style: {\n          display: 'flex'\n        }\n      }, React.createElement(_Radio, {\n        value: 1\n      }), React.createElement(SelectTitle, null, \"\\u81F3\\u4ECA\")))))))), React.createElement(_Col, {\n        span: 24\n      }, React.createElement(_Form.Item, {\n        label: \"\\u5DE5\\u4F5C\\u5185\\u5BB9\"\n      }, getFieldDecorator('description', {\n        rules: [].concat(_toConsumableArray(textAreaRule), _toConsumableArray(noTxtRequireRule))\n      })(React.createElement(_Input.TextArea, {\n        placeholder: '请输入工作期间的主要工作内容',\n        autoSize: textAreaAutoSize\n      })))), React.createElement(_Col, {\n        span: 24\n      }, React.createElement(_Form.Item, {\n        label: \"\\u5907\\u6CE8\"\n      }, getFieldDecorator('remark', {\n        rules: textAreaRule\n      })(React.createElement(_Input.TextArea, {\n        placeholder: InputPlaceHolder,\n        autoSize: textAreaAutoSize\n      }))))), React.createElement(_Form.Item, {\n        labelCol: {\n          span: 12\n        }\n      }, React.createElement(_Button, {\n        onClick: this.props.cancel\n      }, \"\\u53D6\\u6D88\"), React.createElement(_Button, {\n        disabled: this.updating,\n        style: {\n          marginLeft: 20\n        },\n        type: \"primary\",\n        htmlType: \"submit\"\n      }, \"\\u4FDD\\u5B58\")));\n    }\n  }]);\n\n  return ModuleForm;\n}(React.Component);\n\nvar EditWorkExperience = _Form.create()(ModuleForm);\n\nexport default EditWorkExperience;","map":null,"metadata":{},"sourceType":"module"}