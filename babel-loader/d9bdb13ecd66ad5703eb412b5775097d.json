{"ast":null,"code":"import _extends from \"@babel/runtime-corejs2/helpers/esm/extends\";\nimport _classCallCheck from \"@babel/runtime-corejs2/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime-corejs2/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime-corejs2/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime-corejs2/helpers/esm/getPrototypeOf\";\nimport _inherits from \"@babel/runtime-corejs2/helpers/esm/inherits\";\nimport React, { Component } from 'react';\nimport Selector from './components/Selector';\nimport ListOperatorAccounts, { QueryListOperatorAccounts } from './containers/QueryListOperators';\n\nvar Index =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(Index, _Component);\n\n  function Index() {\n    _classCallCheck(this, Index);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(Index).apply(this, arguments));\n  }\n\n  _createClass(Index, [{\n    key: \"render\",\n    value: function render() {\n      var _this = this;\n\n      var _this$props = this.props,\n          operators = _this$props.operators,\n          departmentName = _this$props.departmentName;\n\n      if (departmentName) {\n        var variables = {\n          input: {\n            where: {\n              account: {\n                accountRoles_some: {\n                  role: {\n                    department: {\n                      name: departmentName\n                    }\n                  } // isDeleted: false,\n                  // enabled: true,\n\n                }\n              }\n            }\n          }\n        };\n        return React.createElement(ListOperatorAccounts, {\n          query: QueryListOperatorAccounts,\n          variables: variables,\n          fetchPolicy: \"network-only\"\n        }, function (_ref) {\n          var data = _ref.data,\n              error = _ref.error,\n              loading = _ref.loading;\n          if (error || loading) return null;\n          return React.createElement(Selector, _extends({\n            operators: data.operatorAccounts\n          }, _this.props));\n        });\n      }\n\n      if (operators && operators.length) {\n        return React.createElement(Selector, _extends({\n          operators: operators\n        }, this.props));\n      }\n\n      return null;\n    }\n  }]);\n\n  return Index;\n}(Component);\n\nexport { Index as default };","map":null,"metadata":{},"sourceType":"module"}