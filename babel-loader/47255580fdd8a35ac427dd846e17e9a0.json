{"ast":null,"code":"import \"antd/lib/modal/style\";\nimport _Modal from \"antd/lib/modal\";\nimport \"antd/lib/switch/style\";\nimport _Switch from \"antd/lib/switch\";\nimport \"antd/lib/form/style\";\nimport _Form from \"antd/lib/form\";\nimport _regeneratorRuntime from \"@babel/runtime-corejs2/regenerator\";\nimport \"antd/lib/message/style\";\nimport _message from \"antd/lib/message\";\nimport _asyncToGenerator from \"@babel/runtime-corejs2/helpers/esm/asyncToGenerator\";\nimport _classCallCheck from \"@babel/runtime-corejs2/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime-corejs2/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime-corejs2/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime-corejs2/helpers/esm/getPrototypeOf\";\nimport _assertThisInitialized from \"@babel/runtime-corejs2/helpers/esm/assertThisInitialized\";\nimport _inherits from \"@babel/runtime-corejs2/helpers/esm/inherits\";\nimport _defineProperty from \"@babel/runtime-corejs2/helpers/esm/defineProperty\";\nimport debounce from 'lodash/debounce';\nimport React, { Component } from 'react';\nimport styled from 'styled-components';\nimport LimitedInput from '../../../../components/Input/LimitedInput';\nimport { parseErrorCode } from '../../../../lib/commonJs';\n\nvar CreateModal =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(CreateModal, _Component);\n\n  function CreateModal(props) {\n    var _this;\n\n    _classCallCheck(this, CreateModal);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(CreateModal).call(this, props));\n\n    _defineProperty(_assertThisInitialized(_this), \"checkAction\", function (value) {\n      var _this$props = _this.props,\n          parentId = _this$props.parentId,\n          checkNameDuplication = _this$props.checkNameDuplication;\n      checkNameDuplication(value, parentId).then(function (v) {\n        if (v.data.checkSkillCategoryNameDuplication) {\n          _this.controlAlert(v.data.checkSkillCategoryNameDuplication.status);\n        }\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"showPop\", function () {\n      _this.setState({\n        visible: true\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"hidePop\", function () {\n      _this.setState({\n        visible: false,\n        value: '' // 清空输入框内容\n\n      }); // 清空提示文案\n\n\n      _this.controlAlert(false);\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"controlAlert\", function (isShow) {\n      _this.setState({\n        validateStatus: isShow ? 'error' : '',\n        help: isShow ? '此分类名已被同一级别分类占用，请重新输入' : '',\n        disableCreate: isShow\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"handleOk\",\n    /*#__PURE__*/\n    _asyncToGenerator(\n    /*#__PURE__*/\n    _regeneratorRuntime.mark(function _callee() {\n      var _this$props2, parentId, editItemId, index, _this$state, value, childrenType, name, _this$props3, updateCategory, createCategory, editItemData, action, mesText, variables;\n\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _this$props2 = _this.props, parentId = _this$props2.parentId, editItemId = _this$props2.editItemId, index = _this$props2.index;\n              _this$state = _this.state, value = _this$state.value, childrenType = _this$state.childrenType;\n              name = value && value.trim();\n              _this$props3 = _this.props, updateCategory = _this$props3.updateCategory, createCategory = _this$props3.createCategory, editItemData = _this$props3.editItemData;\n\n              _this.setState({\n                loading: true\n              });\n\n              if (editItemId) {\n                action = updateCategory;\n                mesText = '已成功保存';\n                variables = {\n                  input: {\n                    id: editItemData.id,\n                    name: name\n                  }\n                };\n              }\n\n              if (!editItemId) {\n                action = createCategory;\n                mesText = '已成功创建目录。';\n                variables = {\n                  input: {\n                    parentId: parentId,\n                    name: name,\n                    childrenType: childrenType\n                  }\n                };\n              }\n\n              action(variables).then(function (result) {\n                if (result) {\n                  var returnData = result.data.result;\n\n                  _this.props.onClickItem({\n                    itemData: returnData,\n                    id: returnData.id\n                  }, index);\n\n                  _this.setState({\n                    visible: false,\n                    value: '' // 清空输入框内容\n\n                  });\n\n                  _message.success(mesText);\n                }\n              }).catch(function (error) {\n                // 名称已存在\n                if (parseErrorCode(error) === 'DuplicationError') {\n                  _this.controlAlert(true);\n                }\n              }).finally(function () {\n                _this.setState({\n                  loading: false\n                });\n              });\n\n            case 8:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    })));\n\n    _defineProperty(_assertThisInitialized(_this), \"onChangeInput\", function (e) {\n      var value = e.target.value;\n\n      _this.setState({\n        value: value\n      });\n\n      _this.debounceFunc(value);\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"onChangeType\", function (childrenType) {\n      _this.setState({\n        childrenType: childrenType\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"afterClose\", function () {\n      var _this$props4 = _this.props,\n          changeEditItemId = _this$props4.changeEditItemId,\n          editItemId = _this$props4.editItemId,\n          index = _this$props4.index;\n\n      if (editItemId) {\n        changeEditItemId();\n      } // 当弹窗被关闭后 清空状态\n\n\n      _this.setState({\n        childrenType: index === 2\n      });\n    });\n\n    _this.state = {\n      visible: false,\n      loading: false,\n      value: '',\n      validateStatus: '',\n      help: '',\n      childrenType: false,\n      disableCreate: false\n    };\n    return _this;\n  }\n\n  _createClass(CreateModal, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.props.onRef(this);\n      this.debounceFunc = debounce(this.checkAction, 500);\n    }\n  }, {\n    key: \"componentWillReceiveProps\",\n    value: function componentWillReceiveProps(nextProps) {\n      var editItemId = this.props.editItemId;\n      var editItemData = nextProps.editItemData,\n          index = nextProps.index; // 创建模式时，第三级关联课程默认选中\n\n      if (index === 2 && !editItemId) {\n        this.setState({\n          childrenType: true\n        });\n      } //  编辑模式，props 更新后设置value 和 childrenType\n\n\n      if (editItemId !== nextProps.editItemId && editItemData) {\n        var _name = editItemData.name,\n            childrenType = editItemData.childrenType;\n        this.setState({\n          value: _name,\n          childrenType: childrenType\n        });\n      }\n    } // 显示弹窗\n\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this$props5 = this.props,\n          levelText = _this$props5.levelText,\n          editItemId = _this$props5.editItemId,\n          index = _this$props5.index;\n      var _this$state2 = this.state,\n          visible = _this$state2.visible,\n          loading = _this$state2.loading,\n          value = _this$state2.value,\n          validateStatus = _this$state2.validateStatus,\n          help = _this$state2.help,\n          disableCreate = _this$state2.disableCreate,\n          childrenType = _this$state2.childrenType;\n      return React.createElement(_Modal, {\n        title: \"\\u521B\\u5EFA\".concat(levelText),\n        visible: visible,\n        closable: false,\n        maskClosable: false,\n        afterClose: this.afterClose,\n        okButtonProps: {\n          disabled: !value.trim() || disableCreate\n        },\n        onOk: this.handleOk,\n        onCancel: this.hidePop,\n        okText: editItemId ? '保存' : \"\\u521B\\u5EFA\",\n        cancelText: \"\\u53D6\\u6D88\",\n        confirmLoading: loading,\n        width: 560,\n        destroyOnClose: true\n      }, React.createElement(_Form.Item, {\n        label: \"\".concat(levelText, \"\\u540D\\u79F0\"),\n        validateStatus: validateStatus,\n        help: help,\n        required: true,\n        colon: false\n      }, React.createElement(LimitedInput, {\n        autoFocus: true,\n        placeholder: \"\\u8BF7\\u8F93\\u5165\",\n        limit: 20,\n        onChange: this.onChangeInput,\n        value: value\n      })), React.createElement(_Form.Item, {\n        label: \"\\u662F\\u5426\\u53EF\\u5173\\u8054\\u8BFE\\u7A0B\\uFF1F\",\n        colon: false\n      }, React.createElement(_Switch, {\n        defaultChecked: childrenType,\n        onChange: this.onChangeType,\n        disabled: !!editItemId || index === 2\n      }), React.createElement(Hint, null, \"\\u5982\\u8BBE\\u7F6E\\u6B64\\u5206\\u7C7B\\u4E0D\\u53EF\\u5173\\u8054\\u8BFE\\u7A0B\\uFF0C\\u53EF\\u7EE7\\u7EED\\u521B\\u5EFA\\u6B64\\u5206\\u7C7B\\u4E0B\\u7684\\u5B50\\u5206\\u7C7B\\u3002\")));\n    }\n  }]);\n\n  return CreateModal;\n}(Component);\n\nexport default CreateModal;\nvar Hint = styled.span.withConfig({\n  displayName: \"CreateModal__Hint\",\n  componentId: \"xevsw4-0\"\n})([\"margin-left:8px;font-size:12px;line-height:18px;color:#a2aab8;\"]);","map":null,"metadata":{},"sourceType":"module"}