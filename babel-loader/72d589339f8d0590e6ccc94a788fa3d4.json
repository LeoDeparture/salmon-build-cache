{"ast":null,"code":"import _classCallCheck from \"@babel/runtime-corejs2/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime-corejs2/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime-corejs2/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime-corejs2/helpers/esm/getPrototypeOf\";\nimport _assertThisInitialized from \"@babel/runtime-corejs2/helpers/esm/assertThisInitialized\";\nimport _inherits from \"@babel/runtime-corejs2/helpers/esm/inherits\";\nimport _defineProperty from \"@babel/runtime-corejs2/helpers/esm/defineProperty\";\nimport Router from 'next/router';\nimport React from 'react';\nimport FormComponent from '../components/FormComponent';\nimport GetAppointmentById, { QueryGetGroupCourseAppointmentById, QueryGetPrivateCourseAppointmentById } from './GetAppointmentQuery';\n\nvar FormContainer =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(FormContainer, _React$Component);\n\n  function FormContainer() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, FormContainer);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(FormContainer)).call.apply(_getPrototypeOf2, [this].concat(args)));\n\n    _defineProperty(_assertThisInitialized(_this), \"state\", {\n      id: '',\n      type: '',\n      studentId: ''\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"componentDidMount\", function () {\n      var _Router$query = Router.query,\n          id = _Router$query.id,\n          type = _Router$query.type,\n          studentId = _Router$query.studentId;\n\n      _this.setState({\n        id: id,\n        type: type,\n        studentId: studentId\n      });\n    });\n\n    return _this;\n  }\n\n  _createClass(FormContainer, [{\n    key: \"render\",\n    value: function render() {\n      var _this$state = this.state,\n          id = _this$state.id,\n          type = _this$state.type,\n          studentId = _this$state.studentId;\n      var variables;\n      var query;\n\n      if (type === 'private') {\n        variables = {\n          input: {\n            id: id\n          }\n        };\n        query = QueryGetPrivateCourseAppointmentById;\n      }\n\n      if (type === 'group') {\n        variables = {\n          input: {\n            id: id,\n            studentId: studentId\n          }\n        };\n        query = QueryGetGroupCourseAppointmentById;\n      }\n\n      if (!query) {\n        return null;\n      }\n\n      return React.createElement(GetAppointmentById, {\n        query: query,\n        variables: variables,\n        fetchPolicy: \"network-only\"\n      }, function (_ref) {\n        var data = _ref.data,\n            loading = _ref.loading,\n            error = _ref.error;\n\n        if (loading) {\n          return null;\n        }\n\n        if (error) {\n          return null;\n        }\n\n        if (data.appointmentData) {\n          return React.createElement(FormComponent, {\n            appointmentData: data.appointmentData\n          });\n        }\n\n        return null;\n      });\n    }\n  }]);\n\n  return FormContainer;\n}(React.Component);\n\nexport default FormContainer;","map":null,"metadata":{},"sourceType":"module"}