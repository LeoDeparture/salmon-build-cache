{"ast":null,"code":"import \"antd/lib/config-provider/style\";\nimport _ConfigProvider from \"antd/lib/config-provider\";\nimport \"antd/lib/table/style\";\nimport _Table from \"antd/lib/table\";\nimport _objectSpread from \"@babel/runtime-corejs2/helpers/esm/objectSpread\";\nimport \"antd/lib/badge/style\";\nimport _Badge from \"antd/lib/badge\";\nimport _classCallCheck from \"@babel/runtime-corejs2/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime-corejs2/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime-corejs2/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime-corejs2/helpers/esm/getPrototypeOf\";\nimport _assertThisInitialized from \"@babel/runtime-corejs2/helpers/esm/assertThisInitialized\";\nimport _inherits from \"@babel/runtime-corejs2/helpers/esm/inherits\";\nimport _defineProperty from \"@babel/runtime-corejs2/helpers/esm/defineProperty\";\nimport React from 'react';\nimport EmptyComponent from '../../../../components/Empty';\n\nvar AccountTable =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(AccountTable, _React$Component);\n\n  function AccountTable() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, AccountTable);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(AccountTable)).call.apply(_getPrototypeOf2, [this].concat(args)));\n\n    _defineProperty(_assertThisInitialized(_this), \"operationRender\", function (_value, record) {\n      var person = record.account.person,\n          enabled = record.enabled;\n      var emailVerified = person.emailVerified;\n      var actions = [];\n\n      if (!enabled) {\n        actions = ['启用', '删除'];\n      } else if (emailVerified) {\n        actions = ['更换角色', '重置密码', '停用', '删除'];\n      } else {\n        actions = ['发送验证邮件', '删除'];\n      }\n\n      return _this.props.menuRender(actions, record);\n    });\n\n    return _this;\n  }\n\n  _createClass(AccountTable, [{\n    key: \"render\",\n    value: function render() {\n      var _this$props = this.props,\n          footer = _this$props.footer,\n          accountRoles = _this$props.accountRoles;\n      var columnData = [{\n        dataIndex: 'account.person.name',\n        key: 'name',\n        title: '姓名',\n        width: '20%',\n        render: function render(value) {\n          return value || '- -';\n        }\n      }, {\n        dataIndex: 'account.person.nickname',\n        key: 'nickname',\n        title: '昵称',\n        width: '15%',\n        render: function render(value) {\n          return value || '- -';\n        }\n      }, {\n        dataIndex: 'account.person.email',\n        key: 'email',\n        title: 'MIS账号',\n        width: '21%',\n        render: function render(value) {\n          return value || '- -';\n        }\n      }, {\n        dataIndex: 'role.name',\n        key: 'roleName',\n        title: '角色',\n        width: '14%',\n        render: function render(value) {\n          return value || '- -';\n        }\n      }, {\n        dataIndex: 'status',\n        key: 'status',\n        render: function render(_value, record) {\n          var person = record.account.person,\n              enabled = record.enabled;\n          var emailVerified = person.emailVerified;\n          var color;\n          var text;\n\n          if (!enabled) {\n            color = '#bbb';\n            text = '已停用';\n          } else if (emailVerified) {\n            color = '#00aa00';\n            text = '正常';\n          } else {\n            color = '#f5a623';\n            text = '待验证';\n          }\n\n          return React.createElement(_Badge, {\n            color: color,\n            text: text\n          });\n        },\n        title: '账号状态',\n        width: '8%'\n      }, {\n        dataIndex: 'operation',\n        key: 'operation',\n        render: this.operationRender,\n        title: '操作',\n        width: '22%'\n      }];\n      var columns = columnData.map(function (column) {\n        return _objectSpread({}, column, {\n          ellipsis: true\n        });\n      });\n\n      var Empty = function Empty() {\n        return React.createElement(EmptyComponent, {\n          description: \"\\u6682\\u65E0\\u8D26\\u53F7\\uFF0C\\u70B9\\u51FB\\u53F3\\u4E0A\\u89D2\\u6309\\u94AE\\u5F00\\u59CB\\u521B\\u5EFA\\u8D26\\u53F7\"\n        });\n      };\n\n      return React.createElement(_ConfigProvider, {\n        renderEmpty: Empty\n      }, React.createElement(_Table, {\n        columns: columns,\n        dataSource: accountRoles,\n        pagination: false,\n        bordered: false,\n        footer: footer\n      }));\n    }\n  }]);\n\n  return AccountTable;\n}(React.Component);\n\nexport { AccountTable as default };","map":null,"metadata":{},"sourceType":"module"}