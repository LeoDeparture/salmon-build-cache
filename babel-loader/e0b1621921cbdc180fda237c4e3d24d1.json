{"ast":null,"code":"import \"antd/lib/cascader/style\";\nimport _Cascader from \"antd/lib/cascader\";\nimport _classCallCheck from \"@babel/runtime-corejs2/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime-corejs2/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime-corejs2/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime-corejs2/helpers/esm/getPrototypeOf\";\nimport _assertThisInitialized from \"@babel/runtime-corejs2/helpers/esm/assertThisInitialized\";\nimport _inherits from \"@babel/runtime-corejs2/helpers/esm/inherits\";\nimport _defineProperty from \"@babel/runtime-corejs2/helpers/esm/defineProperty\";\nimport { filter, flatten, includes, map, uniq } from 'lodash';\nimport React, { Component } from 'react';\nimport { emptyCascaderRender } from '../JSComponent';\nimport QueryListZhiwenCompanies, { queryListZhiwenCompany } from './QueryListZhiwenCompanies';\n\nvar CompanySelectContainer =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(CompanySelectContainer, _Component);\n\n  function CompanySelectContainer() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, CompanySelectContainer);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(CompanySelectContainer)).call.apply(_getPrototypeOf2, [this].concat(args)));\n\n    _defineProperty(_assertThisInitialized(_this), \"filterData\", function (input, option) {\n      return option.props.children.toLowerCase().indexOf(input.toLowerCase()) >= 0;\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"getData\", function (data, domains) {\n      var listZhiwenCompanies = data.listZhiwenCompanies;\n      var domainsData = domains.map(function (item) {\n        return {\n          id: item.id || item.value,\n          name: item.name || item.children\n        };\n      });\n\n      var getCompany = function getCompany(company) {\n        return uniq(flatten(map(company.industryLevelDomains, 'domain')));\n      };\n\n      return map(domainsData, function (domain) {\n        return {\n          value: domain.id,\n          label: domain.name,\n          children: filter(listZhiwenCompanies, function (company) {\n            return includes(map(getCompany(company), 'id'), domain.id);\n          }).map(function (item) {\n            return {\n              value: item.id,\n              label: item.name\n            };\n          })\n        };\n      });\n    });\n\n    return _this;\n  }\n\n  _createClass(CompanySelectContainer, [{\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var _this$props = this.props,\n          industryId = _this$props.industryId,\n          companyLevelId = _this$props.companyLevelId,\n          domains = _this$props.domains,\n          onChange = _this$props.onChange,\n          domainsName = _this$props.domainsName;\n      return React.createElement(QueryListZhiwenCompanies, {\n        query: queryListZhiwenCompany,\n        variables: {\n          input: {\n            industryLevelDomains_some: {\n              industry: {\n                id: industryId\n              },\n              level: {\n                id: companyLevelId\n              },\n              domain: {\n                id_in: domains\n              }\n            }\n          }\n        },\n        fetchPolicy: \"network-only\"\n      }, function (_ref) {\n        var data = _ref.data,\n            loading = _ref.loading,\n            error = _ref.error,\n            client = _ref.client;\n        var newData = domainsName ? _this2.getData(data, domainsName) : [];\n        _this2.client = client;\n\n        if (loading) {\n          return React.createElement(_Cascader, {\n            showSearch: true,\n            displayRender: emptyCascaderRender.bind(_this2, ''),\n            options: newData,\n            allowClear: false,\n            onChange: onChange,\n            placeholder: \"\\u53EF\\u591A\\u9009\",\n            notFoundContent: \"\\u65E0\\u7ED3\\u679C\"\n          });\n        }\n\n        if (error) {\n          return null;\n        }\n\n        return React.createElement(_Cascader, {\n          showSearch: true,\n          displayRender: emptyCascaderRender.bind(_this2, ''),\n          options: newData,\n          allowClear: false,\n          onChange: onChange,\n          placeholder: \"\\u53EF\\u591A\\u9009\",\n          notFoundContent: \"\\u65E0\\u7ED3\\u679C\"\n        });\n      });\n    }\n  }]);\n\n  return CompanySelectContainer;\n}(Component);\n\nexport { CompanySelectContainer as default };","map":null,"metadata":{},"sourceType":"module"}