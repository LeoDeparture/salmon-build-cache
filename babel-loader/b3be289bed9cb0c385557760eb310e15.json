{"ast":null,"code":"import \"antd/lib/back-top/style\";\nimport _BackTop from \"antd/lib/back-top\";\nimport \"antd/lib/button/style\";\nimport _Button from \"antd/lib/button\";\nimport \"antd/lib/badge/style\";\nimport _Badge from \"antd/lib/badge\";\nimport _regeneratorRuntime from \"@babel/runtime-corejs2/regenerator\";\nimport \"antd/lib/icon/style\";\nimport _Icon from \"antd/lib/icon\";\nimport \"antd/lib/modal/style\";\nimport _Modal from \"antd/lib/modal\";\nimport \"antd/lib/message/style\";\nimport _message from \"antd/lib/message\";\nimport _asyncToGenerator from \"@babel/runtime-corejs2/helpers/esm/asyncToGenerator\";\nimport _Object$values from \"@babel/runtime-corejs2/core-js/object/values\";\nimport _objectSpread from \"@babel/runtime-corejs2/helpers/esm/objectSpread\";\nimport _classCallCheck from \"@babel/runtime-corejs2/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime-corejs2/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime-corejs2/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime-corejs2/helpers/esm/getPrototypeOf\";\nimport _assertThisInitialized from \"@babel/runtime-corejs2/helpers/esm/assertThisInitialized\";\nimport _inherits from \"@babel/runtime-corejs2/helpers/esm/inherits\";\nimport _defineProperty from \"@babel/runtime-corejs2/helpers/esm/defineProperty\";\nimport { format } from 'date-fns';\nimport Head from 'next/head';\nimport Router from 'next/router';\nimport React from 'react';\nimport styled from 'styled-components';\nimport { PageBlock, PageGrid, PageInfoHeader } from '../../../../components/PageLayout';\nimport { parseErrorCode } from '../../../../lib/commonJs';\nimport { InfoBody, Item, ItemContent, ItemTitle, LineWrapper } from '../../components/CSSComponents';\nimport Price from '../../components/Price';\nimport BasicInfo from './BasicInfo';\nimport JobService from './JobService';\nimport PriceInfo from './PriceInfo';\nimport Skills from './Skills';\n\nvar ServicePlanDetail =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(ServicePlanDetail, _React$Component);\n\n  function ServicePlanDetail(props) {\n    var _this;\n\n    _classCallCheck(this, ServicePlanDetail);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(ServicePlanDetail).call(this, props));\n\n    _defineProperty(_assertThisInitialized(_this), \"checkFilled\", function () {\n      var _this$props$servicePl = _this.props.servicePlan,\n          name = _this$props$servicePl.name,\n          serviceCatalog = _this$props$servicePl.serviceCatalog,\n          servicePeriod = _this$props$servicePl.servicePeriod,\n          prepayPercent = _this$props$servicePl.prepayPercent,\n          basePrice = _this$props$servicePl.basePrice,\n          maxDelayDays = _this$props$servicePl.maxDelayDays,\n          privateCourseConfig = _this$props$servicePl.careerBusinessPrivateCourseServiceConfig,\n          groupCourseConfig = _this$props$servicePl.careerBusinessGroupCourseServiceConfig,\n          subscriptionCourseConfig = _this$props$servicePl.careerBusinessSubscriptionCourseServiceConfig,\n          careerPlanConfig = _this$props$servicePl.careerBusinessCareerPlanningServiceConfig,\n          jobServiceConfig = _this$props$servicePl.jobBusinessJobRecommendationServiceConfig;\n      var baseInfoFilled = Boolean(name && serviceCatalog && serviceCatalog.id && servicePeriod);\n      var priceInfoFilled = Boolean(basePrice && prepayPercent && maxDelayDays);\n      var skillsFilled = [privateCourseConfig, groupCourseConfig, subscriptionCourseConfig, careerPlanConfig].filter(function (v) {\n        return v;\n      }).map(function (v) {\n        var obj = _objectSpread({}, v);\n\n        delete obj.introduction;\n        return obj;\n      }).every(function (v) {\n        return !_Object$values(v).some(function (item) {\n          return !item;\n        });\n      });\n      var jobServiceFilled = jobServiceConfig ? Boolean(jobServiceConfig && jobServiceConfig.name && jobServiceConfig.validDuration && jobServiceConfig.jobCharacters.length && jobServiceConfig.refundPlan && jobServiceConfig.companyLevel && jobServiceConfig.requiredDomains) : true;\n      return {\n        baseInfoFilled: baseInfoFilled,\n        priceInfoFilled: priceInfoFilled,\n        skillsFilled: skillsFilled,\n        jobServiceFilled: jobServiceFilled\n      };\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"executeDelete\",\n    /*#__PURE__*/\n    _asyncToGenerator(\n    /*#__PURE__*/\n    _regeneratorRuntime.mark(function _callee() {\n      var deleteServicePlan;\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              deleteServicePlan = _this.props.deleteServicePlan;\n\n              _this.setState({\n                deleteLoading: true\n              });\n\n              _context.next = 4;\n              return deleteServicePlan().then(function () {\n                _message.success('成功删除此方案。');\n\n                Router.push('/service/plans');\n              }).catch(function (error) {\n                if (parseErrorCode(error) === 'servicePlanHasBeenUsed') {\n                  _Modal.info({\n                    title: '暂时无法删除此方案',\n                    icon: React.createElement(_Icon, {\n                      type: \"exclamation-circle\",\n                      theme: \"filled\",\n                      style: {\n                        color: '#FF991F'\n                      }\n                    }),\n                    content: error.message\n                  });\n                }\n              }).finally(function () {\n                _this.setState({\n                  deleteLoading: false\n                });\n              });\n\n            case 4:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    })));\n\n    _defineProperty(_assertThisInitialized(_this), \"onClickDelete\", function () {\n      _Modal.confirm({\n        title: '确认删除此方案吗？',\n        icon: React.createElement(_Icon, {\n          type: \"question-circle\",\n          theme: \"filled\"\n        }),\n        okText: '确认删除',\n        onOk: _this.executeDelete,\n        cancelText: '取消',\n        okButtonProps: {\n          type: 'danger',\n          loading: _this.state.deleteLoading,\n          ghost: true\n        }\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"executeChangeStatus\",\n    /*#__PURE__*/\n    _asyncToGenerator(\n    /*#__PURE__*/\n    _regeneratorRuntime.mark(function _callee2() {\n      var _this$props, changeStatus, servicePlan, status, allChecked;\n\n      return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              _this$props = _this.props, changeStatus = _this$props.changeStatus, servicePlan = _this$props.servicePlan;\n              status = servicePlan.status.key !== 'ONLINE';\n              allChecked = _Object$values(_this.checkFilled()).every(function (v) {\n                return v;\n              });\n\n              if (!(status && !allChecked)) {\n                _context2.next = 6;\n                break;\n              }\n\n              _Modal.info({\n                title: '不满足上线条件',\n                icon: React.createElement(_Icon, {\n                  type: \"exclamation-circle\",\n                  theme: \"filled\",\n                  style: {\n                    color: '#FF991F'\n                  }\n                }),\n                content: '请在详情页中填写带有“待补全”的信息模块后，再尝试上线操作。'\n              });\n\n              return _context2.abrupt(\"return\");\n\n            case 6:\n              _this.setState({\n                statusLoading: true\n              });\n\n              _context2.next = 9;\n              return changeStatus(status ? 'ONLINE' : 'OFFLINE').then(function () {\n                _message.destroy();\n\n                _message.success(\"\\u5DF2\".concat(status ? '上线' : '下线'));\n              }).finally(function () {\n                _this.setState({\n                  statusLoading: false\n                });\n              });\n\n            case 9:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, _callee2);\n    })));\n\n    _defineProperty(_assertThisInitialized(_this), \"onClickChangeStatus\", function () {\n      var servicePlan = _this.props.servicePlan;\n      var isOnline = servicePlan.status.key !== 'ONLINE';\n\n      _Modal.confirm({\n        title: \"\\u786E\\u8BA4\".concat(isOnline ? '上线' : '下线', \"\\u6B64\\u65B9\\u6848\\u5417\\uFF1F\"),\n        icon: React.createElement(_Icon, {\n          type: \"question-circle\",\n          theme: \"filled\"\n        }),\n        okText: \"\\u786E\\u8BA4\".concat(isOnline ? '上线' : '下线'),\n        content: isOnline ? '上线后，系统可使用此方案来创建服务单。' : '下线后，系统无法关联此方案来创建新服务单，但已创建的服务单不受影响。',\n        onOk: _this.executeChangeStatus,\n        cancelText: '取消',\n        okButtonProps: {\n          type: 'primary',\n          loading: _this.state.statusLoading,\n          ghost: true\n        }\n      });\n    });\n\n    _this.state = {\n      statusLoading: false,\n      deleteLoading: false\n    };\n    return _this;\n  } // 检查必填项\n\n\n  _createClass(ServicePlanDetail, [{\n    key: \"render\",\n    value: function render() {\n      var _this$props2 = this.props,\n          servicePlan = _this$props2.servicePlan,\n          updatePlan = _this$props2.updatePlan;\n      var status = servicePlan.status,\n          name = servicePlan.name,\n          no = servicePlan.no,\n          industry = servicePlan.industry,\n          createdAt = servicePlan.createdAt,\n          relatedServiceTicketCount = servicePlan.relatedServiceTicketCount,\n          basePrice = servicePlan.basePrice,\n          serviceCatalog = servicePlan.serviceCatalog,\n          planningService = servicePlan.careerBusinessCareerPlanningServiceConfig,\n          groupCourse = servicePlan.careerBusinessGroupCourseServiceConfig,\n          privateCourse = servicePlan.careerBusinessPrivateCourseServiceConfig,\n          subscriptionCourse = servicePlan.careerBusinessSubscriptionCourseServiceConfig,\n          jobService = servicePlan.jobBusinessJobRecommendationServiceConfig;\n\n      var badge = function badge() {\n        var key = status.key,\n            statusName = status.name;\n        var badgeStatus;\n\n        if (key === 'ONLINE') {\n          badgeStatus = 'success';\n        } else if (key === 'OFFLINE') {\n          badgeStatus = 'default';\n        } else if (key === 'UNPUBLISHED') {\n          badgeStatus = 'warning';\n        }\n\n        return React.createElement(_Badge, {\n          style: {\n            marginLeft: '12px'\n          },\n          status: badgeStatus,\n          text: statusName\n        });\n      };\n\n      var buttons = React.createElement(React.Fragment, null, React.createElement(_Button, {\n        onClick: this.onClickChangeStatus\n      }, status.key !== 'ONLINE' ? '上线' : '下线'), React.createElement(_Button, {\n        onClick: this.onClickDelete,\n        style: {\n          marginLeft: '12px',\n          color: 'red'\n        }\n      }, \"\\u5220\\u9664\"));\n      var fillStatus = this.checkFilled();\n      var gridContent = [[{\n        span: 17,\n        content: React.createElement(BasicInfo, {\n          servicePlan: servicePlan,\n          updatePlan: updatePlan,\n          fillStatus: fillStatus\n        })\n      }, {\n        span: 7,\n        content: React.createElement(PriceInfo, {\n          servicePlan: servicePlan,\n          updatePlan: updatePlan,\n          fillStatus: fillStatus\n        })\n      }]];\n\n      if (planningService || groupCourse || privateCourse || subscriptionCourse) {\n        gridContent.push([{\n          span: 24,\n          content: React.createElement(Skills, {\n            servicePlan: servicePlan,\n            updatePlan: updatePlan,\n            fillStatus: fillStatus\n          })\n        }]);\n      }\n\n      if (jobService) {\n        gridContent.push([{\n          span: 24,\n          content: React.createElement(JobService, {\n            servicePlan: servicePlan,\n            updatePlan: updatePlan,\n            fillStatus: fillStatus\n          })\n        }]);\n      }\n\n      return React.createElement(React.Fragment, null, React.createElement(PageBlock, null, React.createElement(Head, null, React.createElement(\"title\", null, name)), React.createElement(PageInfoHeader, {\n        text: name,\n        badge: badge(),\n        buttons: buttons\n      }), React.createElement(HeaderDetail, null, React.createElement(InfoBodyWrapper, null, React.createElement(InfoBody, null, React.createElement(LineWrapper, null, React.createElement(Item, null, React.createElement(ItemTitle, null, \"ID\\uFF1A\"), React.createElement(ItemContent, null, no)), React.createElement(Item, null, React.createElement(ItemTitle, null, \"\\u884C\\u4E1A\\uFF1A\"), React.createElement(ItemContent, null, industry.name))), React.createElement(LineWrapper, null, React.createElement(Item, null, React.createElement(ItemTitle, null, \"\\u6240\\u5C5E\\u76EE\\u5F55\\uFF1A\"), React.createElement(ItemContent, null, serviceCatalog.name)), React.createElement(Item, null, React.createElement(ItemTitle, null, \"\\u521B\\u5EFA\\u65F6\\u95F4\\uFF1A\"), React.createElement(ItemContent, null, format(createdAt, 'YYYY/MM/DD HH:mm')))), React.createElement(LineWrapper, null, React.createElement(Item, null, React.createElement(ItemTitle, null, \"\\u5DF2\\u5173\\u8054\\u670D\\u52A1\\u5355\\u6570\\uFF1A\"), React.createElement(ItemContent, null, relatedServiceTicketCount))))), React.createElement(Price, {\n        value: basePrice\n      }))), React.createElement(PageGrid, {\n        grid: gridContent\n      }), React.createElement(_BackTop, null));\n    }\n  }]);\n\n  return ServicePlanDetail;\n}(React.Component);\n\nexport { ServicePlanDetail as default };\nvar InfoBodyWrapper = styled.div.withConfig({\n  displayName: \"ServicePlanDetail__InfoBodyWrapper\",\n  componentId: \"sc-1i6qd7k-0\"\n})([\"width:424px;\"]);\nvar HeaderDetail = styled.div.withConfig({\n  displayName: \"ServicePlanDetail__HeaderDetail\",\n  componentId: \"sc-1i6qd7k-1\"\n})([\"display:flex;align-items:center;justify-content:space-between;\"]);","map":null,"metadata":{},"sourceType":"module"}