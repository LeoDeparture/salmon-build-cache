{"ast":null,"code":"import _Object$assign from \"@babel/runtime-corejs2/core-js/object/assign\";\nimport _regeneratorRuntime from \"@babel/runtime-corejs2/regenerator\";\nimport _objectSpread from \"@babel/runtime-corejs2/helpers/esm/objectSpread\";\nimport _toConsumableArray from \"@babel/runtime-corejs2/helpers/esm/toConsumableArray\";\nimport _asyncToGenerator from \"@babel/runtime-corejs2/helpers/esm/asyncToGenerator\";\nimport _classCallCheck from \"@babel/runtime-corejs2/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime-corejs2/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime-corejs2/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime-corejs2/helpers/esm/getPrototypeOf\";\nimport _assertThisInitialized from \"@babel/runtime-corejs2/helpers/esm/assertThisInitialized\";\nimport _inherits from \"@babel/runtime-corejs2/helpers/esm/inherits\";\nimport _defineProperty from \"@babel/runtime-corejs2/helpers/esm/defineProperty\";\nimport React from 'react';\nimport Loading from '../../../../components/Loading';\nimport TableFooter from '../../../../components/Table/TableFooter';\nimport { parseCityIds } from '../../../../lib/commonJs';\nimport FilterHeader from '../components/FilterHeader';\nimport JobTable from '../components/JobTable';\nimport ListJobs, { QueryListJobs } from './QueryListJobs';\nvar ItemsPerPage = 20;\n\nvar JobsContainer =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(JobsContainer, _React$Component);\n\n  function JobsContainer(props) {\n    var _this;\n\n    _classCallCheck(this, JobsContainer);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(JobsContainer).call(this, props));\n\n    _defineProperty(_assertThisInitialized(_this), \"storePageInfo\", function (data) {\n      var pageInfo = data.jobs.pageInfo;\n\n      _this.setState({\n        pageInfo: pageInfo\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"queryMore\",\n    /*#__PURE__*/\n    _asyncToGenerator(\n    /*#__PURE__*/\n    _regeneratorRuntime.mark(function _callee() {\n      var _this$state, loading, pageInfo;\n\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _this$state = _this.state, loading = _this$state.loading, pageInfo = _this$state.pageInfo;\n\n              if (!(loading || !pageInfo.hasNextPage)) {\n                _context.next = 3;\n                break;\n              }\n\n              return _context.abrupt(\"return\");\n\n            case 3:\n              _this.setState({\n                loading: true\n              });\n\n              _context.next = 6;\n              return _this.fetchMore({\n                updateQuery: function updateQuery(prevData, _ref2) {\n                  var newData = _ref2.fetchMoreResult;\n\n                  if (!newData) {\n                    return prevData;\n                  }\n\n                  newData.jobs.edges = [].concat(_toConsumableArray(prevData.jobs.edges), _toConsumableArray(newData.jobs.edges));\n                  return newData;\n                },\n                variables: {\n                  input: _objectSpread({}, _this.variables.input, {\n                    after: pageInfo.endCursor,\n                    first: ItemsPerPage\n                  })\n                }\n              });\n\n            case 6:\n              _this.setState({\n                loading: false\n              }); // 记录翻页数据\n\n\n              _this.variables.input.first += ItemsPerPage;\n\n            case 8:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    })));\n\n    _defineProperty(_assertThisInitialized(_this), \"changeWhere\", function (filters) {\n      _Object$assign(_this.variables.input.where, filters);\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"changeStringInput\", function (type, value) {\n      if (!type) return;\n\n      if (type === 'name') {\n        _this.changeWhere({\n          OR: [{\n            company: value ? {\n              companyName_contains: value\n            } : undefined\n          }, {\n            name_contains: value\n          }]\n        });\n      }\n\n      if (['industry', 'principal', 'level', 'jobProperty', 'status'].includes(type)) {\n        _this.changeWhere(_defineProperty({}, type, {\n          id: value\n        }));\n      }\n\n      _this.refetch();\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"changeLocationInput\", function (type, value) {\n      if (!type) return;\n\n      if (type === 'location') {\n        var _parseCityIds = parseCityIds(value),\n            cityIds = _parseCityIds.cityIds,\n            foreignCityIds = _parseCityIds.foreignCityIds;\n\n        var filters = [].concat(_toConsumableArray(cityIds.map(function (id) {\n          return {\n            cities_some: {\n              id: id\n            }\n          };\n        })), _toConsumableArray(foreignCityIds.map(function (id) {\n          return {\n            foreignCities_some: {\n              id: id\n            }\n          };\n        })));\n\n        _this.changeWhere({\n          AND: filters ? filters : undefined\n        });\n      }\n\n      _this.refetch();\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"changeMomentInput\", function (type, value) {\n      if (!type) return;\n\n      if (type === 'lastPublishAt') {\n        _this.changeWhere({\n          lastPublishAt_lte: value ? value.endOf('day').toISOString() : undefined,\n          lastPublishAt_gte: value ? value.startOf('day').toISOString() : undefined\n        });\n      }\n\n      _this.refetch();\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"resetFilters\", function () {\n      _this.variables = {\n        input: {\n          where: {\n            OR: _this.variables.input.where.OR\n          },\n          first: ItemsPerPage,\n          orderBy: 'createdAt_DESC'\n        }\n      };\n\n      _this.refetch();\n    });\n\n    _this.state = {\n      loading: false,\n      pageInfo: undefined\n    };\n    _this.variables = {\n      input: {\n        where: {},\n        first: ItemsPerPage,\n        orderBy: 'createdAt_DESC'\n      }\n    };\n    return _this;\n  } // 存储分页信息\n\n\n  _createClass(JobsContainer, [{\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var pageInfo = this.state.pageInfo;\n      return React.createElement(ListJobs, {\n        query: QueryListJobs,\n        variables: this.variables,\n        onCompleted: this.storePageInfo,\n        fetchPolicy: \"network-only\",\n        notifyOnNetworkStatusChange: true\n      }, function (_ref3) {\n        var data = _ref3.data,\n            loading = _ref3.loading,\n            error = _ref3.error,\n            refetch = _ref3.refetch,\n            client = _ref3.client,\n            fetchMore = _ref3.fetchMore,\n            networkStatus = _ref3.networkStatus;\n        _this2.fetchMore = fetchMore;\n        _this2.client = client;\n        _this2.refetch = refetch;\n\n        if (loading && ![2, 3, 4].includes(networkStatus)) {\n          return React.createElement(Loading, null);\n        }\n\n        if (error) {\n          return null;\n        }\n\n        var footer = function footer() {\n          return pageInfo.hasNextPage ? React.createElement(TableFooter, {\n            isLoading: networkStatus === 3,\n            onClickLink: _this2.queryMore\n          }) : null;\n        };\n\n        var dataSource = [];\n\n        if (data && data.jobs) {\n          dataSource = data.jobs.edges.map(function (v) {\n            return v.node;\n          });\n        }\n\n        return React.createElement(React.Fragment, null, React.createElement(FilterHeader, {\n          changeStringInput: _this2.changeStringInput,\n          changeMomentInput: _this2.changeMomentInput,\n          changeLocationInput: _this2.changeLocationInput,\n          resetFilters: _this2.resetFilters\n        }), React.createElement(JobTable, {\n          jobs: dataSource,\n          footer: footer\n        }));\n      });\n    }\n  }]);\n\n  return JobsContainer;\n}(React.Component);\n\nexport default JobsContainer;","map":null,"metadata":{},"sourceType":"module"}