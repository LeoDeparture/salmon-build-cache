{"ast":null,"code":"import _classCallCheck from \"@babel/runtime-corejs2/helpers/esm/classCallCheck\";\nimport _possibleConstructorReturn from \"@babel/runtime-corejs2/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime-corejs2/helpers/esm/getPrototypeOf\";\nimport _inherits from \"@babel/runtime-corejs2/helpers/esm/inherits\";\nimport _taggedTemplateLiteral from \"@babel/runtime-corejs2/helpers/esm/taggedTemplateLiteral\";\n\nfunction _templateObject() {\n  var data = _taggedTemplateLiteral([\"\\n  query listQuestionBankWithPagination(\\n    $where: QuestionBankWhereInput\\n    $orderBy: QuestionBankOrderByInput\\n    $skip: Int\\n    $after: String\\n    $before: String\\n    $first: Int\\n    $last: Int\\n  ) {\\n    listQuestionBank: listQuestionBankWithPagination(\\n      where: $where\\n      orderBy: $orderBy\\n      skip: $skip\\n      after: $after\\n      before: $before\\n      first: $first\\n      last: $last\\n    ) {\\n      pageInfo {\\n        hasNextPage\\n        hasPreviousPage\\n        startCursor\\n        endCursor\\n      }\\n      edges {\\n        node {\\n          ...questionBank\\n        }\\n      }\\n    }\\n  }\\n\\n  \", \"\\n\"]);\n\n  _templateObject = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n\nimport gql from 'graphql-tag';\nimport { Query } from 'react-apollo';\nimport { FragmentQuestionBank } from '../../Fragments';\nexport var QueryListQuestionBank = gql(_templateObject(), FragmentQuestionBank);\n\nvar ListQuestionBank =\n/*#__PURE__*/\nfunction (_Query) {\n  _inherits(ListQuestionBank, _Query);\n\n  function ListQuestionBank() {\n    _classCallCheck(this, ListQuestionBank);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(ListQuestionBank).apply(this, arguments));\n  }\n\n  return ListQuestionBank;\n}(Query);\n\nexport { ListQuestionBank as default };","map":null,"metadata":{},"sourceType":"module"}