{"ast":null,"code":"import \"antd/lib/modal/style\";\nimport _Modal from \"antd/lib/modal\";\nimport \"antd/lib/icon/style\";\nimport _Icon from \"antd/lib/icon\";\nimport _toConsumableArray from \"@babel/runtime-corejs2/helpers/esm/toConsumableArray\";\nimport _classCallCheck from \"@babel/runtime-corejs2/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime-corejs2/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime-corejs2/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime-corejs2/helpers/esm/getPrototypeOf\";\nimport _assertThisInitialized from \"@babel/runtime-corejs2/helpers/esm/assertThisInitialized\";\nimport _inherits from \"@babel/runtime-corejs2/helpers/esm/inherits\";\nimport _defineProperty from \"@babel/runtime-corejs2/helpers/esm/defineProperty\";\nimport \"antd/lib/upload/style\";\nimport _Upload from \"antd/lib/upload\";\nimport axios from 'axios';\nimport getConfig from 'next/config';\nimport Head from 'next/head';\nimport React, { Component } from 'react';\nimport styled from 'styled-components';\n\nvar _getConfig = getConfig(),\n    publicRuntimeConfig = _getConfig.publicRuntimeConfig;\n\nvar Dragger = _Upload.Dragger;\nvar Container = styled.div.withConfig({\n  displayName: \"FileUpload__Container\",\n  componentId: \"sc-153ywvm-0\"\n})([\"width:100%;\"]);\nvar FileListContainer = styled.div.withConfig({\n  displayName: \"FileUpload__FileListContainer\",\n  componentId: \"sc-153ywvm-1\"\n})([\"display:flex;flex-wrap:wrap;width:100%;\"]);\nvar ClickFileContainer = styled.div.withConfig({\n  displayName: \"FileUpload__ClickFileContainer\",\n  componentId: \"sc-153ywvm-2\"\n})([\"width:100%;height:32px;font-size:14px;line-height:32px;text-align:center;border:2px dashed #c3c4d1;border-radius:4px;\"]);\nvar FileListItem = styled.div.withConfig({\n  displayName: \"FileUpload__FileListItem\",\n  componentId: \"sc-153ywvm-3\"\n})([\"display:flex;align-items:center;height:22px;max-width:100%;\"]);\nvar FileListItemName = styled.div.withConfig({\n  displayName: \"FileUpload__FileListItemName\",\n  componentId: \"sc-153ywvm-4\"\n})([\"max-width:482px;padding:0 4px 0 12px;overflow:hidden;font-size:14px;line-height:22px;color:#5674bf;text-overflow:ellipsis;white-space:nowrap;\"]);\nvar FileListItemNameDownload = styled.a.withConfig({\n  displayName: \"FileUpload__FileListItemNameDownload\",\n  componentId: \"sc-153ywvm-5\"\n})([\"max-width:482px;padding:0 4px 0 12px;overflow:hidden;font-size:14px;line-height:22px;color:#5674bf;text-overflow:ellipsis;white-space:nowrap;\"]);\n\nvar FileUpload =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(FileUpload, _Component);\n\n  function FileUpload(props) {\n    var _this;\n\n    _classCallCheck(this, FileUpload);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(FileUpload).call(this, props));\n\n    _defineProperty(_assertThisInitialized(_this), \"showModal\", function () {\n      _this.setState({\n        visible: true\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"handleCancel\", function () {\n      _this.setState({\n        visible: false\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"clearLastUpLoad\", function () {\n      _this.setState({\n        showFileList: [_this.state.showFileList[_this.state.showFileList.length - 1]]\n      }, function () {\n        _this.props.onChangeValue(_this.state.showFileList);\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"clearNextUpLoad\", function () {\n      _this.setState({\n        showFileList: [_this.state.showFileList[0]]\n      }, function () {\n        _this.props.onChangeValue(_this.state.showFileList);\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"clearAllUpLoad\", function () {\n      _this.setState({\n        showFileList: [],\n        FileList: []\n      }, function () {\n        _this.props.onChangeValue(_this.state.showFileList);\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"getFileList\", function (info) {\n      var multipleUpload = _this.props.multipleUpload;\n\n      var singleFile = _toConsumableArray(info.fileList);\n\n      if (!multipleUpload) {\n        singleFile = singleFile.slice(-1);\n      }\n\n      _this.setState({\n        FileList: singleFile\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"customRequest\", function (_ref) {\n      var file = _ref.file,\n          onError = _ref.onError,\n          onProgress = _ref.onProgress,\n          onSuccess = _ref.onSuccess;\n      var fileParts = file.name.split('.');\n      var fileName = fileParts[0];\n      var fileType = file.type;\n      axios.post(\"\".concat(publicRuntimeConfig.serverUrl, \"/aws-s3-auth\"), {\n        fileName: fileName,\n        fileType: fileType\n      }, {\n        headers: {\n          'Content-Type': 'application/json',\n          'Access-Control-Allow-Origin': '*'\n        }\n      }).then(function (response) {\n        var returnData = response.data.data.returnData;\n        var signedRequest = returnData.signedRequest;\n        var url = returnData.url; // Put the fileType in the headers for the upload\n\n        var options = {\n          headers: {\n            'Content-Type': fileType,\n            'Access-Control-Allow-Origin': '*'\n          },\n          onUploadProgress: function onUploadProgress(_ref2) {\n            var loaded = _ref2.loaded,\n                total = _ref2.total;\n            onProgress({\n              percent: Math.round(loaded / total * 100)\n            }, file);\n\n            _this.setState({\n              buttonVisible: true\n            });\n          }\n        };\n        axios.put(signedRequest, file, options).then(function (result) {\n          if (result.status === 200) {\n            onSuccess(url, file);\n\n            _this.setState({\n              buttonVisible: false\n            });\n          }\n        }).catch(function () {\n          onError();\n        });\n      }).catch(function () {\n        onError();\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"setFileListState\", function (fileList) {\n      _this.setState({\n        showFileList: fileList\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"onOk\", function () {\n      _this.setState({\n        showFileList: _this.state.showFileList.concat(_this.state.FileList.filter(function (item) {\n          return item.status === 'done';\n        })),\n        visible: false,\n        buttonVisible: true,\n        FileList: []\n      }, function () {\n        _this.props.onChangeValue(_this.state.showFileList);\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"onCancel\", function () {\n      _this.setState({\n        FileList: [],\n        visible: false,\n        buttonVisible: true\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"removeItem\", function (response) {\n      if (!_this.props.multipleUpload) {\n        _this.setState({\n          FileList: []\n        });\n      }\n\n      _this.setState({\n        showFileList: _this.state.showFileList.filter(function (item) {\n          return item.response !== response;\n        })\n      }, function () {\n        _this.props.onChangeValue(_this.state.showFileList);\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"onRemove\", function (removeItem) {\n      _this.setState({\n        FileList: _this.state.FileList.filter(function (item) {\n          return item.response !== removeItem.response;\n        })\n      });\n    });\n\n    _this.state = {\n      visible: false,\n      buttonVisible: true,\n      url: '',\n      FileList: [],\n      showFileList: []\n    };\n    return _this;\n  }\n\n  _createClass(FileUpload, [{\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var _this$props = this.props,\n          desText = _this$props.desText,\n          canEdit = _this$props.canEdit,\n          canDownload = _this$props.canDownload;\n      return React.createElement(React.Fragment, null, React.createElement(Head, null, React.createElement(\"link\", {\n        rel: \"stylesheet\",\n        href: \"/static/css/custom.css\"\n      }), React.createElement(\"link\", {\n        rel: \"stylesheet\",\n        href: \"/static/css/upload.css\"\n      })), React.createElement(Container, null, React.createElement(FileListContainer, null, this.state.showFileList.map(function (item) {\n        return React.createElement(FileListItem, {\n          key: item.response\n        }, React.createElement(_Icon, {\n          type: \"paper-clip\"\n        }), canDownload ? React.createElement(FileListItemNameDownload, {\n          href: item.response,\n          download: item.name\n        }, item.name) : React.createElement(FileListItemName, null, item.name), canEdit && React.createElement(_Icon, {\n          type: \"close\",\n          style: {\n            fontSize: 12\n          },\n          onClick: _this2.removeItem.bind(_this2, item.response)\n        }));\n      })), React.createElement(ClickFileContainer, {\n        onClick: canEdit ? this.showModal : null,\n        style: canEdit ? {\n          color: '#172b4d',\n          cursor: 'pointer'\n        } : {\n          color: '#A2AAB8'\n        }\n      }, \"\\u70B9\\u51FB\\u4E0A\\u4F20\"), React.createElement(_Modal, {\n        visible: this.state.visible,\n        closable: false,\n        onCancel: this.onCancel,\n        maskClosable: false,\n        destroyOnClose: true,\n        cancelText: \"\\u53D6\\u6D88\",\n        okText: \"\\u786E\\u8BA4\\u6DFB\\u52A0\",\n        onOk: this.onOk,\n        okButtonProps: {\n          disabled: this.state.buttonVisible\n        }\n      }, React.createElement(Dragger, {\n        onChange: this.getFileList,\n        customRequest: this.customRequest,\n        multiple: this.props.multipleUpload,\n        onRemove: this.onRemove,\n        fileList: this.state.FileList\n      }, React.createElement(\"p\", {\n        className: \"ant-upload-drag-icon\"\n      }, React.createElement(_Icon, {\n        type: \"inbox\"\n      })), React.createElement(\"p\", {\n        className: \"ant-upload-text\"\n      }, \"\\u70B9\\u51FB\\u6216\\u62D6\\u62FD\\u6587\\u4EF6\\u4E0A\\u4F20\"), React.createElement(\"p\", {\n        className: \"ant-upload-hint\"\n      }, desText)))));\n    }\n  }]);\n\n  return FileUpload;\n}(Component);\n\n_defineProperty(FileUpload, \"defaultProps\", {\n  canEdit: true,\n  canDownload: false,\n  multipleUpload: true,\n  desText: '可上传多个任意类型文件'\n});\n\nexport { FileUpload as default };","map":null,"metadata":{},"sourceType":"module"}