{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime-corejs2/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime-corejs2/helpers/esm/asyncToGenerator\";\nimport _classCallCheck from \"@babel/runtime-corejs2/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime-corejs2/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime-corejs2/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime-corejs2/helpers/esm/getPrototypeOf\";\nimport _inherits from \"@babel/runtime-corejs2/helpers/esm/inherits\";\nimport React from 'react';\nimport { ApolloConsumer } from 'react-apollo';\nimport AddAppointmentComponent from '../components/AddAppointmentComponent';\nimport Dashboard from '../components/Dashboard';\nimport MutationCreateOperatorSlots, { createOperatorSlots } from './MutationCreateOperatorSlots';\nimport { getOperatorUnavailableDatesByTime } from './QueryGetOperatorUnavailableDatesByTime';\n\nvar AddAppointmentContainer =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(AddAppointmentContainer, _React$Component);\n\n  function AddAppointmentContainer() {\n    _classCallCheck(this, AddAppointmentContainer);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(AddAppointmentContainer).apply(this, arguments));\n  }\n\n  _createClass(AddAppointmentContainer, [{\n    key: \"render\",\n    value: function render() {\n      return React.createElement(Dashboard, null, React.createElement(ApolloConsumer, null, function (client) {\n        var getDisableDate =\n        /*#__PURE__*/\n        function () {\n          var _ref = _asyncToGenerator(\n          /*#__PURE__*/\n          _regeneratorRuntime.mark(function _callee(value) {\n            var variables;\n            return _regeneratorRuntime.wrap(function _callee$(_context) {\n              while (1) {\n                switch (_context.prev = _context.next) {\n                  case 0:\n                    variables = {\n                      input: {\n                        appointmentTime: value\n                      }\n                    };\n                    return _context.abrupt(\"return\", client.query({\n                      fetchPolicy: 'network-only',\n                      query: getOperatorUnavailableDatesByTime,\n                      variables: variables\n                    }));\n\n                  case 2:\n                  case \"end\":\n                    return _context.stop();\n                }\n              }\n            }, _callee);\n          }));\n\n          return function getDisableDate(_x) {\n            return _ref.apply(this, arguments);\n          };\n        }();\n\n        return React.createElement(MutationCreateOperatorSlots, {\n          mutation: createOperatorSlots\n        }, function (createMutation) {\n          var createOperator =\n          /*#__PURE__*/\n          function () {\n            var _ref2 = _asyncToGenerator(\n            /*#__PURE__*/\n            _regeneratorRuntime.mark(function _callee2(timeArr, isPublic) {\n              return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n                while (1) {\n                  switch (_context2.prev = _context2.next) {\n                    case 0:\n                      return _context2.abrupt(\"return\", createMutation({\n                        variables: {\n                          input: {\n                            appointmentTimes: timeArr,\n                            isPublic: isPublic\n                          }\n                        }\n                      }));\n\n                    case 1:\n                    case \"end\":\n                      return _context2.stop();\n                  }\n                }\n              }, _callee2);\n            }));\n\n            return function createOperator(_x2, _x3) {\n              return _ref2.apply(this, arguments);\n            };\n          }();\n\n          return React.createElement(AddAppointmentComponent, {\n            getDisableDate: getDisableDate,\n            createOperator: createOperator\n          });\n        });\n      }));\n    }\n  }]);\n\n  return AddAppointmentContainer;\n}(React.Component);\n\nexport default AddAppointmentContainer;","map":null,"metadata":{},"sourceType":"module"}