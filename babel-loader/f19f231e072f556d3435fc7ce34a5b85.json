{"ast":null,"code":"import \"antd/lib/tag/style\";\nimport _Tag from \"antd/lib/tag\";\nimport \"antd/lib/date-picker/style\";\nimport _DatePicker from \"antd/lib/date-picker\";\nimport \"antd/lib/form/style\";\nimport _Form from \"antd/lib/form\";\nimport \"antd/lib/input/style\";\nimport _Input from \"antd/lib/input\";\nimport _regeneratorRuntime from \"@babel/runtime-corejs2/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime-corejs2/helpers/esm/asyncToGenerator\";\nimport \"antd/lib/button/style\";\nimport _Button from \"antd/lib/button\";\nimport \"antd/lib/icon/style\";\nimport _Icon from \"antd/lib/icon\";\nimport \"antd/lib/message/style\";\nimport _message from \"antd/lib/message\";\nimport _toConsumableArray from \"@babel/runtime-corejs2/helpers/esm/toConsumableArray\";\nimport _getIterator from \"@babel/runtime-corejs2/core-js/get-iterator\";\nimport _classCallCheck from \"@babel/runtime-corejs2/helpers/esm/classCallCheck\";\nimport _possibleConstructorReturn from \"@babel/runtime-corejs2/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime-corejs2/helpers/esm/getPrototypeOf\";\nimport _assertThisInitialized from \"@babel/runtime-corejs2/helpers/esm/assertThisInitialized\";\nimport _inherits from \"@babel/runtime-corejs2/helpers/esm/inherits\";\nimport _defineProperty from \"@babel/runtime-corejs2/helpers/esm/defineProperty\";\nimport moment from 'moment';\nimport React from 'react';\nimport styled from 'styled-components';\nimport FilePicker from '../../../../components/FilePicker';\nimport RichTextEditor from '../../../../components/RichTextEditor';\nimport { TitleDiv, WarpContent } from '../../commonCss';\nimport SelectModal from './SelectModal';\nvar ContentImgDiv = styled.div.withConfig({\n  displayName: \"DuplicateSubscriptionCourseSeriesContent__ContentImgDiv\",\n  componentId: \"lokdoe-0\"\n})([\"position:relative;background-position:top left;background-repeat:no-repeat;background-size:cover;\"]);\nvar inputFieldRule = [{\n  message: '此字段无法为空',\n  required: true,\n  whitespace: true\n}, {\n  max: 500,\n  message: '超过输入长度上限'\n}];\n\nvar ModuleForm =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(ModuleForm, _React$Component);\n\n  function ModuleForm() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, ModuleForm);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(ModuleForm)).call.apply(_getPrototypeOf2, [this].concat(args)));\n\n    _defineProperty(_assertThisInitialized(_this), \"setFieldsValue\", _this.props.form.setFieldsValue);\n\n    _defineProperty(_assertThisInitialized(_this), \"state\", {\n      contentFile: undefined,\n      introFile: undefined,\n      videoFile: [],\n      tags: _this.props.data.tags.map(function (t) {\n        return t.name;\n      }),\n      description: undefined,\n      suitableCrowd: undefined,\n      tutorIntroduction: undefined,\n      inputVisible: false,\n      inputValue: '',\n      loading: false,\n      startValue: null,\n      endValue: null,\n      questionBankId: undefined,\n      questionBankName: undefined\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"input\", '');\n\n    _defineProperty(_assertThisInitialized(_this), \"selectModalRef\", function (e) {\n      _this.modalRef = e;\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"getValue\", function (id, questionBankName) {\n      _this.setState({\n        questionBankId: id,\n        questionBankName: questionBankName\n      });\n\n      _this.props.form.setFieldsValue({\n        questionBankId: questionBankName\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"disabledStartDate\", function (startValue) {\n      var endValue = _this.state.endValue;\n\n      if (!startValue) {\n        return false;\n      }\n\n      var _iteratorNormalCompletion = true;\n      var _didIteratorError = false;\n      var _iteratorError = undefined;\n\n      try {\n        for (var _iterator = _getIterator(_this.props.occupiedDateRange), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {\n          var dataRange = _step.value;\n\n          if (startValue >= moment(dataRange.startAt).startOf('day') && startValue <= moment(dataRange.endAt).endOf('day')) {\n            return true;\n          }\n        }\n      } catch (err) {\n        _didIteratorError = true;\n        _iteratorError = err;\n      } finally {\n        try {\n          if (!_iteratorNormalCompletion && _iterator.return != null) {\n            _iterator.return();\n          }\n        } finally {\n          if (_didIteratorError) {\n            throw _iteratorError;\n          }\n        }\n      }\n\n      if (!endValue) {\n        return startValue < moment().startOf('day');\n      }\n\n      return startValue > endValue || startValue < moment().startOf('day');\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"disabledEndDate\", function (endValue) {\n      var startValue = _this.state.startValue;\n\n      if (!endValue) {\n        return false;\n      }\n\n      var _iteratorNormalCompletion2 = true;\n      var _didIteratorError2 = false;\n      var _iteratorError2 = undefined;\n\n      try {\n        for (var _iterator2 = _getIterator(_this.props.occupiedDateRange), _step2; !(_iteratorNormalCompletion2 = (_step2 = _iterator2.next()).done); _iteratorNormalCompletion2 = true) {\n          var dataRange = _step2.value;\n\n          if (endValue >= moment(dataRange.startAt).startOf('day') && endValue <= moment(dataRange.endAt).endOf('day')) {\n            return true;\n          }\n        }\n      } catch (err) {\n        _didIteratorError2 = true;\n        _iteratorError2 = err;\n      } finally {\n        try {\n          if (!_iteratorNormalCompletion2 && _iterator2.return != null) {\n            _iterator2.return();\n          }\n        } finally {\n          if (_didIteratorError2) {\n            throw _iteratorError2;\n          }\n        }\n      }\n\n      if (!startValue) {\n        return endValue < moment().startOf('day');\n      }\n\n      return endValue <= startValue || endValue < moment().startOf('day');\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"onStartChange\", function (value) {\n      _this.handleFieldChange('startValue', value);\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"onEndChange\", function (value) {\n      _this.handleFieldChange('endValue', value);\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"handleClose\", function (removedTag) {\n      var tags = _this.state.tags.filter(function (tag) {\n        return tag !== removedTag;\n      });\n\n      _this.setState({\n        tags: tags\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"showInput\", function () {\n      _this.setState({\n        inputVisible: true\n      }, // @ts-ignore\n      function () {\n        return _this.input.focus();\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"handleInputChange\", function (e) {\n      _this.setState({\n        inputValue: e.target.value\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"handleInputConfirm\", function () {\n      var state = _this.state;\n      var inputValue = state.inputValue;\n      var tags = state.tags;\n\n      if (inputValue && tags.indexOf(inputValue) === -1) {\n        tags = [].concat(_toConsumableArray(tags), [inputValue]);\n      }\n\n      _this.setState({\n        tags: tags,\n        inputVisible: false,\n        inputValue: ''\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"saveInputRef\", function (input) {\n      return _this.input = input;\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"onSuccess\", function (result) {\n      _this.setFieldsValue({\n        banner: result.filesUploaded[0].url\n      });\n\n      _this.setState({\n        banner: result.filesUploaded[0].url\n      });\n\n      _message.success('上传文件成功');\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"onContentPicSuccess\", function (result) {\n      _this.setFieldsValue({\n        content_banner: result.filesUploaded[0].url\n      });\n\n      _this.setState({\n        content_banner: result.filesUploaded[0].url\n      });\n\n      _message.success('上传文件成功');\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"onError\", function () {\n      _message.error('上传失败，请重新操作');\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"onUpload\", function (onPick) {\n      return React.createElement(\"div\", null, React.createElement(_Button, {\n        style: {\n          width: '200px',\n          marginTop: '8px'\n        },\n        onClick: onPick.onPick\n      }, React.createElement(_Icon, {\n        type: \"upload\"\n      }), \" \\u9009\\u62E9\\u56FE\\u7247\"));\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"handleFieldChange\", function (stateName, stateValue) {\n      _this.setState(_defineProperty({}, stateName, stateValue));\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"onRef\", function (prop, child) {\n      if (prop === 'intro') {\n        _this.introFile = child;\n      }\n\n      if (prop === 'content') {\n        _this.contentFile = child;\n      }\n\n      if (prop === 'video') {\n        _this.videoFile = child;\n      }\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"getFile\", function (type, fileLinks) {\n      if (type === 'intro') {\n        _this.setState({\n          introFile: fileLinks[0].file.transformedFile.url\n        });\n\n        _this.setFieldsValue({\n          pictureUrl: fileLinks[0].file.transformedFile.url\n        });\n      }\n\n      if (type === 'content') {\n        _this.setState({\n          contentFile: fileLinks[0].file.transformedFile.url\n        });\n\n        _this.setFieldsValue({\n          courseContentPicUrl: fileLinks[0].file.transformedFile.url\n        });\n      }\n\n      if (type === 'video') {\n        var prevState = _this.state.videoFile;\n        var prevVidIds = prevState.map(function (v) {\n          return v.id;\n        });\n        var flatFileLink = fileLinks.filter(function (fl) {\n          return !prevVidIds.includes(fl.file.id);\n        }).map(function (link) {\n          return {\n            id: link.file.id,\n            filename: link.file.filename\n          };\n        });\n\n        _this.setState({\n          videoFile: prevState.concat(flatFileLink)\n        });\n      }\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"onClickBtn\", function (type) {\n      if (type === 'intro') {\n        _this.introFile.showPop();\n      }\n\n      if (type === 'content') {\n        _this.contentFile.showPop();\n      }\n\n      if (type === 'video') {\n        _this.videoFile.showPop();\n      }\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"deselect\", function (vid) {\n      var vids = _this.state.videoFile.filter(function (vf) {\n        return vf.id !== vid;\n      });\n\n      _this.setState({\n        videoFile: vids\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"componentDidMount\", function () {\n      var propsData = _this.props.data;\n      var fieldsValue = {\n        name: propsData.name,\n        pictureUrl: propsData.pictureUrl,\n        courseContentPicUrl: propsData.courseContentPicUrl,\n        courseHighlights: propsData.courseHighlights,\n        description: _this.state.description ? _this.state.description.toHTML() : undefined,\n        suitableCrowd: _this.state.suitableCrowd ? _this.state.suitableCrowd.toHTML() : undefined,\n        tutorIntroduction: _this.state.tutorIntroduction ? _this.state.tutorIntroduction.toHTML() : undefined,\n        questionBankId: propsData.questionBank ? propsData.questionBank.name : undefined\n      };\n\n      _this.setState({\n        introFile: propsData.pictureUrl,\n        contentFile: propsData.courseContentPicUrl,\n        videoFile: propsData.videoUrl,\n        questionBankId: propsData.questionBank ? propsData.questionBank.id : undefined\n      });\n\n      _this.props.form.setFieldsValue(fieldsValue);\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"handleSubmit\", function (e) {\n      e.preventDefault();\n\n      _this.props.form.validateFieldsAndScroll(\n      /*#__PURE__*/\n      function () {\n        var _ref = _asyncToGenerator(\n        /*#__PURE__*/\n        _regeneratorRuntime.mark(function _callee(err, fieldsValue) {\n          var input;\n          return _regeneratorRuntime.wrap(function _callee$(_context) {\n            while (1) {\n              switch (_context.prev = _context.next) {\n                case 0:\n                  _this.setState({\n                    loading: true\n                  });\n\n                  if (!err) {\n                    input = {\n                      name: fieldsValue.name,\n                      startAt: fieldsValue.startDate.startOf('day').utc(),\n                      endAt: fieldsValue.endDate.endOf('day').utc(),\n                      pictureUrl: fieldsValue.pictureUrl,\n                      courseContentPicUrl: fieldsValue.courseContentPicUrl,\n                      courseProductId: _this.props.data.courseProductId,\n                      videoUrl: _this.state.videoFile.map(function (vf) {\n                        return {\n                          id: vf.id\n                        };\n                      }),\n                      courseHighlights: fieldsValue.courseHighlights,\n                      description: _this.state.description.toHTML(),\n                      suitableCrowd: _this.state.suitableCrowd.toHTML(),\n                      tutorIntroduction: _this.state.tutorIntroduction.toHTML(),\n                      tags: _this.state.tags\n                    };\n\n                    _this.props.createData({\n                      input: input\n                    });\n\n                    _this.setState({\n                      loading: false\n                    });\n                  } else {\n                    _this.setState({\n                      loading: false\n                    });\n                  }\n\n                case 2:\n                case \"end\":\n                  return _context.stop();\n              }\n            }\n          }, _callee);\n        }));\n\n        return function (_x, _x2) {\n          return _ref.apply(this, arguments);\n        };\n      }());\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"cancelQuestionBankId\", function () {\n      _this.setState({\n        questionBankId: undefined,\n        questionBankName: undefined\n      });\n\n      _this.props.form.setFieldsValue({\n        questionBankId: undefined\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"showModal\", function () {\n      _this.modalRef.showModal();\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"render\", function () {\n      var getFieldDecorator = _this.props.form.getFieldDecorator;\n      var _this$state = _this.state,\n          tags = _this$state.tags,\n          inputVisible = _this$state.inputVisible,\n          inputValue = _this$state.inputValue,\n          startValue = _this$state.startValue,\n          endValue = _this$state.endValue,\n          questionBankId = _this$state.questionBankId;\n      return React.createElement(\"div\", null, React.createElement(TitleDiv, null, \"\\u590D\\u5236\\u5E76\\u521B\\u5EFA\\u8BFE\\u7A0B\\u5468\\u671F\"), React.createElement(WarpContent, null, React.createElement(_Form, {\n        onSubmit: _this.handleSubmit,\n        style: {\n          backgroundColor: '#fff'\n        }\n      }, React.createElement(_Form.Item, {\n        style: {\n          width: '50%'\n        },\n        label: React.createElement(\"span\", null, \"\\u5BF9\\u5916\\u8BFE\\u7A0B\\u540D\\u79F0\", React.createElement(\"span\", {\n          style: {\n            paddingLeft: '10px',\n            color: '#D8D8D8',\n            fontSize: 12\n          }\n        }, \"\\u5BF9\\u5916\\u53EF\\u89C1\")),\n        colon: false\n      }, getFieldDecorator('name', {\n        rules: inputFieldRule\n      })(React.createElement(_Input, {\n        placeholder: \"\\u8BF7\\u8F93\\u5165\\u8BFE\\u7A0B\\u540D\\u79F0\"\n      }))), React.createElement(_Form.Item, {\n        style: {\n          width: '50%'\n        },\n        label: \"\\u6709\\u6548\\u671F\\u95F4\",\n        colon: false\n      }, getFieldDecorator('startDate', {\n        rules: [{\n          required: true,\n          message: '此字段无法为空'\n        }]\n      })(React.createElement(_DatePicker, {\n        disabledDate: _this.disabledStartDate,\n        format: \"YYYY-MM-DD\",\n        value: startValue,\n        placeholder: \"\\u5F00\\u59CB\\u65F6\\u95F4\",\n        onChange: _this.onStartChange\n      }))), React.createElement(_Form.Item, {\n        style: {\n          width: '50%'\n        }\n      }, getFieldDecorator('endDate', {\n        rules: [{\n          required: true,\n          message: '此字段无法为空'\n        }]\n      })(React.createElement(_DatePicker, {\n        disabledDate: _this.disabledEndDate,\n        format: \"YYYY-MM-DD\",\n        value: endValue,\n        placeholder: \"\\u7ED3\\u675F\\u65F6\\u95F4\",\n        onChange: _this.onEndChange\n      }))), React.createElement(_Form.Item, {\n        style: {\n          width: '50%'\n        },\n        label: React.createElement(\"span\", null, \"\\u8BFE\\u7A0B\\u5C01\\u9762\\u56FE\", React.createElement(\"span\", {\n          style: {\n            paddingLeft: '10px',\n            color: '#D8D8D8',\n            fontSize: 12\n          }\n        }, \"\\u5EFA\\u8BAE\\u5C3A\\u5BF8\\uFF1A654*340px\")),\n        colon: false\n      }, React.createElement(ContentImgDiv, {\n        hidden: !_this.state.introFile,\n        style: {\n          backgroundImage: \"url(\".concat(_this.state.introFile, \")\"),\n          backgroundPosition: 'center',\n          width: '200px',\n          height: '104px'\n        }\n      }), React.createElement(FilePicker, {\n        onRef: _this.onRef.bind(_assertThisInitialized(_this), 'intro'),\n        fileType: \"image-only\",\n        selectType: \"single\",\n        getSelected: _this.getFile.bind(_assertThisInitialized(_this), 'intro')\n      }), getFieldDecorator('pictureUrl', {\n        rules: [{\n          message: '此字段无法为空',\n          required: true\n        }]\n      })(React.createElement(_Button, {\n        style: {\n          width: '200px'\n        },\n        onClick: _this.onClickBtn.bind(_assertThisInitialized(_this), 'intro')\n      }, \"\\u9009\\u62E9\\u56FE\\u7247\"))), React.createElement(_Form.Item, {\n        style: {\n          width: '50%'\n        },\n        label: React.createElement(\"span\", null, \"\\u8BFE\\u7A0B\\u5185\\u5BB9\\u56FE\", React.createElement(\"span\", {\n          style: {\n            paddingLeft: '10px',\n            color: '#D8D8D8',\n            fontSize: 12\n          }\n        }, \"\\u5EFA\\u8BAE\\u5C3A\\u5BF8\\uFF1A180*240px\")),\n        colon: false\n      }, React.createElement(ContentImgDiv, {\n        hidden: !_this.state.contentFile,\n        style: {\n          backgroundImage: \"url(\".concat(_this.state.contentFile, \")\"),\n          backgroundPosition: 'center',\n          width: '180px',\n          height: '240px'\n        }\n      }), React.createElement(FilePicker, {\n        onRef: _this.onRef.bind(_assertThisInitialized(_this), 'content'),\n        fileType: \"image-only\",\n        selectType: \"single\",\n        getSelected: _this.getFile.bind(_assertThisInitialized(_this), 'content')\n      }), getFieldDecorator('courseContentPicUrl', {\n        rules: [{\n          message: '此字段无法为空',\n          required: true\n        }]\n      })(React.createElement(_Button, {\n        style: {\n          width: '200px'\n        },\n        onClick: _this.onClickBtn.bind(_assertThisInitialized(_this), 'content')\n      }, \"\\u9009\\u62E9\\u56FE\\u7247\"))), React.createElement(_Form.Item, {\n        style: {\n          width: '50%'\n        },\n        label: React.createElement(\"span\", null, \"\\u8BFE\\u7A0B\\u4ECB\\u7ECD\\u89C6\\u9891\", React.createElement(\"span\", {\n          style: {\n            paddingLeft: '10px',\n            color: '#D8D8D8',\n            fontSize: 12\n          }\n        }, \"\\u53EF\\u6DFB\\u52A0\\u591A\\u4E2A\")),\n        colon: false\n      }, _this.state.videoFile.map(function (v) {\n        return React.createElement(\"p\", {\n          key: v.id\n        }, v.filename, React.createElement(\"a\", {\n          onClick: _this.deselect.bind(_assertThisInitialized(_this), v.id)\n        }, React.createElement(_Icon, {\n          type: \"close\"\n        })));\n      }), React.createElement(FilePicker, {\n        onRef: _this.onRef.bind(_assertThisInitialized(_this), 'video'),\n        fileType: \"video-only\",\n        selectType: \"multiple\",\n        getSelected: _this.getFile.bind(_assertThisInitialized(_this), 'video')\n      }), getFieldDecorator('videoUrl')(React.createElement(_Button, {\n        style: {\n          width: '200px'\n        },\n        onClick: _this.onClickBtn.bind(_assertThisInitialized(_this), 'video')\n      }, \"\\u9009\\u62E9\\u89C6\\u9891\"))), React.createElement(_Form.Item, {\n        style: {\n          width: '50%'\n        },\n        label: \"\\u8BFE\\u7A0B\\u4EAE\\u70B9\",\n        colon: false\n      }, getFieldDecorator('courseHighlights')(React.createElement(_Input.TextArea, {\n        placeholder: \"\\u8BF7\\u8F93\\u5165\\u8BFE\\u7A0B\\u4EAE\\u70B9\",\n        autoSize: {\n          minRows: 3,\n          maxRows: 10\n        }\n      }))), React.createElement(_Form.Item, {\n        label: \"\\u8BFE\\u7A0B\\u8BE6\\u7EC6\\u4ECB\\u7ECD\",\n        colon: false,\n        style: {\n          width: '100%'\n        }\n      }, getFieldDecorator('description')(React.createElement(RichTextEditor, {\n        apikey: 'ADQyLt4yBR7GH9oPjPODCz',\n        setValue: _this.props.data.description,\n        getValue: _this.handleFieldChange.bind(_assertThisInitialized(_this), 'description')\n      }))), React.createElement(_Form.Item, {\n        label: \"\\u9002\\u5408\\u4EBA\\u7FA4\",\n        colon: false\n      }, getFieldDecorator('suitableCrowd')(React.createElement(RichTextEditor, {\n        apikey: 'ADQyLt4yBR7GH9oPjPODCz',\n        setValue: _this.props.data.suitableCrowd,\n        getValue: _this.handleFieldChange.bind(_assertThisInitialized(_this), 'suitableCrowd')\n      }))), React.createElement(_Form.Item, {\n        label: \"\\u5BFC\\u5E08\\u56E2\\u961F\\u4ECB\\u7ECD\",\n        colon: false\n      }, getFieldDecorator('tutorIntroduction')(React.createElement(RichTextEditor, {\n        apikey: 'ADQyLt4yBR7GH9oPjPODCz',\n        setValue: _this.props.data.tutorIntroduction,\n        getValue: _this.handleFieldChange.bind(_assertThisInitialized(_this), 'tutorIntroduction')\n      }))), React.createElement(_Form.Item, {\n        label: \"\\u8BFE\\u7A0B\\u5957\\u9898\",\n        colon: false\n      }, getFieldDecorator('questionBankId')(React.createElement(InputWrapper, {\n        onClick: _this.showModal,\n        suffix: React.createElement(\"span\", null, questionBankId && React.createElement(_Icon, {\n          type: \"close-circle\",\n          style: {\n            fontSize: 12\n          },\n          onClick: _this.cancelQuestionBankId\n        }), React.createElement(_Icon, {\n          className: questionBankId && 'down_class',\n          type: \"down\",\n          style: {\n            fontSize: 12\n          },\n          onClick: _this.showModal\n        })),\n        placeholder: \"\\u8BF7\\u9009\\u62E9\",\n        style: {\n          width: 200\n        }\n      }))), React.createElement(_Form.Item, {\n        label: \"\\u8BFE\\u7A0B\\u6807\\u7B7E\",\n        colon: false\n      }, tags.map(function (tag) {\n        return React.createElement(_Tag, {\n          key: tag,\n          closable: true,\n          afterClose: _this.handleClose.bind(_assertThisInitialized(_this), tag)\n        }, tag);\n      }), inputVisible && React.createElement(_Input, {\n        ref: _this.saveInputRef,\n        type: \"text\",\n        size: \"small\",\n        style: {\n          width: 78\n        },\n        value: inputValue,\n        onChange: _this.handleInputChange,\n        onBlur: _this.handleInputConfirm,\n        onPressEnter: _this.handleInputConfirm\n      }), !inputVisible && React.createElement(_Tag, {\n        onClick: _this.showInput,\n        style: {\n          background: '#fff',\n          borderStyle: 'dashed'\n        }\n      }, React.createElement(_Icon, {\n        type: \"plus\"\n      }), \" \\u6807\\u7B7E\")), React.createElement(_Form.Item, {\n        labelCol: {\n          span: 12\n        },\n        colon: false\n      }, React.createElement(_Button, {\n        onClick: _this.props.switchPage.bind(_assertThisInitialized(_this), 'list')\n      }, \"\\u53D6\\u6D88\"), React.createElement(_Button, {\n        style: {\n          marginLeft: 20\n        },\n        type: \"primary\",\n        htmlType: \"submit\",\n        loading: _this.state.loading\n      }, \"\\u521B\\u5EFA\\u5468\\u671F\")))), React.createElement(SelectModal, {\n        ref: _this.selectModalRef,\n        getValue: _this.getValue,\n        questionBankId: questionBankId\n      }));\n    });\n\n    return _this;\n  }\n\n  return ModuleForm;\n}(React.Component);\n\nvar DuplicateSubscriptionCourseSeriesContent = _Form.create()(ModuleForm);\n\nexport { DuplicateSubscriptionCourseSeriesContent };\nvar InputWrapper = styled(_Input).withConfig({\n  displayName: \"DuplicateSubscriptionCourseSeriesContent__InputWrapper\",\n  componentId: \"lokdoe-1\"\n})([\"cursor:pointer;.anticon-close-circle{display:none;}:hover{.anticon-close-circle{display:inline-block;}.down_class{display:none;}}& > input{overflow:hidden;text-overflow:ellipsis;cursor:pointer;}\"]);","map":null,"metadata":{},"sourceType":"module"}