{"ast":null,"code":"import \"antd/lib/spin/style\";\nimport _Spin from \"antd/lib/spin\";\nimport _regeneratorRuntime from \"@babel/runtime-corejs2/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime-corejs2/helpers/esm/asyncToGenerator\";\nimport _classCallCheck from \"@babel/runtime-corejs2/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime-corejs2/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime-corejs2/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime-corejs2/helpers/esm/getPrototypeOf\";\nimport _assertThisInitialized from \"@babel/runtime-corejs2/helpers/esm/assertThisInitialized\";\nimport _inherits from \"@babel/runtime-corejs2/helpers/esm/inherits\";\nimport _defineProperty from \"@babel/runtime-corejs2/helpers/esm/defineProperty\";\nimport React from 'react';\nimport styled from 'styled-components';\nimport FileList from '../components/FileList';\nimport { MutationWithdrawFiles } from './MutationWithdrawFiles';\nimport ListFileLinks, { QueryListStudentFileLinks } from './QueryListFileLinks';\n\nvar FileListContainer =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(FileListContainer, _React$Component);\n\n  function FileListContainer() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, FileListContainer);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(FileListContainer)).call.apply(_getPrototypeOf2, [this].concat(args)));\n\n    _defineProperty(_assertThisInitialized(_this), \"withdrawFiles\",\n    /*#__PURE__*/\n    function () {\n      var _ref = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee(variables) {\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                return _context.abrupt(\"return\", _this.client.mutate({\n                  mutation: MutationWithdrawFiles,\n                  variables: variables\n                }));\n\n              case 1:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee);\n      }));\n\n      return function (_x) {\n        return _ref.apply(this, arguments);\n      };\n    }());\n\n    return _this;\n  }\n\n  _createClass(FileListContainer, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.props.onRef(this);\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var _this$props = this.props,\n          slotId = _this$props.slotId,\n          selectedMemberId = _this$props.selectedMemberId;\n\n      if (!slotId || !selectedMemberId) {\n        return null;\n      }\n\n      var variables = {\n        input: {\n          id: slotId,\n          studentId: selectedMemberId\n        }\n      };\n      return React.createElement(ListFileLinks, {\n        query: QueryListStudentFileLinks,\n        variables: variables,\n        fetchPolicy: \"network-only\"\n      }, function (_ref2) {\n        var data = _ref2.data,\n            loading = _ref2.loading,\n            error = _ref2.error,\n            client = _ref2.client;\n\n        if (loading) {\n          return React.createElement(LoadingWrapper, null, React.createElement(_Spin, {\n            tip: \"Loading...\",\n            size: \"large\"\n          }));\n        }\n\n        if (error) {\n          return null;\n        }\n\n        _this2.client = client;\n        return React.createElement(FileList, {\n          filesData: data.fileLinks,\n          storeFileLink: _this2.props.storeFileLink,\n          selectedFileLinks: _this2.props.selectedFileLinks,\n          loading: _this2.props.loading\n        });\n      });\n    }\n  }]);\n\n  return FileListContainer;\n}(React.Component);\n\nexport default FileListContainer;\nvar LoadingWrapper = styled.div.withConfig({\n  displayName: \"FileListContainer__LoadingWrapper\",\n  componentId: \"mjdbpk-0\"\n})([\"display:flex;align-items:center;justify-content:center;height:100%;\"]);","map":null,"metadata":{},"sourceType":"module"}