{"ast":null,"code":"import \"antd/lib/table/style\";\nimport _Table from \"antd/lib/table\";\nimport _objectSpread from \"@babel/runtime-corejs2/helpers/esm/objectSpread\";\nimport \"antd/lib/badge/style\";\nimport _Badge from \"antd/lib/badge\";\nimport _classCallCheck from \"@babel/runtime-corejs2/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime-corejs2/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime-corejs2/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime-corejs2/helpers/esm/getPrototypeOf\";\nimport _assertThisInitialized from \"@babel/runtime-corejs2/helpers/esm/assertThisInitialized\";\nimport _inherits from \"@babel/runtime-corejs2/helpers/esm/inherits\";\nimport _defineProperty from \"@babel/runtime-corejs2/helpers/esm/defineProperty\";\nimport { compareAsc, format } from 'date-fns';\nimport React from 'react';\nimport styled from 'styled-components';\nimport { getPersonName } from '../../../lib/commonJs';\n\nvar ServiceTicketList =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(ServiceTicketList, _React$Component);\n\n  function ServiceTicketList() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, ServiceTicketList);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(ServiceTicketList)).call.apply(_getPrototypeOf2, [this].concat(args)));\n\n    _defineProperty(_assertThisInitialized(_this), \"renderIndustries\", function (value) {\n      return value.industry ? value.industry.name : '--';\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"renderPersonName\", function (creator) {\n      if (creator) {\n        return getPersonName(creator.account);\n      }\n\n      return '--';\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"renderCreatedAt\", function (value) {\n      return format(value, 'YYYY/MM/DD HH:mm');\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"renderStatus\", function (valid) {\n      if (valid) {\n        return React.createElement(_Badge, {\n          color: 'green',\n          text: '有效'\n        });\n      }\n\n      return React.createElement(_Badge, {\n        color: '#ccc',\n        text: '无效'\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"selectServiceTicket\", function (_, serviceTickets) {\n      _this.props.saveServiceTickets(serviceTickets);\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"getCheckboxProps\", function (record) {\n      return {\n        defaultValue: false,\n        disabled: !record.isValid || record.pathway\n      };\n    });\n\n    return _this;\n  }\n\n  _createClass(ServiceTicketList, [{\n    key: \"render\",\n    value: function render() {\n      var _this$props = this.props,\n          serviceTickets = _this$props.serviceTickets,\n          filterIndustryId = _this$props.filterIndustryId; // 处理数据源\n\n      var dataSource = serviceTickets.filter(function (serviceTicket) {\n        if (!filterIndustryId) {\n          return true;\n        }\n\n        if (serviceTicket.servicePlan.industry) {\n          return serviceTicket.servicePlan.industry.id === filterIndustryId;\n        }\n\n        return false;\n      }).map(function (serviceTicket) {\n        return _objectSpread({\n          key: serviceTicket.id\n        }, serviceTicket);\n      }); // 生成表格 column\n\n      var columnsData = [{\n        title: '服务单ID',\n        key: 'serviceTicketNo',\n        width: '20%'\n      }, {\n        title: '经办人',\n        key: 'creator',\n        width: '18%',\n        render: this.renderPersonName\n      }, {\n        title: '行业',\n        key: 'servicePlan',\n        width: '14%',\n        render: this.renderIndustries\n      }, {\n        title: '关联的计划ID',\n        key: 'pathway',\n        width: '20%',\n        render: function render(value) {\n          return value ? value.no : '--';\n        }\n      }, {\n        title: '服务单状态',\n        key: 'isValid',\n        width: '12%',\n        render: this.renderStatus\n      }, {\n        title: '生成日期',\n        key: 'createdAt',\n        width: '16%',\n        render: this.renderCreatedAt,\n        sorter: function sorter(left, right) {\n          return compareAsc(left.createdAt, right.createdAt);\n        }\n      }];\n      var columns = columnsData.map(function (column) {\n        return _objectSpread({}, column, {\n          dataIndex: column.key\n        });\n      });\n      return React.createElement(Wrapper, null, React.createElement(\"span\", {\n        style: {\n          position: 'absolute',\n          right: '20px',\n          top: '-40px'\n        }\n      }, \"\\u4E00\\u5171\", dataSource.length, \"\\u4E2A\"), React.createElement(_Table, {\n        locale: {\n          emptyText: '暂无数据'\n        },\n        pagination: false,\n        dataSource: dataSource,\n        columns: columns,\n        rowSelection: {\n          hideDefaultSelections: true,\n          type: 'checkbox',\n          fixed: false,\n          onChange: this.selectServiceTicket,\n          getCheckboxProps: this.getCheckboxProps\n        }\n      }));\n    }\n  }]);\n\n  return ServiceTicketList;\n}(React.Component);\n\nexport default ServiceTicketList;\nvar Wrapper = styled.div.withConfig({\n  displayName: \"ServiceTicketList__Wrapper\",\n  componentId: \"sc-1pq5t1u-0\"\n})([\"position:relative;.ant-table-selection{display:none;}\"]);","map":null,"metadata":{},"sourceType":"module"}