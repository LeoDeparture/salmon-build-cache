{"ast":null,"code":"import \"antd/lib/table/style\";\nimport _Table from \"antd/lib/table\";\nimport _objectSpread from \"@babel/runtime-corejs2/helpers/esm/objectSpread\";\nimport \"antd/lib/badge/style\";\nimport _Badge from \"antd/lib/badge\";\nimport \"antd/lib/menu/style\";\nimport _Menu from \"antd/lib/menu\";\nimport \"antd/lib/icon/style\";\nimport _Icon from \"antd/lib/icon\";\nimport \"antd/lib/modal/style\";\nimport _Modal from \"antd/lib/modal\";\nimport _classCallCheck from \"@babel/runtime-corejs2/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime-corejs2/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime-corejs2/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime-corejs2/helpers/esm/getPrototypeOf\";\nimport _assertThisInitialized from \"@babel/runtime-corejs2/helpers/esm/assertThisInitialized\";\nimport _inherits from \"@babel/runtime-corejs2/helpers/esm/inherits\";\nimport _defineProperty from \"@babel/runtime-corejs2/helpers/esm/defineProperty\";\nimport Link from 'next/link';\nimport React from 'react';\nimport { format } from 'date-fns';\nimport OperationLink from '../../../../components/OperationLink';\nimport { overflowRender } from '../../../../lib/commonJs';\nimport { countCourse } from '../../../pathwayTemplate/commonJs';\nimport DeleteSession from '../DeleteSession';\n\nvar SessionList =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(SessionList, _React$Component);\n\n  function SessionList() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, SessionList);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(SessionList)).call.apply(_getPrototypeOf2, [this].concat(args)));\n\n    _defineProperty(_assertThisInitialized(_this), \"showNonDeleteAlert\", function (count) {\n      _Modal.warning({\n        icon: React.createElement(_Icon, {\n          type: \"exclamation-circle\",\n          theme: \"filled\"\n        }),\n        title: '无法删除',\n        content: React.createElement(\"p\", null, \"\\u8BE5\\u9636\\u6BB5\\u5185\\u6709\".concat(count, \"\\u4E2A\\u5DF2\\u5173\\u8054\\u7684\\u8BFE\\u7A0B\\u6216\\u8F85\\u5BFC\\u3002\")),\n        okText: '我知道了',\n        autoFocusButton: null\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"onReadOnly\", function (index) {\n      _this.props.getValue({\n        step: 1,\n        sessionIndex: index\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"renderOperating\", function (_text, record, index) {\n      var id = record.id,\n          totalCount = record.totalCount;\n      var _this$props = _this.props,\n          refetch = _this$props.refetch,\n          type = _this$props.type;\n      var menu = React.createElement(_Menu, null, React.createElement(_Menu.Item, null, React.createElement(Link, {\n        href: '/pathway-session-detail/' + id\n      }, React.createElement(\"a\", {\n        target: \"_blank\",\n        rel: \"noreferrer\"\n      }, \"\\u67E5\\u770B\\u8BE6\\u60C5\"))), React.createElement(_Menu.Item, null, totalCount === 0 ? React.createElement(DeleteSession, {\n        count: record.totalCount,\n        deleteSuccess: refetch,\n        id: id\n      }) : React.createElement(\"a\", {\n        style: {\n          color: '#F30B0B'\n        },\n        onClick: _this.showNonDeleteAlert.bind(_assertThisInitialized(_this), totalCount)\n      }, \"\\u5220\\u9664\")));\n      return type === 'normal' ? React.createElement(OperationLink, {\n        overlay: menu\n      }) : React.createElement(\"a\", {\n        onClick: _this.onReadOnly.bind(_assertThisInitialized(_this), index)\n      }, \"\\u67E5\\u770B\\u8BE6\\u60C5\");\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"renderDuration\", function (value, record) {\n      var endAt = record.endAt;\n      var Format = 'YYYY/MM/DD';\n\n      if (value && endAt) {\n        return \"\".concat(format(value, Format), \" ~ \").concat(format(endAt, Format));\n      }\n\n      return '--';\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"renderStatus\", function (value) {\n      return value ? React.createElement(_Badge, {\n        color: \"yellow\",\n        text: \"\\u672A\\u53D1\\u5E03\"\n      }) : React.createElement(_Badge, {\n        color: \"green\",\n        text: \"\\u5DF2\\u53D1\\u5E03\"\n      });\n    });\n\n    return _this;\n  }\n\n  _createClass(SessionList, [{\n    key: \"render\",\n    value: function render() {\n      var _this$props2 = this.props,\n          sessions = _this$props2.sessions,\n          type = _this$props2.type; // 处理数据源\n\n      var dataSource = sessions.map(function (session, index) {\n        var courseCounts = countCourse(session.sessionItems);\n        return _objectSpread({\n          key: session.id\n        }, session, {\n          index: index + 1,\n          privateCourseCount: courseCounts[0],\n          groupCourseCount: courseCounts[1],\n          subscriptionCourseCount: courseCounts[2],\n          totalCount: courseCounts.reduce(function (total, v) {\n            return total + v;\n          })\n        });\n      }); // 生成表格 column\n\n      var columnsData = [{\n        title: '#',\n        key: 'index',\n        width: '4%'\n      }, {\n        title: '阶段目标',\n        key: 'purpose',\n        width: '26%',\n        render: overflowRender\n      }, // {\n      //   title: '状态',\n      //   key: 'isWithdrew',\n      //   width: '8%',\n      //   render: this.renderStatus,\n      {\n        title: '时间段',\n        key: 'startAt',\n        width: '16%',\n        render: this.renderDuration\n      }, {\n        title: '1对1辅导数',\n        key: 'privateCourseCount',\n        width: '9%'\n      }, {\n        title: '小班课数',\n        key: 'groupCourseCount',\n        width: '9%'\n      }, {\n        title: '订阅课数',\n        key: 'subscriptionCourseCount',\n        width: '9%'\n      }, {\n        title: '附件数',\n        key: 'files',\n        width: '9%',\n        render: function render(value) {\n          return value.length;\n        }\n      }, {\n        title: '操作',\n        key: 'operating',\n        width: type === 'normal' ? '10%' : '12%',\n        render: this.renderOperating\n      }]; // read-only 时没有状态\n\n      if (type === 'normal') {\n        columnsData.splice(2, 0, {\n          title: '状态',\n          key: 'isWithdrew',\n          width: '8%',\n          render: this.renderStatus\n        });\n      }\n\n      var columns = columnsData.map(function (column) {\n        var onCell; // 给阶段目标列限制超出...样式\n\n        if (column.key === 'purpose') {\n          onCell = function onCell() {\n            return {\n              style: {\n                whiteSpace: 'nowrap',\n                maxWidth: 387,\n                overflow: 'hidden',\n                wordBreak: 'break-all'\n              }\n            };\n          };\n        }\n\n        return _objectSpread({}, column, {\n          onCell: onCell,\n          dataIndex: column.key\n        });\n      });\n      return React.createElement(_Table, {\n        locale: {\n          emptyText: '暂无阶段，点击右上角按钮开始创建阶段'\n        },\n        pagination: false,\n        dataSource: dataSource,\n        columns: columns\n      });\n    }\n  }]);\n\n  return SessionList;\n}(React.Component);\n\n_defineProperty(SessionList, \"defaultProps\", {\n  type: 'normal'\n});\n\nexport default SessionList;","map":null,"metadata":{},"sourceType":"module"}