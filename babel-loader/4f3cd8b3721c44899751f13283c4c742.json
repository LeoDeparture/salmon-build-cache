{"ast":null,"code":"import _taggedTemplateLiteral from \"@babel/runtime-corejs2/helpers/esm/taggedTemplateLiteral\";\n\nfunction _templateObject3() {\n  var data = _taggedTemplateLiteral([\"\\n  mutation deleteCompetitionExperience($input: IDInputType!) {\\n    deleteCompetitionExperience(input: $input) {\\n      id\\n    }\\n  }\\n\"]);\n\n  _templateObject3 = function _templateObject3() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject2() {\n  var data = _taggedTemplateLiteral([\"\\n  mutation updateCompetitionExperience(\\n    $input: CompetitionExperienceUpdateInput!\\n  ) {\\n    updateCompetitionExperience(input: $input) {\\n      id\\n      race {\\n        id\\n        name\\n        parent {\\n          id\\n          name\\n        }\\n      }\\n      otherRace\\n      isAwarded\\n      content\\n      isDeleted\\n    }\\n  }\\n\"]);\n\n  _templateObject2 = function _templateObject2() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject() {\n  var data = _taggedTemplateLiteral([\"\\n  mutation createCompetitionExperience(\\n    $input: CompetitionExperienceCreateInput!\\n  ) {\\n    createCompetitionExperience(input: $input) {\\n      id\\n      race {\\n        id\\n        name\\n        parent {\\n          id\\n          name\\n        }\\n      }\\n      otherRace\\n      isAwarded\\n      content\\n      isDeleted\\n    }\\n  }\\n\"]);\n\n  _templateObject = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n\nimport gql from 'graphql-tag';\nexport var createCompetitionExperience = gql(_templateObject());\nexport var updateCompetitionExperience = gql(_templateObject2());\nexport var deleteCompetitionExperience = gql(_templateObject3());","map":null,"metadata":{},"sourceType":"module"}