{"ast":null,"code":"import { format } from 'date-fns';\nimport React from 'react';\nimport { PageGrid } from '../../../../components/PageLayout';\nimport { getFilename } from '../../../finance/orders/functions';\nimport { getMoneyType } from './FnConfig';\nimport { MinorModuleInfo, ModuleInfo, PaperClip, PayStatus } from './ModuleInfo';\n\nvar Index = function Index(_ref) {\n  var payInfoData = _ref.payInfoData;\n  var _payInfoData$payInfo = payInfoData.payInfo,\n      actualPrice = _payInfoData$payInfo.actualPrice,\n      basePrice = _payInfoData$payInfo.basePrice,\n      discountPrice = _payInfoData$payInfo.discountPrice,\n      payWay = _payInfoData$payInfo.payWay,\n      depositOrder = _payInfoData$payInfo.depositOrder,\n      remainingOrder = _payInfoData$payInfo.remainingOrder;\n  var fileName = [[{\n    title: '基础价格（CNY）：',\n    content: getMoneyType(basePrice)\n  }, {\n    title: '优惠金额（CNY）：',\n    content: getMoneyType(discountPrice)\n  }, {\n    title: '应付总价（CNY）：',\n    content: getMoneyType(actualPrice)\n  }]];\n\n  var getPaymentData = function getPaymentData(paymentData, payType) {\n    var depositOrderPaymentData = [];\n    var type = payType ? payType.key : '';\n\n    if (type === 'ONLINE') {\n      var onlinePaymentOrder = [{\n        title: paymentData.onlinePayments.length > 1 ? '分多次支付' : '一次性支付',\n        amountTotal: {\n          title: '应付总金额（CNY)：',\n          content: getMoneyType(paymentData.amountTotal)\n        },\n        mainMenu: {\n          title: '主单号：',\n          content: paymentData.orderNo\n        },\n        showLine: true,\n        content: []\n      }];\n      paymentData.onlinePayments.forEach(function (item, index) {\n        onlinePaymentOrder.push({\n          title: paymentData.onlinePayments.length === 1 ? '' : \"\\u7B2C\".concat(paymentData.onlinePayments.length - index, \"\\u6B21\\u652F\\u4ED8\"),\n          showLine: paymentData.onlinePayments.length - index !== 1,\n          content: [[{\n            title: '支付状态：',\n            content: React.createElement(PayStatus, {\n              status: item && item.status\n            })\n          }, {\n            title: '应付金额（CNY)：',\n            content: getMoneyType(item.amount)\n          }, {\n            title: '实付金额（CNY）：',\n            content: getMoneyType(item.actualAmount)\n          }], [{\n            title: '支付方式：',\n            content: item.channel.name || '- -'\n          }, {\n            title: '支付时间：',\n            content: format(item.paidAt, 'YYYY/MM/DD HH:mm')\n          }, {\n            title: '支付流水号：',\n            content: item.transactionNo || '- -'\n          }], [{\n            title: '支付单号：',\n            content: item.orderNo\n          }]]\n        });\n      });\n      depositOrderPaymentData = onlinePaymentOrder;\n    } else if (type === 'OFFLINE') {\n      var offlinePaymentOrder = [{\n        title: '',\n        checkState: {\n          title: '核查状态：',\n          content: React.createElement(PayStatus, {\n            status: paymentData && paymentData.verificationStatus\n          })\n        },\n        amountTotal: {\n          title: '应付总金额（CNY)：',\n          content: getMoneyType(paymentData.amountTotal)\n        },\n        mainMenu: {\n          title: '主单号：',\n          content: paymentData.orderNo\n        },\n        showLine: true,\n        content: []\n      }];\n      paymentData.offlinePayments.forEach(function (item, index) {\n        offlinePaymentOrder.push({\n          title: \"\\u652F\\u4ED8\\u8BB0\\u5F55\".concat(index + 1),\n          showLine: paymentData.offlinePayments.length - index !== 1,\n          content: [[{\n            title: '付款人姓名：',\n            content: item.payerName\n          }, {\n            title: '开户银行：',\n            content: item.bankName ? item.bankName : '- -'\n          }, {\n            title: '银行账号后4位：',\n            content: item.cardNo ? item.cardNo : '- -'\n          }], [{\n            title: '交易金额（CNY）：',\n            content: getMoneyType(item.amount)\n          }, {\n            title: '付款日期：',\n            content: format(item.paidAt, 'YYYY/MM/DD')\n          }, {\n            title: '付款凭证：',\n            content: item.payCredential ? React.createElement(PaperClip, {\n              url: item.payCredential\n            }, getFilename(item.payCredential)) : '- -'\n          }], [{\n            title: '支付流水号或参考号：',\n            content: item.transactionNo ? item.transactionNo : '- -'\n          }]]\n        });\n      });\n      depositOrderPaymentData = offlinePaymentOrder;\n    } else {\n      return depositOrderPaymentData;\n    }\n\n    return depositOrderPaymentData;\n  };\n\n  var fullPaymentData = getPaymentData(depositOrder, depositOrder.type);\n  var remainingPaymentData = payWay === 'PREPAY' ? getPaymentData(remainingOrder, remainingOrder.type) : getPaymentData(remainingOrder, null);\n  var gridContent = [[{\n    content: React.createElement(ModuleInfo, {\n      title: \"\\u4EF7\\u683C\\u4FE1\\u606F\",\n      content: fileName\n    })\n  }]];\n\n  if (payWay === 'FULL' && depositOrder.type) {\n    gridContent.push([{\n      content: React.createElement(MinorModuleInfo, {\n        title: \"\\u5168\\u6B3E\",\n        payType: depositOrder.type.name,\n        content: fullPaymentData\n      })\n    }]);\n  } else if (payWay === 'PREPAY') {\n    if (depositOrder.type) {\n      gridContent.push([{\n        content: React.createElement(MinorModuleInfo, {\n          title: \"\\u9884\\u4ED8\\u6B3E\",\n          payType: depositOrder.type.name,\n          content: fullPaymentData\n        })\n      }]);\n    }\n\n    if (remainingOrder.type) {\n      gridContent.push([{\n        content: React.createElement(MinorModuleInfo, {\n          title: \"\\u5C3E\\u6B3E\",\n          payType: remainingOrder.type.name,\n          content: remainingPaymentData\n        })\n      }]);\n    }\n  }\n\n  return React.createElement(PageGrid, {\n    grid: gridContent\n  });\n};\n\nexport default Index;","map":null,"metadata":{},"sourceType":"module"}