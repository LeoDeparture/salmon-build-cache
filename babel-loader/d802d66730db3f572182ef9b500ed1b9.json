{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime-corejs2/regenerator\";\nimport \"antd/lib/modal/style\";\nimport _Modal from \"antd/lib/modal\";\nimport \"antd/lib/message/style\";\nimport _message from \"antd/lib/message\";\nimport _asyncToGenerator from \"@babel/runtime-corejs2/helpers/esm/asyncToGenerator\";\nimport _classCallCheck from \"@babel/runtime-corejs2/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime-corejs2/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime-corejs2/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime-corejs2/helpers/esm/getPrototypeOf\";\nimport _assertThisInitialized from \"@babel/runtime-corejs2/helpers/esm/assertThisInitialized\";\nimport _inherits from \"@babel/runtime-corejs2/helpers/esm/inherits\";\nimport _defineProperty from \"@babel/runtime-corejs2/helpers/esm/defineProperty\";\nimport Router from 'next/router';\nimport React from 'react';\nimport { parseErrorCode } from '../../../../lib/commonJs';\nimport GetRole, { query } from '../../detail/containers/QueryGetRole';\nimport EditRole from '../components/EditRole';\nimport { MutationUpdateRole } from './MutationUpdateRole';\n\nvar EditRoleContainer =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(EditRoleContainer, _React$Component);\n\n  function EditRoleContainer() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, EditRoleContainer);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(EditRoleContainer)).call.apply(_getPrototypeOf2, [this].concat(args)));\n\n    _defineProperty(_assertThisInitialized(_this), \"updateRole\",\n    /*#__PURE__*/\n    function () {\n      var _ref = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee(name, permissionIds) {\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                _this.client.mutate({\n                  mutation: MutationUpdateRole,\n                  variables: {\n                    input: {\n                      id: Router.query.id,\n                      name: name,\n                      permissionIds: permissionIds\n                    }\n                  }\n                }).then(function () {\n                  _message.success('成功编辑权限', function () {\n                    Router.push('/roles');\n                  });\n                }).catch(function (error) {\n                  if (parseErrorCode(error) === 'DuplicationError') {\n                    _Modal.warning({\n                      centered: true,\n                      content: React.createElement(\"p\", {\n                        style: {\n                          fontSize: '13px'\n                        }\n                      }, \"\\u60A8\\u8F93\\u5165\\u7684\\u89D2\\u8272\\u540D\\u5DF2\\u5B58\\u5728\\uFF0C\\u8BF7\\u5C1D\\u8BD5\\u66F4\\u591A\\u89D2\\u8272\\u540D\\uFF0C\\u91CD\\u65B0\\u521B\\u5EFA\"),\n                      okText: '我知道了',\n                      okType: 'primary',\n                      title: \"\\u89D2\\u8272\\u540D\\u5DF2\\u5B58\\u5728\"\n                    });\n                  } else {\n                    _message.error('编辑失败');\n                  }\n                });\n\n              case 1:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee);\n      }));\n\n      return function (_x, _x2) {\n        return _ref.apply(this, arguments);\n      };\n    }());\n\n    return _this;\n  }\n\n  _createClass(EditRoleContainer, [{\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var id = Router.query.id;\n\n      if (!id) {\n        return null;\n      }\n\n      var variables = {\n        input: {\n          id: id\n        }\n      };\n      return React.createElement(GetRole, {\n        query: query,\n        variables: variables\n      }, function (_ref2) {\n        var data = _ref2.data,\n            loading = _ref2.loading,\n            error = _ref2.error,\n            client = _ref2.client;\n        _this2.client = client;\n\n        if (loading) {\n          return null;\n        }\n\n        if (error) {\n          return null;\n        }\n\n        if (data.getRoleById) {\n          return React.createElement(EditRole, {\n            roleData: data.getRoleById,\n            updateRole: _this2.updateRole\n          });\n        }\n\n        return null;\n      });\n    }\n  }]);\n\n  return EditRoleContainer;\n}(React.Component);\n\nexport default EditRoleContainer;","map":null,"metadata":{},"sourceType":"module"}