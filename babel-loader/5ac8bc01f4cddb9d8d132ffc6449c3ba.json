{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime-corejs2/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime-corejs2/helpers/esm/asyncToGenerator\";\nimport _classCallCheck from \"@babel/runtime-corejs2/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime-corejs2/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime-corejs2/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime-corejs2/helpers/esm/getPrototypeOf\";\nimport _assertThisInitialized from \"@babel/runtime-corejs2/helpers/esm/assertThisInitialized\";\nimport _inherits from \"@babel/runtime-corejs2/helpers/esm/inherits\";\nimport _defineProperty from \"@babel/runtime-corejs2/helpers/esm/defineProperty\";\nimport Router from 'next/router';\nimport React from 'react';\nimport Loading from '../../../../components/Loading';\nimport ServiceTicketDetail from '../components/ServiceTicketDetail';\nimport { MutationAgreeServiceTicket, MutationAgreeServiceTicketByCode, MutationDisagreeServiceTicket, MutationGenerateReviewCode, MutationGenerateServiceTicketContract, MutationUpdateAgreementInServiceTicket } from './Mutations';\nimport GetServiceTicketById, { QueryGetServiceTicketById } from './QueryServiceTicketDetail';\n\nvar ServiceTicketDetailContainer =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(ServiceTicketDetailContainer, _React$Component);\n\n  function ServiceTicketDetailContainer(props) {\n    var _this;\n\n    _classCallCheck(this, ServiceTicketDetailContainer);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(ServiceTicketDetailContainer).call(this, props));\n\n    _defineProperty(_assertThisInitialized(_this), \"generateReviewCode\",\n    /*#__PURE__*/\n    _asyncToGenerator(\n    /*#__PURE__*/\n    _regeneratorRuntime.mark(function _callee() {\n      var id;\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              id = _this.state.id;\n              return _context.abrupt(\"return\", _this.client.mutate({\n                mutation: MutationGenerateReviewCode,\n                variables: {\n                  input: {\n                    id: id\n                  }\n                }\n              }));\n\n            case 2:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    })));\n\n    _defineProperty(_assertThisInitialized(_this), \"agreeServiceTicketByCode\",\n    /*#__PURE__*/\n    function () {\n      var _ref2 = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee2(id, reviewCode) {\n        return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                return _context2.abrupt(\"return\", _this.client.mutate({\n                  mutation: MutationAgreeServiceTicketByCode,\n                  variables: {\n                    input: {\n                      id: id,\n                      reviewCode: reviewCode\n                    }\n                  }\n                }));\n\n              case 1:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2);\n      }));\n\n      return function (_x, _x2) {\n        return _ref2.apply(this, arguments);\n      };\n    }());\n\n    _defineProperty(_assertThisInitialized(_this), \"agreeServiceTicket\",\n    /*#__PURE__*/\n    _asyncToGenerator(\n    /*#__PURE__*/\n    _regeneratorRuntime.mark(function _callee3() {\n      var id;\n      return _regeneratorRuntime.wrap(function _callee3$(_context3) {\n        while (1) {\n          switch (_context3.prev = _context3.next) {\n            case 0:\n              id = _this.state.id;\n              return _context3.abrupt(\"return\", _this.client.mutate({\n                mutation: MutationAgreeServiceTicket,\n                variables: {\n                  input: {\n                    id: id\n                  }\n                }\n              }));\n\n            case 2:\n            case \"end\":\n              return _context3.stop();\n          }\n        }\n      }, _callee3);\n    })));\n\n    _defineProperty(_assertThisInitialized(_this), \"disagreeServiceTicket\",\n    /*#__PURE__*/\n    function () {\n      var _ref4 = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee4(id, disagreeReason) {\n        return _regeneratorRuntime.wrap(function _callee4$(_context4) {\n          while (1) {\n            switch (_context4.prev = _context4.next) {\n              case 0:\n                return _context4.abrupt(\"return\", _this.client.mutate({\n                  mutation: MutationDisagreeServiceTicket,\n                  variables: {\n                    input: {\n                      id: id,\n                      disagreeReason: disagreeReason\n                    }\n                  }\n                }));\n\n              case 1:\n              case \"end\":\n                return _context4.stop();\n            }\n          }\n        }, _callee4);\n      }));\n\n      return function (_x3, _x4) {\n        return _ref4.apply(this, arguments);\n      };\n    }());\n\n    _defineProperty(_assertThisInitialized(_this), \"generateServiceTicketContract\",\n    /*#__PURE__*/\n    function () {\n      var _ref5 = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee5(serviceTicketId) {\n        return _regeneratorRuntime.wrap(function _callee5$(_context5) {\n          while (1) {\n            switch (_context5.prev = _context5.next) {\n              case 0:\n                return _context5.abrupt(\"return\", _this.client.mutate({\n                  mutation: MutationGenerateServiceTicketContract,\n                  variables: {\n                    serviceTicketId: serviceTicketId\n                  }\n                }));\n\n              case 1:\n              case \"end\":\n                return _context5.stop();\n            }\n          }\n        }, _callee5);\n      }));\n\n      return function (_x5) {\n        return _ref5.apply(this, arguments);\n      };\n    }());\n\n    _defineProperty(_assertThisInitialized(_this), \"updateAgreementInServiceTicket\",\n    /*#__PURE__*/\n    function () {\n      var _ref6 = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee6(input) {\n        return _regeneratorRuntime.wrap(function _callee6$(_context6) {\n          while (1) {\n            switch (_context6.prev = _context6.next) {\n              case 0:\n                return _context6.abrupt(\"return\", _this.client.mutate({\n                  mutation: MutationUpdateAgreementInServiceTicket,\n                  variables: {\n                    input: input\n                  }\n                }));\n\n              case 1:\n              case \"end\":\n                return _context6.stop();\n            }\n          }\n        }, _callee6);\n      }));\n\n      return function (_x6) {\n        return _ref6.apply(this, arguments);\n      };\n    }());\n\n    _this.state = {\n      id: Router.query.id\n    };\n    return _this;\n  } // 生成审核码\n\n\n  _createClass(ServiceTicketDetailContainer, [{\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var id = this.state.id;\n      return React.createElement(GetServiceTicketById, {\n        query: QueryGetServiceTicketById,\n        variables: {\n          input: {\n            id: id\n          }\n        },\n        fetchPolicy: \"network-only\"\n      }, function (_ref7) {\n        var data = _ref7.data,\n            error = _ref7.error,\n            loading = _ref7.loading,\n            client = _ref7.client,\n            refetch = _ref7.refetch;\n        _this2.client = client;\n\n        if (loading) {\n          return React.createElement(Loading, {\n            style: {\n              minHeight: '200px'\n            }\n          });\n        }\n\n        if (error) {\n          return null;\n        }\n\n        var getServiceTicketById = data.getServiceTicketById;\n        return React.createElement(ServiceTicketDetail, {\n          id: id,\n          serviceTicketDetail: getServiceTicketById,\n          generateReviewCode: _this2.generateReviewCode,\n          agreeServiceTicketByCode: _this2.agreeServiceTicketByCode,\n          agreeServiceTicket: _this2.agreeServiceTicket,\n          disagreeServiceTicket: _this2.disagreeServiceTicket,\n          generateServiceTicketContract: _this2.generateServiceTicketContract,\n          updateAgreementInServiceTicket: _this2.updateAgreementInServiceTicket,\n          refetch: refetch\n        });\n      });\n    }\n  }]);\n\n  return ServiceTicketDetailContainer;\n}(React.Component);\n\nexport { ServiceTicketDetailContainer as default };","map":null,"metadata":{},"sourceType":"module"}