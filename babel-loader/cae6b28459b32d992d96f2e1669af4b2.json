{"ast":null,"code":"import \"antd/lib/modal/style\";\nimport _Modal from \"antd/lib/modal\";\nimport _classCallCheck from \"@babel/runtime-corejs2/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime-corejs2/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime-corejs2/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime-corejs2/helpers/esm/getPrototypeOf\";\nimport _assertThisInitialized from \"@babel/runtime-corejs2/helpers/esm/assertThisInitialized\";\nimport _inherits from \"@babel/runtime-corejs2/helpers/esm/inherits\";\nimport _defineProperty from \"@babel/runtime-corejs2/helpers/esm/defineProperty\";\nimport React from 'react';\nimport ModalTitle from '../../../components/ModalTitle';\n\nvar TranscodingPop =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(TranscodingPop, _React$Component);\n\n  function TranscodingPop() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, TranscodingPop);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(TranscodingPop)).call.apply(_getPrototypeOf2, [this].concat(args)));\n\n    _defineProperty(_assertThisInitialized(_this), \"state\", {\n      visible: false,\n      status: 0\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"showPop\", function (status) {\n      _this.setState({\n        visible: true,\n        status: status === 2 ? status : 0\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"hidePop\", function () {\n      _this.setState({\n        visible: false\n      });\n    });\n\n    return _this;\n  }\n\n  _createClass(TranscodingPop, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.props.onRef(this);\n    } // 显示弹窗\n\n  }, {\n    key: \"render\",\n    value: function render() {\n      var status = this.state.status;\n      var title = React.createElement(ModalTitle, {\n        iconColor: \"#faad14\",\n        iconType: \"exclamation-circle\",\n        txt: status === 2 ? '文件转码失败' : '文件转码中'\n      });\n      return React.createElement(_Modal, {\n        title: title,\n        visible: this.state.visible,\n        onOk: this.hidePop,\n        closable: false,\n        cancelButtonProps: {\n          hidden: true\n        },\n        okText: '我知道了',\n        maskClosable: false\n      }, status === 2 ? '此文件转码失败，无法预览、发送和复制到其他文件夹。请尝试重新上传此文件。' : '此文件正在转码，暂时无法预览、发送和复制到其他文件夹。');\n    }\n  }]);\n\n  return TranscodingPop;\n}(React.Component);\n\nexport default TranscodingPop;","map":null,"metadata":{},"sourceType":"module"}