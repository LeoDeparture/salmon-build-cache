{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime-corejs2/regenerator\";\nimport _objectSpread from \"@babel/runtime-corejs2/helpers/esm/objectSpread\";\nimport _asyncToGenerator from \"@babel/runtime-corejs2/helpers/esm/asyncToGenerator\";\nimport _classCallCheck from \"@babel/runtime-corejs2/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime-corejs2/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime-corejs2/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime-corejs2/helpers/esm/getPrototypeOf\";\nimport _assertThisInitialized from \"@babel/runtime-corejs2/helpers/esm/assertThisInitialized\";\nimport _inherits from \"@babel/runtime-corejs2/helpers/esm/inherits\";\nimport _defineProperty from \"@babel/runtime-corejs2/helpers/esm/defineProperty\";\nimport React from 'react';\nimport Loading from '../../../../components/Loading';\nimport { errMessage } from '../../../../lib/commonJs';\nimport SessionDetail from '../../components/sessionDetail/SessionDetail';\nimport { MutationUpdatePathwayTemplateSession } from '../Mutations';\nimport GetSessionById, { QueryGetSessionById } from './QueryGetSessionById';\n\nvar SessionDetailContainer =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(SessionDetailContainer, _React$Component);\n\n  function SessionDetailContainer() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, SessionDetailContainer);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(SessionDetailContainer)).call.apply(_getPrototypeOf2, [this].concat(args)));\n\n    _defineProperty(_assertThisInitialized(_this), \"updateSession\",\n    /*#__PURE__*/\n    function () {\n      var _ref = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee(variables) {\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                return _context.abrupt(\"return\", _this.client.mutate({\n                  mutation: MutationUpdatePathwayTemplateSession,\n                  variables: {\n                    input: _objectSpread({\n                      id: _this.props.id\n                    }, variables)\n                  }\n                }));\n\n              case 1:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee);\n      }));\n\n      return function (_x) {\n        return _ref.apply(this, arguments);\n      };\n    }());\n\n    return _this;\n  }\n\n  _createClass(SessionDetailContainer, [{\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var id = this.props.id;\n      var variables = {\n        input: id\n      };\n      return React.createElement(GetSessionById, {\n        query: QueryGetSessionById,\n        variables: variables,\n        notifyOnNetworkStatusChange: true\n      }, function (_ref2) {\n        var data = _ref2.data,\n            loading = _ref2.loading,\n            error = _ref2.error,\n            refetch = _ref2.refetch,\n            client = _ref2.client,\n            networkStatus = _ref2.networkStatus;\n        _this2.client = client;\n        _this2.refetch = refetch;\n\n        if (loading || networkStatus === 4) {\n          return React.createElement(Loading, null);\n        }\n\n        if (error) {\n          errMessage(error);\n          return null;\n        }\n\n        var session = data.session; // 过滤掉已删除的课程\n\n        session.sessionItems = session.sessionItems.filter(function (v) {\n          return !v.isDeleted;\n        }).sort(function (a, b) {\n          return a.position - b.position;\n        });\n        return React.createElement(SessionDetail, {\n          session: session,\n          refetch: refetch,\n          updateSession: _this2.updateSession\n        });\n      });\n    }\n  }]);\n\n  return SessionDetailContainer;\n}(React.Component);\n\nexport default SessionDetailContainer;","map":null,"metadata":{},"sourceType":"module"}