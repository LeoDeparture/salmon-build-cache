{"ast":null,"code":"import \"antd/lib/message/style\";\nimport _message from \"antd/lib/message\";\nimport _classCallCheck from \"@babel/runtime-corejs2/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime-corejs2/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime-corejs2/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime-corejs2/helpers/esm/getPrototypeOf\";\nimport _inherits from \"@babel/runtime-corejs2/helpers/esm/inherits\";\nimport React from 'react';\nimport GetOrganization, { getOrganization } from '../../callback/containers/QueryGetOrganization';\nimport LoginResult from '../components/Login';\n\nvar LoginContainer =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(LoginContainer, _React$Component);\n\n  function LoginContainer() {\n    _classCallCheck(this, LoginContainer);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(LoginContainer).apply(this, arguments));\n  }\n\n  _createClass(LoginContainer, [{\n    key: \"render\",\n    value: function render() {\n      return React.createElement(GetOrganization, {\n        query: getOrganization,\n        fetchPolicy: \"network-only\"\n      }, function (_ref) {\n        var data = _ref.data,\n            loading = _ref.loading,\n            error = _ref.error;\n\n        if (loading) {\n          return null;\n        }\n\n        if (error) {\n          _message.error('无法获取团队数据');\n\n          return null;\n        }\n\n        if (data && data.getOrganization) {\n          return React.createElement(LoginResult, {\n            departments: data.getOrganization.departments\n          });\n        } else {\n          return null;\n        }\n      });\n    }\n  }]);\n\n  return LoginContainer;\n}(React.Component);\n\nexport { LoginContainer as default };","map":null,"metadata":{},"sourceType":"module"}