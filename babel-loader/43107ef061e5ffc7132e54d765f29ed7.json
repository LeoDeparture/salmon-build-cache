{"ast":null,"code":"import \"antd/lib/row/style\";\nimport _Row from \"antd/lib/row\";\nimport \"antd/lib/table/style\";\nimport _Table from \"antd/lib/table\";\nimport _objectSpread from \"@babel/runtime-corejs2/helpers/esm/objectSpread\";\nimport _classCallCheck from \"@babel/runtime-corejs2/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime-corejs2/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime-corejs2/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime-corejs2/helpers/esm/getPrototypeOf\";\nimport _assertThisInitialized from \"@babel/runtime-corejs2/helpers/esm/assertThisInitialized\";\nimport _inherits from \"@babel/runtime-corejs2/helpers/esm/inherits\";\nimport _defineProperty from \"@babel/runtime-corejs2/helpers/esm/defineProperty\";\nimport { compareAsc, format } from 'date-fns';\nimport { get } from 'lodash';\nimport Link from 'next/link';\nimport React from 'react';\nimport styled from 'styled-components';\nimport InlineAccountInfo from '../../../components/InlineAccountInfo';\nimport PathwayStatus from '../../../components/PathwayStatus';\nimport ProgressModal from './progressModal';\nvar ProgressButton = styled.a.withConfig({\n  displayName: \"PathwayList__ProgressButton\",\n  componentId: \"v7lqus-0\"\n})([\"margin-left:16px;\"]);\nvar AlignItemDiv = styled.div.withConfig({\n  displayName: \"PathwayList__AlignItemDiv\",\n  componentId: \"v7lqus-1\"\n})([\"display:flex;align-content:center;align-items:center;\"]);\n\nvar PathwayList =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(PathwayList, _React$Component);\n\n  function PathwayList(props) {\n    var _this;\n\n    _classCallCheck(this, PathwayList);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(PathwayList).call(this, props));\n\n    _defineProperty(_assertThisInitialized(_this), \"progressDisable\", function (record) {\n      var status = record.status;\n\n      if (status.key === 'UNPLANNED' || status.key === 'PLANNING') {\n        return true;\n      }\n\n      return false;\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"showProgressModal\", function (visible, pathway) {\n      _this.setState({\n        visible: visible,\n        currentSelectPathway: pathway\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"renderPersonName\", function (studentAccount) {\n      if (studentAccount) {\n        return React.createElement(AlignItemDiv, null, React.createElement(InlineAccountInfo, {\n          size: \"normal\",\n          url: \"/user-details/\".concat(studentAccount.id),\n          account: studentAccount.account\n        }));\n      }\n\n      return '--';\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"renderProductName\", function (serviceTickets) {\n      return get(serviceTickets, '[0].servicePlan.name') || '- -';\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"renderPrivateAppointmentsCount\", function (privateAppointmentsCount, record) {\n      if (!privateAppointmentsCount || _this.progressDisable(record)) {\n        return \"- -\";\n      }\n\n      return \"\".concat(privateAppointmentsCount.completeCount, \"/\").concat(privateAppointmentsCount.coursesCount);\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"renderGroupAppointmentsCount\", function (groupAppointmentsCount, record) {\n      if (!groupAppointmentsCount || _this.progressDisable(record)) {\n        return \"- -\";\n      }\n\n      return \"\".concat(groupAppointmentsCount.completeCount, \"/\").concat(groupAppointmentsCount.coursesCount);\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"renderStatus\", function (status) {\n      return React.createElement(PathwayStatus, {\n        status: status\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"renderOperation\", function (_, record) {\n      var status = record.status;\n\n      if (!status) {\n        return '--';\n      }\n\n      var key = status.key;\n      var link;\n      var firstOperationtext = '';\n\n      if (key === 'UNPLANNED') {\n        link = '/create-pathway/' + record.id;\n        firstOperationtext = '继续创建';\n      }\n\n      if (key === 'PLANNING' || key === 'COMPLETED') {\n        link = '/pathway-detail/' + record.id;\n        firstOperationtext = key === 'PLANNING' ? '继续规划' : '查看详情';\n      }\n\n      return React.createElement(React.Fragment, null, React.createElement(Link, {\n        href: link\n      }, React.createElement(\"a\", null, firstOperationtext)), React.createElement(ProgressButton, {\n        disabled: _this.progressDisable(record),\n        onClick: _this.showProgressModal.bind(_assertThisInitialized(_this), !_this.state.visible, record)\n      }, '课程进度'));\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"sortTime\", function (left, right) {\n      return compareAsc(left.createdAt, right.createdAt);\n    });\n\n    _this.state = {\n      visible: false,\n      currentSelectPathway: {}\n    };\n    return _this;\n  }\n\n  _createClass(PathwayList, [{\n    key: \"render\",\n    value: function render() {\n      var pathways = this.props.pathways; // 处理数据源\n\n      var dataSource = pathways.map(function (pathway) {\n        return _objectSpread({\n          key: pathway.id\n        }, pathway, {\n          studentNo: pathway.studentAccount.studentNo\n        });\n      }); // 生成表格 column\n\n      var columnsData = [{\n        title: '学员ID',\n        key: 'studentNo',\n        width: '12.5%'\n      }, {\n        title: '学员姓名',\n        key: 'studentAccount',\n        width: '12.5%',\n        render: this.renderPersonName\n      }, {\n        title: '产品名称',\n        key: 'serviceTickets',\n        width: '18.5%',\n        render: this.renderProductName\n      }, {\n        title: '1对1辅导',\n        key: 'privateAppointmentsCount',\n        width: '8.5%',\n        render: this.renderPrivateAppointmentsCount\n      }, {\n        title: '小班课',\n        key: 'groupAppointmentsCount',\n        width: '8%',\n        render: this.renderGroupAppointmentsCount\n      }, {\n        title: '计划状态',\n        key: 'status',\n        width: '8%',\n        render: this.renderStatus\n      }, {\n        title: '生成时间',\n        key: 'updatedAt',\n        width: '16%',\n        sorter: this.sortTime,\n        render: function render(value) {\n          return format(value, 'YYYY/MM/DD HH:mm');\n        }\n      }, {\n        title: '操作',\n        key: 'operation',\n        width: '16%',\n        render: this.renderOperation\n      }];\n      var columns = columnsData.map(function (column) {\n        return _objectSpread({}, column, {\n          dataIndex: column.key\n        });\n      });\n      return React.createElement(_Row, null, React.createElement(_Table, {\n        locale: {\n          emptyText: '暂无任何学习计划'\n        },\n        pagination: false,\n        dataSource: dataSource,\n        columns: columns // scroll={{ x: 1550 }}\n\n      }), React.createElement(ProgressModal, {\n        visible: this.state.visible,\n        handleCancel: this.showProgressModal.bind(this, !this.state.visible, this.state.currentSelectPathway),\n        pathway: this.state.currentSelectPathway\n      }));\n    }\n  }]);\n\n  return PathwayList;\n}(React.Component);\n\nexport default PathwayList;","map":null,"metadata":{},"sourceType":"module"}