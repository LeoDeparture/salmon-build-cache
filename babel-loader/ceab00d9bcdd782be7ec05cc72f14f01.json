{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime-corejs2/regenerator\";\nimport _toConsumableArray from \"@babel/runtime-corejs2/helpers/esm/toConsumableArray\";\nimport _asyncToGenerator from \"@babel/runtime-corejs2/helpers/esm/asyncToGenerator\";\nimport _Object$keys2 from \"@babel/runtime-corejs2/core-js/object/keys\";\nimport _classCallCheck from \"@babel/runtime-corejs2/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime-corejs2/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime-corejs2/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime-corejs2/helpers/esm/getPrototypeOf\";\nimport _assertThisInitialized from \"@babel/runtime-corejs2/helpers/esm/assertThisInitialized\";\nimport _inherits from \"@babel/runtime-corejs2/helpers/esm/inherits\";\nimport _defineProperty from \"@babel/runtime-corejs2/helpers/esm/defineProperty\";\nimport { format } from 'date-fns';\nimport React from 'react';\nimport Loading from '../../../components/Loading';\nimport UserManagementTable from '../components/UserManagementTable';\nimport ListStudents, { query } from './ListStudentsQuery';\nimport SendJPush4CallStudentMutation, { SendJPush4CallStudent } from './SendJPush4CallStudentMutation'; // items showed or loaded each time\n\nvar itemsPerPage = 20;\nvar ListStudentsInput = {\n  input: {\n    first: itemsPerPage,\n    where: {\n      account: {\n        person: {}\n      },\n      studentNo_contains: ''\n    }\n  }\n};\n\nvar ListStudentsContainer =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(ListStudentsContainer, _React$Component);\n\n  function ListStudentsContainer() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, ListStudentsContainer);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(ListStudentsContainer)).call.apply(_getPrototypeOf2, [this].concat(args)));\n\n    _defineProperty(_assertThisInitialized(_this), \"state\", {\n      listRoleData: [],\n      loading: false,\n      pageInfo: {\n        endCursor: '',\n        hasNextPage: true,\n        startCursor: ''\n      }\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"refetchData\", function (keywords) {\n      for (var _i = 0, _Object$keys = _Object$keys2(keywords); _i < _Object$keys.length; _i++) {\n        var key = _Object$keys[_i];\n\n        // add '_contains' to fuzzy search\n        if (key === 'studentNo') {\n          ListStudentsInput.input.where.studentNo_contains = keywords[key] ? keywords[key] : undefined;\n        } else {\n          ListStudentsInput.input.where.account.person[key + '_contains'] = keywords[key] ? keywords[key] : undefined;\n        }\n      }\n\n      _this.refetch();\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"handleStudentsData\", function (data) {\n      var handledStudentData = [];\n      var students = data.listStudentAccountsWithPagination.edges.slice();\n      students.forEach(function (item) {\n        var student = item.node.account.person;\n        var studentNo = item.node.studentNo;\n        var row = {\n          avatar: student.avatar || '/static/default_avatar.png',\n          createdAt: format(item.node.createdAt, 'YYYY/MM/DD'),\n          id: item.node.id,\n          // studentAccount ID\n          key: studentNo,\n          name: student.name,\n          nickname: student.nickname,\n          operating: '查看详情',\n          studentNo: studentNo,\n          jpushId: student.jpushRegistrationID\n        };\n        handledStudentData.push(row);\n      });\n      return handledStudentData;\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"queryMore\",\n    /*#__PURE__*/\n    _asyncToGenerator(\n    /*#__PURE__*/\n    _regeneratorRuntime.mark(function _callee() {\n      var result;\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              if (!_this.state.pageInfo.hasNextPage) {\n                _context.next = 7;\n                break;\n              }\n\n              _this.setState({\n                loading: true\n              });\n\n              _context.next = 4;\n              return _this.fetchMore({\n                updateQuery: function updateQuery(previousResult, _ref2) {\n                  var fetchMoreResult = _ref2.fetchMoreResult;\n\n                  if (!fetchMoreResult) {\n                    return previousResult;\n                  }\n\n                  var prevData = previousResult.listStudentAccountsWithPagination.edges;\n                  var fetchResult = fetchMoreResult.listStudentAccountsWithPagination.edges;\n                  fetchMoreResult.listStudentAccountsWithPagination.edges = [].concat(_toConsumableArray(prevData), _toConsumableArray(fetchResult));\n                  return fetchMoreResult;\n                },\n                variables: {\n                  input: {\n                    after: _this.state.pageInfo.endCursor,\n                    first: itemsPerPage\n                  }\n                }\n              });\n\n            case 4:\n              result = _context.sent;\n\n              if (!result.loading) {\n                _this.handleStudentsData(result.data);\n\n                _this.setState({\n                  loading: false\n                });\n              }\n\n              return _context.abrupt(\"return\");\n\n            case 7:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    })));\n\n    _defineProperty(_assertThisInitialized(_this), \"storePageInfo\", function (data) {\n      var pageInfo = data.listStudentAccountsWithPagination.pageInfo;\n\n      _this.setState({\n        pageInfo: {\n          endCursor: pageInfo.endCursor,\n          hasNextPage: pageInfo.hasNextPage,\n          startCursor: pageInfo.startCursor\n        }\n      });\n    });\n\n    return _this;\n  }\n\n  _createClass(ListStudentsContainer, [{\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      return React.createElement(ListStudents, {\n        query: query,\n        variables: ListStudentsInput,\n        onCompleted: this.storePageInfo,\n        fetchPolicy: \"network-only\"\n      }, function (_ref3) {\n        var data = _ref3.data,\n            loading = _ref3.loading,\n            error = _ref3.error,\n            refetch = _ref3.refetch,\n            fetchMore = _ref3.fetchMore;\n\n        if (loading) {\n          return React.createElement(Loading, null);\n        }\n\n        if (error) {\n          return null;\n        } // bind fetch functions to component\n\n\n        _this2.fetchMore = fetchMore;\n        _this2.refetch = refetch;\n        return React.createElement(SendJPush4CallStudentMutation, {\n          mutation: SendJPush4CallStudent\n        }, // tslint:disable-next-line:no-shadowed-variable\n        function (SendJPush4CallStudent) {\n          return React.createElement(UserManagementTable, {\n            dataSource: _this2.handleStudentsData(data),\n            footerIsShow: _this2.state.pageInfo.hasNextPage,\n            onClick: _this2.queryMore,\n            loading: _this2.state.loading,\n            refetch: _this2.refetchData,\n            SendJPush4CallStudent: SendJPush4CallStudent\n          });\n        });\n      });\n    }\n  }]);\n\n  return ListStudentsContainer;\n}(React.Component);\n\nexport default ListStudentsContainer;","map":null,"metadata":{},"sourceType":"module"}