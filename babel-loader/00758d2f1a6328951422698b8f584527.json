{"ast":null,"code":"import \"antd/lib/message/style\";\nimport _message from \"antd/lib/message\";\nimport auth0 from 'auth0-js';\nimport queryString from 'query-string'; // tslint:disable-next-line:no-commented-code\n\nimport getConfig from 'next/config'; // tslint:disable-next-line:no-commented-code\n\nvar _getConfig = getConfig(),\n    publicRuntimeConfig = _getConfig.publicRuntimeConfig;\n\nvar auth = new auth0.WebAuth({\n  clientID: publicRuntimeConfig.auth0clientId,\n  domain: publicRuntimeConfig.auth0domain,\n  redirectUri: \"\".concat(publicRuntimeConfig.clientUrl, \"/callback\"),\n  responseType: 'token id_token'\n});\nexport function login(value, callback) {\n  try {\n    localStorage.setItem('departmentId', value.id);\n    auth.login({\n      password: value.password,\n      realm: 'Username-Password-Authentication',\n      username: value.userName\n    }, function (err, authResult) {\n      if (err) {\n        if (err.description === 'Wrong email or password.') {\n          _message.error('登录失败: 用户名或密码错误');\n        } else {\n          _message.error('登录失败'); // tslint:disable-next-line: no-console\n\n\n          console.log(err);\n        }\n\n        callback();\n      }\n\n      if (authResult) {\n        localStorage.setItem('accessToken', authResult.accessToken);\n      }\n    });\n  } catch (error) {\n    // tslint:disable-next-line:no-console\n    console.log('error===', error);\n    callback();\n  }\n}\nexport function loginSuccess() {\n  var param = queryString.parse(location.hash);\n\n  if (param) {\n    localStorage.setItem('accessToken', param.access_token);\n  }\n\n  auth.parseHash(function (err, authResult) {\n    if (authResult && authResult.accessToken && authResult.idToken) {\n      localStorage.setItem('accessToken', authResult.accessToken);\n    } else if (err) {\n      // tslint:disable-next-line: no-console\n      console.log(err);\n      var errStr = err.errorDescription;\n      var filterErrMessage = 'causes: the network is offline, Origin is not allowed by Access-Control-Allow-Origin, the page is being unloaded, etc.';\n\n      if (errStr !== '`state` does not match.' && errStr.indexOf(filterErrMessage) < 0) {\n        alert(\"\\u767B\\u5F55\\u5931\\u8D252: \".concat(err.errorDescription, \".\"));\n      } // tslint:disable-next-line:no-console\n\n\n      console.log(err.errorDescription);\n    }\n  });\n}","map":null,"metadata":{},"sourceType":"module"}