{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime-corejs2/regenerator\";\nimport \"antd/lib/icon/style\";\nimport _Icon from \"antd/lib/icon\";\nimport \"antd/lib/modal/style\";\nimport _Modal from \"antd/lib/modal\";\nimport \"antd/lib/message/style\";\nimport _message from \"antd/lib/message\";\nimport _asyncToGenerator from \"@babel/runtime-corejs2/helpers/esm/asyncToGenerator\";\nimport _classCallCheck from \"@babel/runtime-corejs2/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime-corejs2/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime-corejs2/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime-corejs2/helpers/esm/getPrototypeOf\";\nimport _assertThisInitialized from \"@babel/runtime-corejs2/helpers/esm/assertThisInitialized\";\nimport _inherits from \"@babel/runtime-corejs2/helpers/esm/inherits\";\nimport _defineProperty from \"@babel/runtime-corejs2/helpers/esm/defineProperty\";\nimport Router from 'next/router';\nimport React from 'react';\nimport { parseErrorCode } from '../../../../lib/commonJs';\nimport { handleConfirmOtherError } from '../../../../lib/handleError';\nimport { handleCommonErr } from '../../commonErrFunc';\nimport { ChapterDetailContent } from '../components/ChapterDetailContent';\nimport { GetChapterByIdQuery, getChapterByIdQuery } from './GetChapterByIdQuery';\nimport { listChapters } from './ListChaptersQuery';\nimport { deleteChapterMutation, disableChapterMutation, enableChapterMutation } from './StatusMutation';\n\nvar GetChapterByIdQueryContainer =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(GetChapterByIdQueryContainer, _React$Component);\n\n  function GetChapterByIdQueryContainer() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, GetChapterByIdQueryContainer);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(GetChapterByIdQueryContainer)).call.apply(_getPrototypeOf2, [this].concat(args)));\n\n    _defineProperty(_assertThisInitialized(_this), \"state\", {\n      id: ''\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"enableChapterMutation\",\n    /*#__PURE__*/\n    function () {\n      var _ref = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee(id) {\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                _context.next = 2;\n                return _this.client.mutate({\n                  mutation: enableChapterMutation,\n                  update: function update(cache, _ref2) {\n                    var data = _ref2.data;\n                    var newData = data.enableChapter;\n                    cache.writeQuery({\n                      data: {\n                        getChapterByIdQuery: newData\n                      },\n                      query: getChapterByIdQuery,\n                      variables: {\n                        input: {\n                          id: id\n                        }\n                      }\n                    });\n                  },\n                  variables: {\n                    input: {\n                      id: id\n                    }\n                  }\n                }).then(function (_) {\n                  _message.success('已成功上线此章节');\n                }).catch(function (err) {\n                  if (parseErrorCode(err) === 'NoSection') {\n                    _Modal.warning({\n                      icon: React.createElement(_Icon, {\n                        type: \"exclamation-circle\",\n                        style: {\n                          color: 'orange'\n                        },\n                        theme: \"filled\"\n                      }),\n                      content: '此章节下暂无小节，无法上线此章节。',\n                      okText: '我知道了',\n                      title: '无法上线此章节'\n                    });\n                  } else if (handleConfirmOtherError(err)) {\n                    _message.error('章节上线失败');\n                  }\n                });\n\n              case 2:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee);\n      }));\n\n      return function (_x) {\n        return _ref.apply(this, arguments);\n      };\n    }());\n\n    _defineProperty(_assertThisInitialized(_this), \"disableChapterMutation\",\n    /*#__PURE__*/\n    function () {\n      var _ref3 = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee2(id) {\n        return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                _context2.next = 2;\n                return _this.client.mutate({\n                  mutation: disableChapterMutation,\n                  update: function update(cache, _ref4) {\n                    var data = _ref4.data;\n                    var newData = data.disableChapter;\n                    cache.writeQuery({\n                      data: {\n                        getChapterByIdQuery: newData\n                      },\n                      query: getChapterByIdQuery,\n                      variables: {\n                        input: {\n                          id: id\n                        }\n                      }\n                    });\n                  },\n                  variables: {\n                    input: {\n                      id: id\n                    }\n                  }\n                }).then(function (_) {\n                  _message.success('已成功下线此章节');\n                }).catch(function (_) {\n                  return _message.error('章节下线失败，请检查网络并重试');\n                });\n\n              case 2:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2);\n      }));\n\n      return function (_x2) {\n        return _ref3.apply(this, arguments);\n      };\n    }());\n\n    _defineProperty(_assertThisInitialized(_this), \"deleteChapterMutation\",\n    /*#__PURE__*/\n    function () {\n      var _ref5 = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee3(id) {\n        return _regeneratorRuntime.wrap(function _callee3$(_context3) {\n          while (1) {\n            switch (_context3.prev = _context3.next) {\n              case 0:\n                _context3.next = 2;\n                return _this.client.mutate({\n                  mutation: deleteChapterMutation,\n                  update: function update(cache, _) {\n                    var listCache = cache.readQuery({\n                      query: listChapters,\n                      variables: {\n                        input: {\n                          where: {\n                            status: {\n                              key_not: 'REMOVED'\n                            },\n                            isDeleted: false\n                          }\n                        }\n                      }\n                    });\n                    var newData = listCache.listChapters.filter(function (record) {\n                      return record.id !== id;\n                    });\n                    listCache.listChapters = newData;\n                    cache.writeQuery({\n                      data: {\n                        listChapters: listCache.listChapters\n                      },\n                      query: listChapters,\n                      variables: {\n                        input: {\n                          where: {\n                            status: {\n                              key_not: 'REMOVED'\n                            },\n                            isDeleted: false\n                          }\n                        }\n                      }\n                    });\n                  },\n                  variables: {\n                    input: {\n                      id: id\n                    }\n                  }\n                }).then(function (_) {\n                  _message.success('已成功删除此章节');\n\n                  Router.push(\"/subscription-course-detail/\".concat(Router.router.query.subCourseId, \"/subscription-course-series-detail/\").concat(Router.router.query.seriesId));\n                }).catch(function (err) {\n                  return handleCommonErr(err);\n                });\n\n              case 2:\n              case \"end\":\n                return _context3.stop();\n            }\n          }\n        }, _callee3);\n      }));\n\n      return function (_x3) {\n        return _ref5.apply(this, arguments);\n      };\n    }());\n\n    _defineProperty(_assertThisInitialized(_this), \"componentDidMount\", function () {\n      _this.setState({\n        id: _this.props.id\n      });\n    });\n\n    return _this;\n  }\n\n  _createClass(GetChapterByIdQueryContainer, [{\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      return React.createElement(GetChapterByIdQuery, {\n        query: getChapterByIdQuery,\n        variables: {\n          input: {\n            id: this.state.id\n          }\n        }\n      }, function (_ref6) {\n        var data = _ref6.data,\n            client = _ref6.client,\n            loading = _ref6.loading,\n            error = _ref6.error;\n        _this2.client = client;\n\n        if (loading) {\n          return null;\n        }\n\n        if (error) {\n          return null;\n        }\n\n        if (data.getChapterById) {\n          return React.createElement(ChapterDetailContent, {\n            switchPage: _this2.props.switchPage,\n            setCurrentChapter: _this2.props.setCurrentChapter,\n            data: data,\n            enableMutation: _this2.enableChapterMutation,\n            disableMutation: _this2.disableChapterMutation,\n            removeMutation: _this2.deleteChapterMutation\n          });\n        }\n\n        return null;\n      });\n    }\n  }]);\n\n  return GetChapterByIdQueryContainer;\n}(React.Component);\n\nexport { GetChapterByIdQueryContainer };","map":null,"metadata":{},"sourceType":"module"}