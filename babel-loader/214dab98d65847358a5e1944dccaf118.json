{"ast":null,"code":"import _classCallCheck from \"@babel/runtime-corejs2/helpers/esm/classCallCheck\";\nimport _possibleConstructorReturn from \"@babel/runtime-corejs2/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime-corejs2/helpers/esm/getPrototypeOf\";\nimport _inherits from \"@babel/runtime-corejs2/helpers/esm/inherits\";\nimport _taggedTemplateLiteral from \"@babel/runtime-corejs2/helpers/esm/taggedTemplateLiteral\";\n\nfunction _templateObject() {\n  var data = _taggedTemplateLiteral([\"\\n  query listQuestionBank(\\n    $where: QuestionBankWhereInput\\n    $orderBy: QuestionBankOrderByInput\\n    $skip: Int\\n    $after: String\\n    $before: String\\n    $first: Int\\n    $last: Int\\n  ) {\\n    listQuestionBank: listQuestionBank(\\n      where: $where\\n      orderBy: $orderBy\\n      skip: $skip\\n      after: $after\\n      before: $before\\n      first: $first\\n      last: $last\\n    ) {\\n      ...questionBank\\n    }\\n  }\\n  \", \"\\n\"]);\n\n  _templateObject = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n\nimport gql from 'graphql-tag';\nimport { Query } from 'react-apollo';\nimport { FragmentQuestionBank } from '../../../questionBank/Fragments';\nexport var QueryListQuestionBanks = gql(_templateObject(), FragmentQuestionBank);\n\nvar ListQuestionBanks =\n/*#__PURE__*/\nfunction (_Query) {\n  _inherits(ListQuestionBanks, _Query);\n\n  function ListQuestionBanks() {\n    _classCallCheck(this, ListQuestionBanks);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(ListQuestionBanks).apply(this, arguments));\n  }\n\n  return ListQuestionBanks;\n}(Query);\n\nexport { ListQuestionBanks as default };","map":null,"metadata":{},"sourceType":"module"}