{"ast":null,"code":"import _classCallCheck from \"@babel/runtime-corejs2/helpers/esm/classCallCheck\";\nimport _possibleConstructorReturn from \"@babel/runtime-corejs2/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime-corejs2/helpers/esm/getPrototypeOf\";\nimport _inherits from \"@babel/runtime-corejs2/helpers/esm/inherits\";\nimport _taggedTemplateLiteral from \"@babel/runtime-corejs2/helpers/esm/taggedTemplateLiteral\";\n\nfunction _templateObject() {\n  var data = _taggedTemplateLiteral([\"\\n  query listOrdersPagination($input: ListOrdersInput!) {\\n    orders: listOrdersPagination(input: $input) {\\n      pageInfo {\\n        hasNextPage\\n        hasPreviousPage\\n        startCursor\\n        endCursor\\n      }\\n      edges {\\n        node {\\n          id\\n          amountTotal\\n          kind\\n          verificationStatus {\\n            id\\n            key\\n            name\\n          }\\n          onlinePayments(orderBy: paidAt_DESC) {\\n            id\\n            status {\\n              id\\n              name\\n              key\\n            }\\n            paidAt\\n          }\\n          serviceTicket {\\n            id\\n            serviceTicketNo\\n            servicePlanSnapshot {\\n              id\\n              name\\n            }\\n            servicePlan {\\n              id\\n              name\\n            }\\n            payInfo {\\n              id\\n            }\\n            studentAccount {\\n              id\\n              account {\\n                id\\n                person {\\n                  id\\n                  name\\n                  nickname\\n                  avatar\\n                }\\n              }\\n            }\\n          }\\n        }\\n      }\\n    }\\n  }\\n\"]);\n\n  _templateObject = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n\n/*\n  listOrdersPagination 这个接口因为后端原因, 只能获取部分字段, 所以 query 不使用 fragment\n*/\nimport gql from 'graphql-tag';\nimport { Query } from 'react-apollo';\nexport var QueryListOrders = gql(_templateObject());\n\nvar ListOrders =\n/*#__PURE__*/\nfunction (_Query) {\n  _inherits(ListOrders, _Query);\n\n  function ListOrders() {\n    _classCallCheck(this, ListOrders);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(ListOrders).apply(this, arguments));\n  }\n\n  return ListOrders;\n}(Query);\n\nexport { ListOrders as default };","map":null,"metadata":{},"sourceType":"module"}