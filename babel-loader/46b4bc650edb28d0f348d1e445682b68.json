{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime-corejs2/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime-corejs2/helpers/esm/asyncToGenerator\";\nimport _classCallCheck from \"@babel/runtime-corejs2/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime-corejs2/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime-corejs2/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime-corejs2/helpers/esm/getPrototypeOf\";\nimport _assertThisInitialized from \"@babel/runtime-corejs2/helpers/esm/assertThisInitialized\";\nimport _inherits from \"@babel/runtime-corejs2/helpers/esm/inherits\";\nimport _defineProperty from \"@babel/runtime-corejs2/helpers/esm/defineProperty\";\nimport _taggedTemplateLiteral from \"@babel/runtime-corejs2/helpers/esm/taggedTemplateLiteral\";\n\nfunction _templateObject() {\n  var data = _taggedTemplateLiteral([\"\\n  mutation updatePersonBasicInfo($input: UpdatePersonBasicInfoInput!) {\\n    updatePersonBasicInfo(input: $input) {\\n      id\\n      email\\n      name\\n      nickname\\n      phoneNumber\\n    }\\n  }\\n\"]);\n\n  _templateObject = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n\nimport gql from 'graphql-tag';\nimport React from 'react';\nimport { ApolloConsumer } from 'react-apollo';\nimport { QueryMisViewer } from '../../../common/queries/QueryMisViewer';\nimport { EditAccountInfo } from './EditAccountInfo';\nvar updateAccountInfo = gql(_templateObject());\n\nvar Dashboard =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(Dashboard, _React$Component);\n\n  function Dashboard() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, Dashboard);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(Dashboard)).call.apply(_getPrototypeOf2, [this].concat(args)));\n\n    _defineProperty(_assertThisInitialized(_this), \"updateAccountInfo\",\n    /*#__PURE__*/\n    function () {\n      var _ref = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee(input) {\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                return _context.abrupt(\"return\", _this.client.mutate({\n                  mutation: updateAccountInfo,\n                  variables: input,\n                  update: function update(cache, _ref2) {\n                    var data = _ref2.data;\n                    var newData = data.updatePersonBasicInfo;\n                    cache.writeQuery({\n                      data: {\n                        misViewer: {\n                          person: newData\n                        }\n                      },\n                      query: QueryMisViewer\n                    });\n                  }\n                }).catch(function (err) {\n                  return err;\n                }));\n\n              case 1:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee);\n      }));\n\n      return function (_x) {\n        return _ref.apply(this, arguments);\n      };\n    }());\n\n    _defineProperty(_assertThisInitialized(_this), \"getAccountInfo\",\n    /*#__PURE__*/\n    _asyncToGenerator(\n    /*#__PURE__*/\n    _regeneratorRuntime.mark(function _callee2() {\n      var result;\n      return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              if (!localStorage.getItem('misViewer')) {\n                _context2.next = 4;\n                break;\n              }\n\n              return _context2.abrupt(\"return\", JSON.parse(localStorage.getItem('misViewer')).person);\n\n            case 4:\n              _context2.next = 6;\n              return _this.client.query({\n                query: QueryMisViewer\n              });\n\n            case 6:\n              result = _context2.sent;\n              return _context2.abrupt(\"return\", result.data.misViewer.person);\n\n            case 8:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, _callee2);\n    })));\n\n    return _this;\n  }\n\n  _createClass(Dashboard, [{\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      return React.createElement(ApolloConsumer, null, function (client) {\n        _this2.client = client;\n        return React.createElement(EditAccountInfo, {\n          getData: _this2.getAccountInfo,\n          editData: _this2.updateAccountInfo,\n          goBack: _this2.props.goBack\n        });\n      });\n    }\n  }]);\n\n  return Dashboard;\n}(React.Component);\n\nexport default Dashboard;","map":null,"metadata":{},"sourceType":"module"}