{"ast":null,"code":"import \"antd/lib/config-provider/style\";\nimport _ConfigProvider from \"antd/lib/config-provider\";\nimport \"antd/lib/table/style\";\nimport _Table from \"antd/lib/table\";\nimport _classCallCheck from \"@babel/runtime-corejs2/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime-corejs2/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime-corejs2/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime-corejs2/helpers/esm/getPrototypeOf\";\nimport _assertThisInitialized from \"@babel/runtime-corejs2/helpers/esm/assertThisInitialized\";\nimport _inherits from \"@babel/runtime-corejs2/helpers/esm/inherits\";\nimport _defineProperty from \"@babel/runtime-corejs2/helpers/esm/defineProperty\";\nimport React, { Component } from 'react';\nimport styled from 'styled-components';\nimport EmptyComponents from '../../../../../components/Empty';\nimport { checkEmpty, dateText } from '../../../../../lib/commonJs';\nimport { NameNickAvatar } from '../../root/components/NameNickAvatar';\n\nvar StudentTable =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(StudentTable, _Component);\n\n  function StudentTable(props) {\n    var _this;\n\n    _classCallCheck(this, StudentTable);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(StudentTable).call(this, props));\n\n    _defineProperty(_assertThisInitialized(_this), \"chooseData\", function (record) {\n      _this.props.tableSelected(record.studentAccountId);\n    });\n\n    _this.state = {\n      loading: false\n    };\n    return _this;\n  }\n\n  _createClass(StudentTable, [{\n    key: \"render\",\n    value: function render() {\n      var accountList = this.props.accountList;\n      var dataSource = accountList.map(function (v) {\n        var account = v.account,\n            studentNo = v.studentNo;\n        var person = account.person,\n            id = account.id;\n        var name = person.name,\n            phoneNumber = person.phoneNumber,\n            createdAt = person.createdAt,\n            avatar = person.avatar,\n            nickname = person.nickname,\n            email = person.email;\n        return {\n          id: id,\n          studentNo: studentNo,\n          name: {\n            avatar: avatar,\n            nickname: nickname,\n            name: name\n          },\n          phoneNumber: phoneNumber,\n          email: email,\n          createdAt: createdAt,\n          key: id,\n          studentAccountId: v.id\n        };\n      });\n      var columns = [{\n        title: 'ID',\n        dataIndex: 'studentNo',\n        key: 'studentNo',\n        width: '17.20%',\n        render: function render(v) {\n          return checkEmpty(v);\n        }\n      }, {\n        title: '姓名|昵称',\n        dataIndex: 'name',\n        key: 'name',\n        width: '17.48%',\n        render: function render(v) {\n          return React.createElement(NameNickAvatar, {\n            name: v,\n            haveColor: false\n          });\n        }\n      }, {\n        title: '手机号',\n        dataIndex: 'phoneNumber',\n        key: 'phoneNumber',\n        width: '21.65%',\n        render: function render(v) {\n          return checkEmpty(v);\n        }\n      }, {\n        title: '邮箱',\n        dataIndex: 'email',\n        key: 'email',\n        width: '21.65%',\n        render: function render(v) {\n          return checkEmpty(v);\n        }\n      }, {\n        title: '注册时间',\n        dataIndex: 'createdAt',\n        key: 'createdAt',\n        width: '18.04%',\n        render: function render(v) {\n          return dateText(v, 'day');\n        }\n      }];\n\n      var Empty = function Empty() {\n        return React.createElement(EmptyComponents, null);\n      };\n\n      return React.createElement(React.Fragment, null, React.createElement(_ConfigProvider, {\n        renderEmpty: Empty\n      }, React.createElement(TableWrapper, null, React.createElement(_Table, {\n        dataSource: dataSource,\n        columns: columns,\n        pagination: false,\n        loading: this.state.loading,\n        rowSelection: {\n          hideDefaultSelections: true,\n          type: 'radio',\n          fixed: false,\n          onSelect: this.chooseData\n        },\n        scroll: {\n          y: 284\n        },\n        rowKey: \"id\"\n      }))));\n    }\n  }]);\n\n  return StudentTable;\n}(Component);\n\nexport { StudentTable as default };\nexport var TableWrapper = styled.div.withConfig({\n  displayName: \"StudentTable__TableWrapper\",\n  componentId: \"sc-1gtqfyi-0\"\n})([\"width:100%;margin-top:24px;\"]);","map":null,"metadata":{},"sourceType":"module"}