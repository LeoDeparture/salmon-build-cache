{"ast":null,"code":"import \"antd/lib/button/style\";\nimport _Button from \"antd/lib/button\";\nimport \"antd/lib/modal/style\";\nimport _Modal from \"antd/lib/modal\";\nimport \"antd/lib/message/style\";\nimport _message from \"antd/lib/message\";\nimport _objectSpread from \"@babel/runtime-corejs2/helpers/esm/objectSpread\";\nimport _classCallCheck from \"@babel/runtime-corejs2/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime-corejs2/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime-corejs2/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime-corejs2/helpers/esm/getPrototypeOf\";\nimport _assertThisInitialized from \"@babel/runtime-corejs2/helpers/esm/assertThisInitialized\";\nimport _inherits from \"@babel/runtime-corejs2/helpers/esm/inherits\";\nimport _defineProperty from \"@babel/runtime-corejs2/helpers/esm/defineProperty\";\nimport \"antd/lib/input/style\";\nimport _Input from \"antd/lib/input\";\nimport debounce from 'lodash/debounce';\nimport Router from 'next/router';\nimport React, { Component } from 'react';\nimport styled from 'styled-components';\nimport Loading from '../../../../../components/Loading';\nimport ShadowedTitle from '../../../../../components/ShadowedTitle';\nimport { FlexCenterColumnCenter } from '../../../../../lib/commonCss';\nimport { parseCityIds, parseErrorCode } from '../../../../../lib/commonJs';\nimport { FooterWrapper } from '../../../CSSComponents';\nimport CompleteStudentInfo from '../components/CompleteStudentInfo';\nimport StudentTable from '../components/StudentTable';\nimport { MutationCreateSkillCourseSeriesAppointment } from './MutationAssociatedUsers';\nimport ListStudentAccountsAssociated, { QueryListStudentAccounts } from './QueryListStudentAccounts';\nvar Search = _Input.Search;\n\nvar AssociatedUsersContainer =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(AssociatedUsersContainer, _Component);\n\n  function AssociatedUsersContainer(props) {\n    var _this;\n\n    _classCallCheck(this, AssociatedUsersContainer);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(AssociatedUsersContainer).call(this, props));\n\n    _defineProperty(_assertThisInitialized(_this), \"chooseId\", '');\n\n    _defineProperty(_assertThisInitialized(_this), \"goBack\", function () {\n      Router.back();\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"onChangeSearchValue\", function (e) {\n      if (e.target.value !== '') {\n        _this.debounceFun(e.target.value);\n      }\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"onChangeSelect\", function (value) {\n      if (value !== '') {\n        _this.selectedAccountList(value);\n      }\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"editCallback\", function (data) {\n      _this.setState({\n        loading: true\n      });\n\n      _this.client.mutate({\n        mutation: MutationCreateSkillCourseSeriesAppointment,\n        variables: {\n          input: _objectSpread({}, data, {\n            seriesId: Router.query.id,\n            studentAccountId: _this.chooseId\n          })\n        }\n      }).then(function (res) {\n        if (res.data) {\n          _message.success('已成功关联用户', function () {\n            Router.back();\n          });\n        }\n      }).catch(function (res) {\n        var errorCode = parseErrorCode(res);\n\n        if (errorCode === 'DuplicationError') {\n          _Modal.warning({\n            title: '无法关联此用户',\n            content: '此列表下已存在该用户，请核实',\n            okText: '我知道了'\n          });\n        }\n      }).finally(function () {\n        _this.setState({\n          loading: false\n        });\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"tableSelected\", function (id) {\n      _this.chooseId = id;\n\n      _this.setState({\n        isChosen: true\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"selectedAccountList\", function (value) {\n      if (value !== '') {\n        _this.setState({\n          variables: {\n            input: {\n              where: {\n                account: {\n                  person: {\n                    OR: [{\n                      name_contains: value\n                    }, {\n                      nickname_contains: value\n                    }, {\n                      phoneNumber_contains: value\n                    }, {\n                      email_contains: value\n                    }]\n                  }\n                }\n              }\n            }\n          }\n        });\n      } else {\n        _this.setState({\n          variables: null\n        });\n      }\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"completeStudentInfoClick\", function () {\n      _this.completeStudentInfo.getForm().validateFieldsAndScroll({\n        force: true\n      }, function (err, fieldsValue) {\n        if (!err) {\n          var cityId = '';\n          var foreignCityId = '';\n          var address = fieldsValue.address,\n              boughtAtTime = fieldsValue.boughtAt;\n          var boughtAt = boughtAtTime.format();\n\n          if (address) {\n            var cityIdList = parseCityIds(address);\n\n            if (cityIdList.cityIds.length !== 0) {\n              cityId = cityIdList.cityIds[0];\n            } else {\n              foreignCityId = cityIdList.foreignCityIds[0];\n            }\n          }\n\n          var reslut = _objectSpread({}, fieldsValue, {\n            cityId: cityId,\n            foreignCityId: foreignCityId,\n            boughtAt: boughtAt\n          });\n\n          _this.editCallback(reslut);\n        }\n      });\n    });\n\n    _this.state = {\n      loading: false,\n      accountList: [],\n      isChosen: false,\n      variables: null\n    };\n    return _this;\n  }\n\n  _createClass(AssociatedUsersContainer, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.debounceFun = debounce(this.selectedAccountList, 500);\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var _this$state = this.state,\n          variables = _this$state.variables,\n          isChosen = _this$state.isChosen;\n      return React.createElement(React.Fragment, null, React.createElement(FlexCenterColumnCenter, null, React.createElement(ShadowedTitle, {\n        text: \"\\u8BF7\\u641C\\u7D22\\u5E76\\u9009\\u62E9\\u5B66\\u5458\",\n        style: {\n          margin: '44px 0'\n        }\n      }), React.createElement(Search, {\n        placeholder: \"\\u8BF7\\u8F93\\u5165\\u59D3\\u540D\\u3001\\u6635\\u79F0\\u3001\\u624B\\u673A\\u53F7\\u3001\\u90AE\\u7BB1\\u641C\\u7D22\",\n        style: {\n          width: 433\n        },\n        enterButton: React.createElement(_Button, null, \"\\u641C\\u7D22\"),\n        onChange: this.onChangeSearchValue,\n        onSearch: this.onChangeSelect\n      })), variables !== null ? React.createElement(ListStudentAccountsAssociated, {\n        query: QueryListStudentAccounts,\n        variables: variables,\n        fetchPolicy: \"network-only\"\n      }, function (_ref) {\n        var data = _ref.data,\n            loading = _ref.loading,\n            networkStatus = _ref.networkStatus,\n            error = _ref.error,\n            client = _ref.client;\n        _this2.client = client;\n\n        if (loading && ![2, 3, 4].includes(networkStatus)) {\n          return React.createElement(Loading, null);\n        }\n\n        if (error) {\n          return null;\n        }\n\n        return React.createElement(StudentTable, {\n          tableSelected: _this2.tableSelected,\n          accountList: data.accountList\n        });\n      }) : React.createElement(StudentTable, {\n        tableSelected: this.tableSelected,\n        accountList: []\n      }), isChosen ? React.createElement(CompleteWrapper, null, React.createElement(FlexCenterColumnCenter, null, React.createElement(ShadowedTitle, {\n        text: \"\\u8BF7\\u8865\\u5168\\u5B66\\u5458\\u4FE1\\u606F\",\n        style: {\n          margin: '44px 0 14px'\n        }\n      }), React.createElement(\"div\", {\n        style: {\n          marginLeft: '32px'\n        }\n      }, React.createElement(CompleteStudentInfo, {\n        ref: function ref(_ref2) {\n          _this2.completeStudentInfo = _ref2;\n        }\n      })), React.createElement(FooterWrapper, null, React.createElement(_Button, {\n        type: \"primary\",\n        disabled: false,\n        loading: this.state.loading,\n        onClick: this.completeStudentInfoClick\n      }, \"\\u5173\\u8054\\u7528\\u6237\")))) : null);\n    }\n  }]);\n\n  return AssociatedUsersContainer;\n}(Component);\n\nexport { AssociatedUsersContainer as default };\nvar CompleteWrapper = styled.div.withConfig({\n  displayName: \"AssociatedUsersContainer__CompleteWrapper\",\n  componentId: \"sc-1azj7rp-0\"\n})([\"display:flex;justify-content:center;margin:0 200px;\"]);","map":null,"metadata":{},"sourceType":"module"}