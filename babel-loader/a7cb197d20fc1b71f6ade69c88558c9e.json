{"ast":null,"code":"import \"antd/lib/button/style\";\nimport _Button from \"antd/lib/button\";\nimport \"antd/lib/select/style\";\nimport _Select from \"antd/lib/select\";\nimport \"antd/lib/cascader/style\";\nimport _Cascader from \"antd/lib/cascader\";\nimport \"antd/lib/row/style\";\nimport _Row from \"antd/lib/row\";\nimport \"antd/lib/input/style\";\nimport _Input from \"antd/lib/input\";\nimport \"antd/lib/col/style\";\nimport _Col from \"antd/lib/col\";\nimport _objectSpread from \"@babel/runtime-corejs2/helpers/esm/objectSpread\";\nimport _classCallCheck from \"@babel/runtime-corejs2/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime-corejs2/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime-corejs2/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime-corejs2/helpers/esm/getPrototypeOf\";\nimport _assertThisInitialized from \"@babel/runtime-corejs2/helpers/esm/assertThisInitialized\";\nimport _inherits from \"@babel/runtime-corejs2/helpers/esm/inherits\";\nimport _defineProperty from \"@babel/runtime-corejs2/helpers/esm/defineProperty\";\nimport \"antd/lib/date-picker/style\";\nimport _DatePicker from \"antd/lib/date-picker\";\nimport \"antd/lib/radio/style\";\nimport _Radio from \"antd/lib/radio\";\nimport \"antd/lib/form/style\";\nimport _Form from \"antd/lib/form\";\nimport locale from 'antd/lib/date-picker/locale/zh_CN';\nimport moment from 'moment';\nimport React from 'react';\nimport styled from 'styled-components';\nimport SelectCompany from '../../../components/SelectComponents/SelectCompany';\nimport ZhiWenCascader from '../../../components/SelectComponents/ZhiWenCascader';\nimport ZhiWenSelect from '../../../components/SelectComponents/ZhiWenSelect';\nimport { FlexDisplay } from '../../../lib/commonCss';\nimport { toCascadarOptions } from '../../../lib/commonJs';\nimport { time2UTC } from '../../../lib/date';\nimport { renderOption } from '../containers/TutorDetailsContainers';\nvar FormItem = _Form.Item;\nvar RadioGroup = _Radio.Group;\nvar MonthPicker = _DatePicker.MonthPicker;\n\nvar RegistrationForm =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(RegistrationForm, _React$Component);\n\n  function RegistrationForm() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, RegistrationForm);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(RegistrationForm)).call.apply(_getPrototypeOf2, [this].concat(args)));\n\n    _defineProperty(_assertThisInitialized(_this), \"workCityInChina\", true);\n\n    _defineProperty(_assertThisInitialized(_this), \"companyInChina\", true);\n\n    _defineProperty(_assertThisInitialized(_this), \"dateFormatType\", 'YYYY-MM-DD');\n\n    _defineProperty(_assertThisInitialized(_this), \"setFieldsValue\", _this.props.form.setFieldsValue);\n\n    _defineProperty(_assertThisInitialized(_this), \"state\", {\n      loading: false,\n      disableCompany: 0,\n      disableWorkCity: 0,\n      disableEndAt: 0\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"handleSubmit\", function (e) {\n      _this.setState({\n        loading: true\n      });\n\n      e.preventDefault();\n\n      _this.props.form.validateFieldsAndScroll(function (err, fieldsValue) {\n        var _this$state = _this.state,\n            disableCompany = _this$state.disableCompany,\n            disableWorkCity = _this$state.disableWorkCity,\n            disableEndAt = _this$state.disableEndAt;\n\n        if (!err) {\n          if (!disableCompany) {\n            delete fieldsValue.foreignCompany;\n          } else {\n            delete fieldsValue.companyName;\n          }\n\n          if (!disableWorkCity) {\n            fieldsValue.locationCountryId = localStorage.getItem('zhiwen_china_id');\n            fieldsValue.locationProvinceId = fieldsValue.location[0];\n            fieldsValue.locationCityId = fieldsValue.location[1];\n          }\n\n          var industryId = fieldsValue.industryId,\n              employmentTypeId = fieldsValue.employmentTypeId,\n              channelId = fieldsValue.channelId,\n              lineOfBusiness = fieldsValue.lineOfBusiness;\n\n          var values = _objectSpread({}, fieldsValue, {\n            endAt: !disableEndAt ? time2UTC(new Date(fieldsValue.endAt._d).setHours(8, 0, 0)) : null,\n            industryId: industryId[industryId.length - 1],\n            employmentTypeId: employmentTypeId,\n            channelId: channelId[channelId.length - 1],\n            lineOfBusinessId: lineOfBusiness[lineOfBusiness.length - 1],\n            startAt: time2UTC(new Date(fieldsValue.startAt._d).setHours(8, 0, 0))\n          });\n\n          delete values.job;\n          delete values.location;\n          delete values.lineOfBusiness;\n\n          if (_this.props.type === 'add') {\n            _this.props.mutationCreate(values).then(function (success) {\n              _this.setState({\n                loading: false\n              });\n\n              if (success) {\n                _this.props.changeState('addWorkExperience', false);\n              }\n            });\n          } else {\n            values.id = _this.props.workExperience.id;\n\n            _this.props.mutationUpdate(values).then(function (success) {\n              if (success) {\n                _this.props.changeState('edit', false);\n              }\n\n              _this.setState({\n                loading: false\n              });\n            });\n          }\n        } else {\n          _this.setState({\n            loading: false\n          });\n        }\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"handleCancel\", function () {\n      _this.props.type === 'add' ? _this.props.changeState('addWorkExperience', false) : _this.props.changeState('edit', false);\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"disableElement\", function (disable, e) {\n      _this.setState(_defineProperty({}, disable, e.target.value));\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"radioGroupChange\", function (disableName, e) {\n      var setFieldsValue = _this.props.form.setFieldsValue;\n      var value = e.target.value;\n\n      _this.setState(_defineProperty({}, disableName, value), function () {\n        if (disableName === 'disableCompany') {\n          if (value === 0) {\n            setFieldsValue({\n              foreignCompany: undefined\n            });\n          } else {\n            setFieldsValue({\n              companyName: undefined\n            });\n          }\n\n          _this.props.form.validateFields(['companyName'], {\n            force: true\n          }, function () {\n            return;\n          });\n        }\n\n        if (disableName === 'disableWorkCity') {\n          if (value === 0) {\n            setFieldsValue({\n              locationCountryId: undefined\n            });\n          } else {\n            setFieldsValue({\n              location: undefined\n            });\n          }\n\n          _this.props.form.validateFields(['location'], {\n            force: true\n          }, function () {\n            return;\n          });\n        }\n\n        if (disableName === 'disableEndAt' && value === 1) {\n          setFieldsValue({\n            endAt: undefined\n          });\n\n          _this.props.form.validateFields(['endAt'], {\n            force: true\n          }, function () {\n            return;\n          });\n        }\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"getValue\", function (type, values) {\n      _this.setFieldsValue(_defineProperty({}, type, values));\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"validateCompany\", function (_rule, _value, callback) {\n      var getFieldValue = _this.props.form.getFieldValue;\n      var foreignCompany = getFieldValue('foreignCompany');\n      var companyName = getFieldValue('companyName');\n\n      if (!foreignCompany && !companyName) {\n        callback(\"\\u516C\\u53F8\\u5B57\\u6BB5\\u4E0D\\u53EF\\u4E3A\\u7A7A\\uFF0C\\u8BF7\\u9009\\u586B\\u56FD\\u5185\\u6216\\u56FD\\u5916\\u516C\\u53F8\");\n      }\n\n      callback();\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"validateLocation\", function (_rule, _value, callback) {\n      var getFieldValue = _this.props.form.getFieldValue;\n      var locationCountryId = getFieldValue('locationCountryId');\n      var location = getFieldValue('location');\n\n      if (!locationCountryId && !location) {\n        callback(\"\\u5DE5\\u4F5C\\u57CE\\u5E02\\u5B57\\u6BB5\\u4E0D\\u53EF\\u4E3A\\u7A7A\\uFF0C\\u8BF7\\u9009\\u586B\\u56FD\\u5185\\u6216\\u56FD\\u5916\\u5DE5\\u4F5C\\u57CE\\u5E02\");\n      }\n\n      callback();\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"validateEndAt\", function (_rule, _value, callback) {\n      var disableEndAt = _this.state.disableEndAt;\n      var getFieldValue = _this.props.form.getFieldValue;\n      var endAt = getFieldValue('endAt');\n      var startAt = getFieldValue('startAt');\n\n      if (!endAt && disableEndAt === 0) {\n        callback(\"\\u6B64\\u5B57\\u6BB5\\u4E0D\\u53EF\\u4E3A\\u7A7A\");\n      }\n\n      if (disableEndAt === 1) {\n        endAt = moment().toISOString();\n      }\n\n      if (startAt && endAt && moment(endAt).isBefore(moment(startAt))) {\n        callback(\"\\u7ED3\\u675F\\u65F6\\u95F4\\u4E0D\\u80FD\\u65E9\\u4E8E\\u5F00\\u59CB\\u65F6\\u95F4\");\n      }\n\n      callback();\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"validateOtherField\", function (type, _rule, _value, callback) {\n      var validateFieldsAndScroll = _this.props.form.validateFieldsAndScroll;\n      validateFieldsAndScroll([type], {\n        force: true\n      }, function () {\n        return;\n      });\n      callback();\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"componentDidMount\", function () {\n      if (_this.props.type === 'edit') {\n        var workExperience = _this.props.workExperience;\n        var industry = workExperience.industry,\n            foreignCompany = workExperience.foreignCompany,\n            locationCity = workExperience.locationCity,\n            locationProvince = workExperience.locationProvince,\n            locationCountry = workExperience.locationCountry,\n            company = workExperience.company,\n            jobTitle = workExperience.jobTitle,\n            employmentType = workExperience.employmentType,\n            channel = workExperience.channel,\n            endAt = workExperience.endAt,\n            startAt = workExperience.startAt,\n            description = workExperience.description,\n            remark = workExperience.remark,\n            profession = workExperience.profession,\n            subdivisionField = workExperience.subdivisionField,\n            lineOfBusiness = workExperience.lineOfBusiness;\n        var isChina = locationCountry.name === '中国';\n        var companyInChina = workExperience.foreignCompany === '';\n\n        if (!isChina) {\n          _this.setState({\n            disableWorkCity: 1\n          });\n        }\n\n        if (!companyInChina) {\n          _this.setState({\n            disableCompany: 1\n          });\n        }\n\n        _this.setFieldsValue({\n          channelId: [channel.parent.id, channel.id],\n          companyName: company ? company.companyName : '',\n          description: description,\n          professionId: profession && profession.id,\n          employmentTypeId: employmentType && employmentType.id,\n          endAt: endAt && moment(endAt, _this.dateFormatType),\n          foreignCompany: foreignCompany,\n          // jobCategoryId: jobCategory && jobCategory.id,\n          jobTitle: jobTitle,\n          industryId: industry && [industry.parent.id, industry.id],\n          lineOfBusiness: lineOfBusiness && [lineOfBusiness.parent.id, lineOfBusiness.id],\n          location: isChina ? [locationProvince && locationProvince.id, locationCity && locationCity.id] : [],\n          locationCountryId: !isChina ? locationCountry.id : '',\n          remark: remark ? remark : '',\n          startAt: moment(startAt, _this.dateFormatType),\n          subdivisionField: subdivisionField\n        }); // 处理当 结束时间为至今时\n\n\n        if (!endAt) {\n          _this.setState({\n            disableEndAt: 1\n          });\n        }\n      }\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"filterData\", function (input, option) {\n      return option.props.children.toLowerCase().indexOf(input.toLowerCase()) >= 0;\n    });\n\n    return _this;\n  }\n\n  _createClass(RegistrationForm, [{\n    key: \"render\",\n    value: function render() {\n      var _this$props$form = this.props.form,\n          getFieldDecorator = _this$props$form.getFieldDecorator,\n          getFieldValue = _this$props$form.getFieldValue;\n      var index = this.props.index;\n      var disableWorkCity = this.state.disableWorkCity;\n      var endAtIndex = true;\n\n      if (this.props.type === 'edit') {\n        var workExperience = this.props.workExperience;\n        endAtIndex = !!this.props.workExperience.endAt;\n        this.workCityInChina = workExperience.locationCountry.name === '中国';\n        this.companyInChina = workExperience.foreignCompany === '';\n      }\n\n      return React.createElement(_Form, {\n        onSubmit: this.handleSubmit,\n        style: {\n          width: '100%',\n          backgroundColor: '#fff'\n        }\n      }, React.createElement(\"p\", {\n        style: {\n          color: '#BFBFBF'\n        }\n      }, \"\\u76F8\\u5173\\u5DE5\\u4F5C\\u7ECF\\u5386\".concat(index || '')), React.createElement(_Row, null, React.createElement(_Col, {\n        span: 24\n      }, React.createElement(RadioGroup, {\n        style: {\n          width: '100%'\n        },\n        defaultValue: this.companyInChina ? 0 : 1,\n        onChange: this.radioGroupChange.bind(this, 'disableCompany')\n      }, React.createElement(_Col, {\n        span: 24\n      }, React.createElement(_Col, {\n        span: 10\n      }, React.createElement(Label, {\n        className: \"ant-form-item-required\",\n        title: \"\\u516C\\u53F8\"\n      }, \"\\u516C\\u53F8\"), React.createElement(FormItem, null, React.createElement(\"div\", {\n        style: {\n          display: 'flex'\n        }\n      }, React.createElement(_Radio, {\n        value: 0\n      }), React.createElement(SelectTitle, null, \"\\u56FD\\u5185\"), getFieldDecorator('companyName', {\n        initialValue: getFieldValue('companyName'),\n        rules: [{\n          validator: this.validateCompany\n        }]\n      })(React.createElement(SelectCompany, {\n        disabled: Boolean(this.state.disableCompany),\n        setValue: getFieldValue('companyName'),\n        getValue: this.getValue.bind(this, 'companyName')\n      }))))), React.createElement(_Col, {\n        span: 10,\n        offset: 4,\n        style: {\n          marginTop: 39\n        }\n      }, React.createElement(FormItem, null, React.createElement(\"div\", {\n        style: {\n          display: 'flex'\n        }\n      }, React.createElement(_Radio, {\n        value: 1\n      }), React.createElement(SelectTitle, null, \"\\u56FD\\u5916\"), getFieldDecorator('foreignCompany', {\n        rules: [{\n          validator: this.validateOtherField.bind(this, 'companyName')\n        }]\n      })(React.createElement(_Input, {\n        placeholder: \"\\u8BF7\\u8F93\\u5165\",\n        maxLength: 50,\n        style: {\n          flex: 1\n        },\n        disabled: !this.state.disableCompany\n      }))))))))), React.createElement(_Row, null, React.createElement(_Col, {\n        span: 24\n      }, React.createElement(RadioGroup, {\n        style: {\n          width: '100%'\n        },\n        defaultValue: this.workCityInChina ? 0 : 1,\n        onChange: this.radioGroupChange.bind(this, 'disableWorkCity')\n      }, React.createElement(_Col, {\n        span: 24\n      }, React.createElement(_Col, {\n        span: 10\n      }, React.createElement(Label, {\n        className: \"ant-form-item-required\",\n        title: \"\\u5DE5\\u4F5C\\u57CE\\u5E02\"\n      }, \"\\u5DE5\\u4F5C\\u5730\\u70B9\"), React.createElement(FormItem, null, React.createElement(\"div\", {\n        style: {\n          display: 'flex'\n        }\n      }, React.createElement(_Radio, {\n        value: 0\n      }), React.createElement(SelectTitle, null, \"\\u56FD\\u5185\"), getFieldDecorator('location', {\n        rules: [{\n          validator: this.validateLocation\n        }]\n      })(React.createElement(_Cascader, {\n        disabled: Boolean(disableWorkCity),\n        showSearch: true,\n        style: {\n          flex: 1\n        },\n        options: toCascadarOptions(JSON.parse(localStorage.getItem('zhiwen_province_city')), 2),\n        allowClear: false,\n        placeholder: \"\\u8BF7\\u9009\\u62E9\",\n        notFoundContent: \"\\u65E0\\u7ED3\\u679C\"\n      }))))), React.createElement(_Col, {\n        span: 10,\n        offset: 4,\n        style: {\n          marginTop: 39\n        }\n      }, React.createElement(FormItem, null, React.createElement(\"div\", {\n        style: {\n          display: 'flex'\n        }\n      }, React.createElement(_Radio, {\n        value: 1\n      }), React.createElement(SelectTitle, null, \"\\u56FD\\u5916\"), getFieldDecorator('locationCountryId', {\n        rules: [{\n          validator: this.validateOtherField.bind(this, 'location')\n        }]\n      })(React.createElement(_Select, {\n        showSearch: true,\n        placeholder: \"\\u4EC5\\u652F\\u6301\\u641C\\u7D22\\u56FD\\u5BB6\",\n        style: {\n          flex: 1\n        },\n        filterOption: this.filterData,\n        disabled: !disableWorkCity // onChange={this.onChange}\n\n      }, renderOption(JSON.parse(localStorage.getItem('zhiwen_foreign_country')))))))))))), React.createElement(_Row, null, React.createElement(_Col, {\n        span: 10\n      }, React.createElement(FormItem, {\n        label: \"\\u4ECE\\u4E8B\\u884C\\u4E1A\",\n        colon: false\n      }, getFieldDecorator('professionId', {\n        rules: [{\n          message: '此字段无法为空',\n          required: true\n        }]\n      })(React.createElement(ZhiWenSelect, {\n        type: \"zhiwen-profession\",\n        getValue: this.getValue.bind(this, 'professionId')\n      })))), React.createElement(_Col, {\n        span: 10,\n        offset: 4\n      }, React.createElement(FormItem, {\n        label: \"\\u4E1A\\u52A1\\u7EBF/\\u9886\\u57DF\",\n        colon: false\n      }, getFieldDecorator('lineOfBusiness', {\n        rules: [{\n          message: '此字段无法为空',\n          required: true\n        }]\n      })(React.createElement(ZhiWenCascader, {\n        type: \"line-of-business\" // value={getFieldValue('lineOfBusiness')}\n        ,\n        getValue: this.getValue.bind(this, 'lineOfBusiness')\n      }))))), React.createElement(FormItem, {\n        label: \"\\u7EC6\\u5206\\u9886\\u57DF\",\n        colon: false\n      }, getFieldDecorator('subdivisionField')(React.createElement(_Input.TextArea, {\n        placeholder: \"\\u8BF7\\u8F93\\u5165\",\n        autoSize: {\n          minRows: 1,\n          maxRows: 4\n        }\n      }))), React.createElement(_Row, null, React.createElement(_Col, {\n        span: 10\n      }, React.createElement(FormItem, {\n        label: \"\\u804C\\u4F4D\",\n        colon: false\n      }, getFieldDecorator('jobTitle', {\n        rules: [{\n          message: '此字段无法为空',\n          required: true\n        }]\n      })(React.createElement(_Input, {\n        placeholder: \"\\u8BF7\\u8F93\\u5165\",\n        maxLength: 50\n      })))), React.createElement(_Col, {\n        span: 10,\n        offset: 4\n      }, React.createElement(FormItem, {\n        label: \"\\u64C5\\u957F\\u884C\\u4E1A\",\n        colon: false\n      }, getFieldDecorator('industryId', {\n        rules: [{\n          message: '此字段无法为空',\n          required: true\n        }]\n      })(React.createElement(ZhiWenCascader, {\n        type: \"industry\",\n        getValue: this.getValue.bind(this, 'industryId')\n      }))))), React.createElement(_Row, null, React.createElement(_Col, {\n        span: 10\n      }, React.createElement(FormItem, {\n        label: \"\\u804C\\u4F4D\\u6027\\u8D28\",\n        colon: false\n      }, getFieldDecorator('employmentTypeId', {\n        rules: [{\n          message: '此字段无法为空',\n          required: true\n        }]\n      })(React.createElement(_Select, {\n        placeholder: \"\\u8BF7\\u9009\\u62E9\"\n      }, renderOption(this.props.listEmploymentEnum))))), React.createElement(_Col, {\n        span: 10,\n        offset: 4\n      }, React.createElement(FormItem, {\n        label: \"\\u83B7\\u5F97\\u6E20\\u9053\",\n        colon: false\n      }, getFieldDecorator('channelId', {\n        rules: [{\n          message: '此字段无法为空',\n          required: true\n        }]\n      })(React.createElement(ZhiWenCascader, {\n        type: \"channel\",\n        getValue: this.getValue.bind(this, 'channelId')\n      }))))), React.createElement(_Row, null, React.createElement(_Col, {\n        span: 10\n      }, React.createElement(FormItem, {\n        label: \"\\u5F00\\u59CB\\u65F6\\u95F4\",\n        colon: false\n      }, getFieldDecorator('startAt', {\n        rules: [{\n          message: '此字段无法为空',\n          required: true\n        }, {\n          validator: this.validateOtherField.bind(this, 'endAt')\n        }]\n      })(React.createElement(MonthPicker, {\n        locale: locale,\n        placeholder: \"\\u8BF7\\u9009\\u62E9\",\n        style: {\n          width: '100%'\n        }\n      })))), React.createElement(_Col, {\n        span: 10,\n        offset: 4\n      }, React.createElement(_Col, {\n        span: 24\n      }, React.createElement(RadioGroup, {\n        style: {\n          width: '100%'\n        },\n        defaultValue: endAtIndex ? 0 : 1,\n        onChange: this.radioGroupChange.bind(this, 'disableEndAt')\n      }, React.createElement(FlexDisplay, {\n        style: {\n          alignItems: 'flex-end'\n        }\n      }, React.createElement(_Col, {\n        span: 19\n      }, React.createElement(Label, {\n        className: \"ant-form-item-required\",\n        title: \"\\u7ED3\\u675F\\u65F6\\u95F4\"\n      }, \"\\u7ED3\\u675F\\u65F6\\u95F4\"), React.createElement(FormItem, null, React.createElement(\"div\", {\n        style: {\n          display: 'flex'\n        }\n      }, React.createElement(_Radio, {\n        value: 0\n      }), React.createElement(SelectTitle, {\n        style: {\n          width: 100,\n          whiteSpace: 'nowrap'\n        }\n      }, \"\\u7ED3\\u675F\\u65F6\\u95F4\"), getFieldDecorator('endAt', {\n        rules: [{\n          validator: this.validateEndAt\n        }]\n      })(React.createElement(MonthPicker, {\n        disabled: Boolean(this.state.disableEndAt),\n        locale: locale,\n        placeholder: \"\\u8BF7\\u9009\\u62E9\",\n        style: {\n          width: '100%'\n        }\n      }))))), React.createElement(_Col, {\n        span: 4,\n        offset: 1\n      }, React.createElement(FormItem, null, React.createElement(\"div\", {\n        style: {\n          display: 'flex'\n        }\n      }, React.createElement(_Radio, {\n        value: 1\n      }), React.createElement(SelectTitle, null, \"\\u81F3\\u4ECA\"))))))))), React.createElement(FormItem, {\n        label: \"\\u5DE5\\u4F5C\\u5185\\u5BB9\",\n        colon: false\n      }, getFieldDecorator('description', {\n        rules: [{\n          message: '此字段无法为空',\n          required: true\n        }]\n      })(React.createElement(_Input.TextArea, {\n        key: 'description',\n        placeholder: \"\\u8BF7\\u8F93\\u5165\",\n        autoSize: {\n          minRows: 3,\n          maxRows: 6\n        }\n      }))), React.createElement(FormItem, {\n        label: \"\\u5907\\u6CE8\",\n        colon: false\n      }, getFieldDecorator('remark')(React.createElement(_Input.TextArea, {\n        key: 'remark',\n        placeholder: \"\\u8BF7\\u8F93\\u5165\",\n        autoSize: {\n          minRows: 1,\n          maxRows: 4\n        }\n      }))), React.createElement(FormItem, {\n        labelCol: {\n          span: 12\n        }\n      }, React.createElement(_Button, {\n        onClick: this.handleCancel\n      }, \"\\u53D6\\u6D88\"), React.createElement(_Button, {\n        style: {\n          marginLeft: 20\n        },\n        type: \"primary\",\n        htmlType: \"submit\",\n        loading: this.state.loading\n      }, \"\\u4FDD\\u5B58\")));\n    }\n  }]);\n\n  return RegistrationForm;\n}(React.Component);\n\nvar WrappedRegistrationForm = _Form.create()(RegistrationForm);\n\nexport default WrappedRegistrationForm;\nvar Label = styled.label.withConfig({\n  displayName: \"EditWorkExperience__Label\",\n  componentId: \"sc-28nm3g-0\"\n})([\"display:block;height:40px;line-height:40px;color:rgba(0,0,0,0.85);\"]);\nvar SelectTitle = styled.span.withConfig({\n  displayName: \"EditWorkExperience__SelectTitle\",\n  componentId: \"sc-28nm3g-1\"\n})([\"min-width:35px;line-height:30px;\"]);","map":null,"metadata":{},"sourceType":"module"}