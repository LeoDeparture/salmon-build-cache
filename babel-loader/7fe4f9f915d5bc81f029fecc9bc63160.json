{"ast":null,"code":"import \"antd/lib/upload/style\";\nimport _Upload from \"antd/lib/upload\";\nimport _classCallCheck from \"@babel/runtime-corejs2/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime-corejs2/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime-corejs2/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime-corejs2/helpers/esm/getPrototypeOf\";\nimport _assertThisInitialized from \"@babel/runtime-corejs2/helpers/esm/assertThisInitialized\";\nimport _inherits from \"@babel/runtime-corejs2/helpers/esm/inherits\";\nimport _defineProperty from \"@babel/runtime-corejs2/helpers/esm/defineProperty\";\nimport axios from 'axios';\nimport getConfig from 'next/config';\nimport * as React from 'react';\n\nvar _getConfig = getConfig(),\n    publicRuntimeConfig = _getConfig.publicRuntimeConfig;\n\nvar AWS =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(AWS, _React$Component);\n\n  function AWS() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, AWS);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(AWS)).call.apply(_getPrototypeOf2, [this].concat(args)));\n\n    _defineProperty(_assertThisInitialized(_this), \"state\", {\n      success: false,\n      url: ''\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"customRequest\", function (e) {\n      var file = e.file; // Split the filename to get the name and type\n\n      var fileParts = e.file.name.split('.');\n      var fileName = fileParts[0];\n      var fileType = e.file.type;\n      axios.post(\"\".concat(publicRuntimeConfig.serverUrl, \"/aws-s3-auth\"), {\n        fileName: fileName,\n        fileType: fileType\n      }, {\n        headers: {\n          'Content-Type': 'application/json',\n          'Access-Control-Allow-Origin': '*'\n        }\n      }).then(function (response) {\n        var returnData = response.data.data.returnData;\n        var signedRequest = returnData.signedRequest;\n        var url = returnData.url;\n\n        _this.setState({\n          url: url\n        }); // Put the fileType in the headers for the upload\n\n\n        var options = {\n          headers: {\n            'Content-Type': fileType,\n            'Access-Control-Allow-Origin': '*'\n          }\n        };\n        axios.put(signedRequest, file, options).then(function (result) {\n          // if status === 200 传输成功\n          if (result.status === 200) {\n            _this.props.onSuccess(url);\n          }\n        }).catch(function () {\n          _this.props.onError();\n        });\n      }).catch(function () {\n        _this.props.onError();\n      });\n    });\n\n    return _this;\n  }\n\n  _createClass(AWS, [{\n    key: \"render\",\n    value: function render() {\n      return React.createElement(_Upload, {\n        customRequest: this.customRequest,\n        showUploadList: false\n      }, this.props.children);\n    }\n  }]);\n\n  return AWS;\n}(React.Component);\n\nexport default AWS;","map":null,"metadata":{},"sourceType":"module"}