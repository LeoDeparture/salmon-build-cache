{"ast":null,"code":"import _classCallCheck from \"@babel/runtime-corejs2/helpers/esm/classCallCheck\";\nimport _possibleConstructorReturn from \"@babel/runtime-corejs2/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime-corejs2/helpers/esm/getPrototypeOf\";\nimport _inherits from \"@babel/runtime-corejs2/helpers/esm/inherits\";\nimport _taggedTemplateLiteral from \"@babel/runtime-corejs2/helpers/esm/taggedTemplateLiteral\";\n\nfunction _templateObject() {\n  var data = _taggedTemplateLiteral([\"\\n  query misViewer {\\n    misViewer {\\n      person {\\n        id\\n        name\\n        nickname\\n        email\\n        phoneNumber\\n        nimInfo {\\n          id\\n          name\\n          accid\\n          token\\n        }\\n      }\\n      department {\\n        id\\n        name\\n        permissions {\\n          ...permission\\n        }\\n      }\\n      permissions {\\n        ...permission\\n      }\\n      operatorAccount {\\n        id\\n      }\\n    }\\n  }\\n  \", \"\\n\"]);\n\n  _templateObject = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n\nimport gql from 'graphql-tag';\nimport { Query } from 'react-apollo';\nimport { FragmentPermission } from '../../routes/role/Types';\nexport var QueryMisViewer = gql(_templateObject(), FragmentPermission);\n\nvar MisViewer =\n/*#__PURE__*/\nfunction (_Query) {\n  _inherits(MisViewer, _Query);\n\n  function MisViewer() {\n    _classCallCheck(this, MisViewer);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(MisViewer).apply(this, arguments));\n  }\n\n  return MisViewer;\n}(Query);\n\nexport { MisViewer as default };","map":null,"metadata":{},"sourceType":"module"}