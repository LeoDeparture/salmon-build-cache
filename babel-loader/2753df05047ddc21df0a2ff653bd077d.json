{"ast":null,"code":"import \"antd/lib/table/style\";\nimport _Table from \"antd/lib/table\";\nimport \"antd/lib/popover/style\";\nimport _Popover from \"antd/lib/popover\";\nimport \"antd/lib/button/style\";\nimport _Button from \"antd/lib/button\";\nimport \"antd/lib/dropdown/style\";\nimport _Dropdown from \"antd/lib/dropdown\";\nimport \"antd/lib/icon/style\";\nimport _Icon from \"antd/lib/icon\";\nimport \"antd/lib/badge/style\";\nimport _Badge from \"antd/lib/badge\";\nimport \"antd/lib/menu/style\";\nimport _Menu from \"antd/lib/menu\";\nimport _classCallCheck from \"@babel/runtime-corejs2/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime-corejs2/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime-corejs2/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime-corejs2/helpers/esm/getPrototypeOf\";\nimport _assertThisInitialized from \"@babel/runtime-corejs2/helpers/esm/assertThisInitialized\";\nimport _inherits from \"@babel/runtime-corejs2/helpers/esm/inherits\";\nimport _defineProperty from \"@babel/runtime-corejs2/helpers/esm/defineProperty\";\nimport \"antd/lib/layout/style\";\nimport _Layout from \"antd/lib/layout\";\nimport React from 'react';\nimport styled from 'styled-components';\nimport Loading from '../../../components/Loading';\nimport SelectCourseCategories from '../../../components/SelectComponents/SelectCourseCategories';\nimport SortableModal from '../../../components/SortableModal';\nimport { FlexContent, FlexDisplay } from '../../../lib/commonCss';\nvar Content = _Layout.Content;\nvar FlexDiv = styled.div.withConfig({\n  displayName: \"SubscriptionCourseManagementContent__FlexDiv\",\n  componentId: \"sc-1jh39gh-0\"\n})([\"display:flex;flex:1;min-height:650px;\"]);\nvar TitleDiv = styled.div.withConfig({\n  displayName: \"SubscriptionCourseManagementContent__TitleDiv\",\n  componentId: \"sc-1jh39gh-1\"\n})([\"padding:10px 40px 0 20px;font-size:20px;font-weight:500;color:#000;background-color:#fff;\"]);\nvar SelectTitle = styled.span.withConfig({\n  displayName: \"SubscriptionCourseManagementContent__SelectTitle\",\n  componentId: \"sc-1jh39gh-2\"\n})([\"padding:5px 12px 5px 5px;font-size:15px;color:#000;\"]);\n\nvar SubscriptionCourseManagementContentTable =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(SubscriptionCourseManagementContentTable, _React$Component);\n\n  function SubscriptionCourseManagementContentTable() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, SubscriptionCourseManagementContentTable);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(SubscriptionCourseManagementContentTable)).call.apply(_getPrototypeOf2, [this].concat(args)));\n\n    _defineProperty(_assertThisInitialized(_this), \"state\", {\n      disabled: true,\n      listData: _this.props.listData,\n      loading: false,\n      selected: false,\n      showHoverData: ''\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"menu\", function (record) {\n      var showHoverData = ['查看详情', '编辑'];\n\n      if (record.status === '未上线' || record.status === '已下线') {\n        showHoverData.push.apply(showHoverData, ['上线', '移除']);\n      }\n\n      if (record.status === '已上线') {\n        showHoverData.push.apply(showHoverData, ['下线', '移除']);\n      }\n\n      return React.createElement(_Menu, null, _this.props.menuItem(showHoverData, record));\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"selectCategory\", function (values) {\n      var categoryId = values.slice(-1).pop();\n\n      _this.setState({\n        selected: !!categoryId\n      });\n\n      _this.props.filterHandler(categoryId);\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"handleTableChange\", function (_pagination, _filters, sorter) {\n      _this.props.orderHandler(sorter.order);\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"handleSort\", function () {\n      _this.sortModal.showPop();\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"onRef\", function (child) {\n      _this.sortModal = child;\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"cellStyle\", function () {\n      return {\n        style: {\n          whiteSpace: 'nowrap',\n          maxWidth: 150\n        }\n      };\n    });\n\n    return _this;\n  }\n\n  _createClass(SubscriptionCourseManagementContentTable, [{\n    key: \"componentWillReceiveProps\",\n    value: function componentWillReceiveProps() {\n      this.setState({\n        disabled: !this.state.selected || this.props.listData.length < 2\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var data = this.props.listData;\n      var columns = [{\n        dataIndex: 'name',\n        key: 'name',\n        title: '对内课程名称',\n        width: '30%',\n        onCell: this.cellStyle,\n        render: function render(text) {\n          return React.createElement(\"div\", {\n            style: {\n              textOverflow: 'ellipsis',\n              overflow: 'hidden'\n            }\n          }, text);\n        }\n      }, {\n        dataIndex: 'category',\n        key: 'type',\n        title: '所属分类',\n        width: '15%',\n        onCell: this.cellStyle,\n        render: function render(text) {\n          return React.createElement(\"div\", {\n            style: {\n              textOverflow: 'ellipsis',\n              overflow: 'hidden',\n              direction: 'rtl',\n              maxWidth: 150\n            }\n          }, text);\n        }\n      }, {\n        dataIndex: 'industry',\n        key: 'industry',\n        title: '所属行业',\n        width: '10%'\n      }, {\n        dataIndex: 'seriesAmount',\n        key: 'seriesAmount',\n        title: '周期数',\n        width: '10%'\n      }, {\n        dataIndex: 'status',\n        key: 'status',\n        render: function render(text) {\n          var badgeStatus = text === '已上线' ? 'success' : text === '未上线' ? 'warning' : 'default';\n          return React.createElement(\"div\", {\n            style: {\n              display: 'flex'\n            }\n          }, React.createElement(_Badge, {\n            status: badgeStatus\n          }), React.createElement(\"div\", null, text));\n        },\n        title: '状态',\n        width: '10%'\n      }, {\n        dataIndex: 'createdAt',\n        key: 'createdAt',\n        sorter: true,\n        sortDirections: ['descend', 'ascend'],\n        title: '创建时间',\n        width: '15%'\n      }, {\n        dataIndex: 'operating',\n        key: 'operating',\n        render: function render(text, record) {\n          return React.createElement(_Dropdown, {\n            overlay: _this2.menu(record)\n          }, React.createElement(\"span\", {\n            style: {\n              color: '#6285ff'\n            },\n            className: \"ant-dropdown-link\"\n          }, text, React.createElement(_Icon, {\n            type: \"down\"\n          })));\n        },\n        title: '操作',\n        width: '10%'\n      }];\n      return React.createElement(\"div\", null, React.createElement(TitleDiv, null, \"\\u8BFE\\u7A0B\\u7BA1\\u7406\"), React.createElement(\"div\", {\n        style: {\n          backgroundColor: '#fff',\n          display: 'flex',\n          justifyContent: 'space-between',\n          padding: '20px 18px '\n        }\n      }, React.createElement(FlexContent, null, React.createElement(SelectTitle, null, \"\\u6309\\u8BFE\\u7A0B\\u5206\\u7C7B\\u7B5B\\u9009\\uFF1A\"), React.createElement(FlexDisplay, {\n        style: {\n          width: '40%'\n        }\n      }, React.createElement(SelectCourseCategories, {\n        serviceTypeKey: 'SUBSCRIPTION_COURSE',\n        getValue: this.selectCategory\n      }))), this.state.disabled ? React.createElement(FlexDisplay, null, React.createElement(_Popover, {\n        arrowPointAtCenter: true,\n        placement: \"top\",\n        content: React.createElement(React.Fragment, null, React.createElement(\"div\", null, \"\\u4F7F\\u7528\\u6392\\u5E8F\\u529F\\u80FD\\u9700\\u6EE1\\u8DB3\\u5982\\u4E0B\\u6761\\u4EF6\\uFF1A\"), React.createElement(\"div\", null, \"1\\u3001\\u9009\\u62E91\\u4E2A\\u8BFE\\u7A0B\\u5206\\u7C7B\\uFF1B\"), React.createElement(\"div\", null, \"2\\u3001\\u6B64\\u5206\\u7C7B\\u81F3\\u5C11\\u9700\\u89812\\u95E8\\u8BFE\\u7A0B\\u3002\"))\n      }, React.createElement(_Button, {\n        disabled: this.state.disabled,\n        style: {\n          marginRight: '12px'\n        },\n        type: \"default\",\n        onClick: this.handleSort\n      }, \"\\u6392\\u5E8F\"))) : React.createElement(FlexDisplay, null, React.createElement(_Button, {\n        disabled: this.state.disabled,\n        style: {\n          marginRight: '12px'\n        },\n        type: \"default\",\n        onClick: this.handleSort\n      }, \"\\u6392\\u5E8F\"), React.createElement(SortableModal, {\n        onRef: this.onRef,\n        title: '课程',\n        getListItemsHelper: this.props.getListItemsHelper,\n        setListItemsHelper: this.props.setListItemsHelper\n      })), React.createElement(FlexDisplay, null, React.createElement(_Button, {\n        type: \"primary\",\n        onClick: this.props.switchPage.bind(this, 'create')\n      }, \"\\u521B\\u5EFA\\u8BA2\\u9605\\u8BFE\\u7A0B\"))), React.createElement(Content, {\n        style: {\n          backgroundColor: '#fff',\n          margin: '24px 16px',\n          padding: 24\n        }\n      }, this.props.showTable ? React.createElement(_Table, {\n        columns: columns,\n        dataSource: data,\n        pagination: false,\n        bordered: false,\n        loading: this.state.loading,\n        footer: this.props.footer,\n        onChange: this.handleTableChange,\n        locale: {\n          emptyText: '暂无课程，点击右上角按钮开始创建课程'\n        }\n      }) : React.createElement(FlexDiv, null, React.createElement(Loading, {\n        type: \"flex\"\n      }))));\n    }\n  }]);\n\n  return SubscriptionCourseManagementContentTable;\n}(React.Component);\n\nexport default SubscriptionCourseManagementContentTable;","map":null,"metadata":{},"sourceType":"module"}