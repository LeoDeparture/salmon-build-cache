{"ast":null,"code":"import \"antd/lib/button/style\";\nimport _Button from \"antd/lib/button\";\nimport \"antd/lib/date-picker/style\";\nimport _DatePicker from \"antd/lib/date-picker\";\nimport _toConsumableArray from \"@babel/runtime-corejs2/helpers/esm/toConsumableArray\";\nimport \"antd/lib/input/style\";\nimport _Input from \"antd/lib/input\";\nimport \"antd/lib/row/style\";\nimport _Row from \"antd/lib/row\";\nimport \"antd/lib/select/style\";\nimport _Select from \"antd/lib/select\";\nimport \"antd/lib/col/style\";\nimport _Col from \"antd/lib/col\";\nimport \"antd/lib/form/style\";\nimport _Form from \"antd/lib/form\";\nimport \"antd/lib/cascader/style\";\nimport _Cascader from \"antd/lib/cascader\";\nimport \"antd/lib/radio/style\";\nimport _Radio from \"antd/lib/radio\";\nimport _regeneratorRuntime from \"@babel/runtime-corejs2/regenerator\";\nimport _JSON$stringify from \"@babel/runtime-corejs2/core-js/json/stringify\";\nimport _Object$assign from \"@babel/runtime-corejs2/core-js/object/assign\";\nimport _parseInt from \"@babel/runtime-corejs2/core-js/parse-int\";\nimport _asyncToGenerator from \"@babel/runtime-corejs2/helpers/esm/asyncToGenerator\";\nimport _classCallCheck from \"@babel/runtime-corejs2/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime-corejs2/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime-corejs2/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime-corejs2/helpers/esm/getPrototypeOf\";\nimport _assertThisInitialized from \"@babel/runtime-corejs2/helpers/esm/assertThisInitialized\";\nimport _inherits from \"@babel/runtime-corejs2/helpers/esm/inherits\";\nimport _defineProperty from \"@babel/runtime-corejs2/helpers/esm/defineProperty\";\nimport RadioGroup from 'antd/lib/radio/group';\nimport moment from 'moment';\nimport React from 'react';\nimport locale from 'antd/lib/date-picker/locale/zh_CN';\nimport SelectCompany from '../../../../components/SelectComponents/SelectCompany';\nimport ZhiWenCascader from '../../../../components/SelectComponents/ZhiWenCascader';\nimport ZhiWenSelect from '../../../../components/SelectComponents/ZhiWenSelect';\nimport { checkPositive, renderSelectOptions, toCascadarOptions } from '../../../../lib/commonJs';\nimport { positiveIntegerReg, positiveOneDigitDecimal } from '../../../../lib/regexp';\nimport commonFunc from '../CommonFunc';\nimport { FormStyle, noTxtRequireRule, RadioGroupStyle, RadioInputWrapper, RadioLabelStyle, RadioLabelWrapper, requireRule, SelectPlaceHolder } from '../UserResumeComponent';\nvar END_OF_THE_WORLD = '2031-01-01';\n\nvar ModuleForm =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(ModuleForm, _React$Component);\n\n  function ModuleForm() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, ModuleForm);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(ModuleForm)).call.apply(_getPrototypeOf2, [this].concat(args)));\n\n    _defineProperty(_assertThisInitialized(_this), \"state\", {\n      hideWorkDuration: false,\n      selectedAddressType: 0,\n      selectedCompanyType: 0\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"updating\", false);\n\n    _defineProperty(_assertThisInitialized(_this), \"handleSubmit\",\n    /*#__PURE__*/\n    function () {\n      var _ref = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee(e) {\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                e.preventDefault();\n\n                if (!_this.updating) {\n                  _context.next = 3;\n                  break;\n                }\n\n                return _context.abrupt(\"return\");\n\n              case 3:\n                _this.updating = true;\n\n                _this.props.form.validateFieldsAndScroll(function (err, fieldsValue) {\n                  if (!err) {\n                    var earliestEntryTime = fieldsValue.earliestEntryTime,\n                        employmentType = fieldsValue.employmentType,\n                        foreignCompany = fieldsValue.foreignCompany,\n                        foreignCountryId = fieldsValue.foreignCountryId,\n                        industries = fieldsValue.industries,\n                        intentionCompanyName = fieldsValue.intentionCompanyName,\n                        jobSeekingStatusId = fieldsValue.jobSeekingStatusId,\n                        latestEntryTime = fieldsValue.latestEntryTime,\n                        location = fieldsValue.location,\n                        position = fieldsValue.position,\n                        salaryMax = fieldsValue.salaryMax,\n                        salaryMin = fieldsValue.salaryMin,\n                        salaryTypeId = fieldsValue.salaryTypeId,\n                        serviceLine = fieldsValue.serviceLine,\n                        workDuration = fieldsValue.workDuration;\n                    var input = {\n                      earliestEntryTime: earliestEntryTime.toDate(),\n                      employmentTypeId: employmentType && employmentType.key,\n                      foreignCompany: foreignCompany,\n                      industriesId: industries,\n                      intentionCompanyName: intentionCompanyName,\n                      jobSeekingStatusId: jobSeekingStatusId,\n                      latestEntryTime: latestEntryTime.toDate(),\n                      position: position,\n                      salaryMax: _parseInt(salaryMax, 10),\n                      salaryMin: _parseInt(salaryMin, 10),\n                      salaryTypeId: salaryTypeId,\n                      serviceLineId: serviceLine && serviceLine[serviceLine.length - 1],\n                      workDuration: _this.state.hideWorkDuration ? null : _parseInt(workDuration, 10)\n                    }; // 是否选择国内地址\n\n                    var isForeignAddress = _this.state.selectedAddressType === 1; // 是否选择国内公司\n\n                    var isForeignCompany = _this.state.selectedCompanyType === 1; // 地址信息\n\n                    var addressInput = {\n                      workCityId: isForeignAddress ? null : location[1],\n                      // 城市id\n                      workCountryId: isForeignAddress ? foreignCountryId : localStorage.getItem('zhiwen_china_id'),\n                      // 如是中国城市, 获取中国id, 如不是则使用填写的国外id\n                      workProvinceId: isForeignAddress ? null : location[0] // 省份id\n\n                    };\n\n                    _Object$assign(input, addressInput); // 选择国内/国外公司, 清空相应的国外/国内公司字段\n\n\n                    if (isForeignCompany) {\n                      input.intentionCompanyName = null;\n                    } else {\n                      input.foreignCompany = null;\n                    } // 如果是更新信息, 传信息Id, 如果是创建信息, 传 cvID\n\n\n                    if (_JSON$stringify(_this.props.data) === '{}') {\n                      _Object$assign(input, {\n                        id: _this.props.cvId\n                      });\n                    } else {\n                      _Object$assign(input, {\n                        id: _this.props.data.id\n                      });\n                    } // 执行 mutation\n\n\n                    _this.props.updateData(_this.props.mutation, input, _this.afterUpdate);\n                  } else {\n                    _this.updating = false;\n                  }\n                });\n\n              case 5:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee);\n      }));\n\n      return function (_x) {\n        return _ref.apply(this, arguments);\n      };\n    }());\n\n    _defineProperty(_assertThisInitialized(_this), \"afterUpdate\", function () {\n      _this.props.closeEdit();\n\n      _this.updating = false;\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"componentDidMount\", function () {\n      // 数据回填\n      var _this$props$data = _this.props.data,\n          earliestEntryTime = _this$props$data.earliestEntryTime,\n          employmentType = _this$props$data.employmentType,\n          foreignCompany = _this$props$data.foreignCompany,\n          industries = _this$props$data.industries,\n          intentionCompany = _this$props$data.intentionCompany,\n          jobSeekingStatus = _this$props$data.jobSeekingStatus,\n          latestEntryTime = _this$props$data.latestEntryTime,\n          position = _this$props$data.position,\n          salaryMax = _this$props$data.salaryMax,\n          salaryMin = _this$props$data.salaryMin,\n          salaryType = _this$props$data.salaryType,\n          serviceLine = _this$props$data.serviceLine,\n          workCity = _this$props$data.workCity,\n          workCountry = _this$props$data.workCountry,\n          workDuration = _this$props$data.workDuration,\n          workProvince = _this$props$data.workProvince;\n      var data = {\n        earliestEntryTime: earliestEntryTime && moment(earliestEntryTime),\n        employmentType: employmentType && {\n          key: employmentType.id || '',\n          label: employmentType.name || ''\n        },\n        foreignCompany: foreignCompany,\n        industries: industries && industries[0] && industries[0].id,\n        intentionCompanyName: intentionCompany && intentionCompany.companyName,\n        jobSeekingStatusId: jobSeekingStatus && jobSeekingStatus.id,\n        latestEntryTime: latestEntryTime && moment(latestEntryTime),\n        position: position,\n        salaryMax: salaryMax,\n        salaryMin: salaryMin,\n        salaryTypeId: salaryType && salaryType.id,\n        serviceLine: serviceLine && [serviceLine.parent.id, serviceLine.id],\n        workDuration: workDuration\n      }; // 回填时判断是否隐藏可工作时长\n\n      _this.handleEmploymentTypeChange(data.employmentType);\n\n      if (_JSON$stringify(_this.props.data) !== '{}') {\n        // 处理城市信息\n        commonFunc.assignAddress(_assertThisInitialized(_this), [workCountry, workProvince, workCity], data); // 处理工作地点信息\n\n        if (intentionCompany) {\n          _this.setState({\n            selectedCompanyType: 0\n          });\n        }\n\n        if (foreignCompany) {\n          _this.setState({\n            selectedCompanyType: 1\n          });\n        } // 执行回填\n\n\n        _this.props.form.setFieldsValue(data);\n      }\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"getValue\", function (type, values) {\n      _this.props.form.setFieldsValue(_defineProperty({}, type, values));\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"radioGroupChange\", function (disableName, e) {\n      _this.setState(_defineProperty({}, disableName, e.target.value), function () {\n        if (disableName === 'selectedAddressType') {\n          _this.props.form.validateFields(['location'], {\n            force: true\n          }, function () {\n            return;\n          });\n        }\n\n        if (disableName === 'selectedCompanyType') {\n          _this.props.form.validateFields(['intentionCompanyName'], {\n            force: true\n          }, function () {\n            return;\n          });\n        }\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"handleEmploymentTypeChange\", function (value) {\n      if (value && value.label === '全职') {\n        _this.setState({\n          hideWorkDuration: true\n        });\n\n        return;\n      }\n\n      _this.setState({\n        hideWorkDuration: false\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"transformWorkDuration\", function (value) {\n      if (!value) {\n        return 1;\n      }\n\n      return Number(value);\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"checkHomeCity\", function (_rule, _value, callback) {\n      var getFieldValue = _this.props.form.getFieldValue;\n      var selectedAddressType = _this.state.selectedAddressType;\n      var location = getFieldValue('location');\n      var foreignCountryId = getFieldValue('foreignCountryId');\n\n      if (selectedAddressType === 0 && (!location || !location.length) || selectedAddressType === 1 && !foreignCountryId) {\n        callback('地点字段不可为空，请选填国内或国外地点');\n      }\n\n      callback();\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"validateCompany\", function (_rule, _value, callback) {\n      var getFieldValue = _this.props.form.getFieldValue;\n      var selectedCompanyType = _this.state.selectedCompanyType;\n      var foreignCompany = getFieldValue('foreignCompany');\n      var companyName = getFieldValue('intentionCompanyName');\n\n      if (selectedCompanyType === 0 && !companyName || selectedCompanyType === 1 && !foreignCompany) {\n        callback(\"\\u516C\\u53F8\\u5B57\\u6BB5\\u4E0D\\u53EF\\u4E3A\\u7A7A\\uFF0C\\u8BF7\\u9009\\u586B\\u56FD\\u5185\\u6216\\u56FD\\u5916\\u516C\\u53F8\");\n      }\n\n      callback();\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"disabledStartDate\", function (startValue) {\n      var getFieldValue = _this.props.form.getFieldValue;\n      var endValue = getFieldValue('latestEntryTime');\n\n      if (!startValue) {\n        return false;\n      }\n\n      if (!endValue) {\n        return startValue < moment().startOf('day') || startValue > moment(END_OF_THE_WORLD);\n      }\n\n      return startValue.startOf('day') > endValue.endOf('day') || startValue < moment().startOf('day') || startValue > moment(END_OF_THE_WORLD);\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"disabledEndDate\", function (endValue) {\n      var getFieldValue = _this.props.form.getFieldValue;\n      var startValue = getFieldValue('earliestEntryTime');\n\n      if (!endValue) {\n        return false;\n      }\n\n      if (!startValue) {\n        return endValue < moment().startOf('day') || endValue > moment(END_OF_THE_WORLD);\n      }\n\n      return endValue.endOf('day') < startValue.startOf('day') || endValue < moment().startOf('day') || endValue > moment(END_OF_THE_WORLD);\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"validateTime\", function (_rule, _value, callback) {\n      var getFieldValue = _this.props.form.getFieldValue;\n      var endAt = getFieldValue('latestEntryTime');\n      var startAt = getFieldValue('earliestEntryTime');\n\n      if (startAt && endAt && moment(endAt).endOf('day').isBefore(moment(startAt).startOf('day'))) {\n        callback(\"\\u6700\\u665A\\u53EF\\u5165\\u804C\\u65E5\\u671F\\u4E0D\\u80FD\\u65E9\\u4E8E\\u6700\\u65E9\\u53EF\\u5165\\u804C\\u65E5\\u671F\");\n      }\n\n      callback();\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"validateSalary\", function (_rule, _value, callback) {\n      var getFieldValue = _this.props.form.getFieldValue;\n      var salaryMax = getFieldValue('salaryMax');\n      var salaryMin = getFieldValue('salaryMin');\n\n      if (salaryMax && salaryMin && positiveIntegerReg.test(salaryMax) && positiveIntegerReg.test(salaryMin) && Number(salaryMin) > Number(salaryMax)) {\n        callback(\"\\u6700\\u9AD8\\u85AA\\u8D44\\u4E0D\\u80FD\\u5C0F\\u4E8E\\u6700\\u4F4E\\u85AA\\u8D44\");\n      }\n\n      callback();\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"validateDuration\", function (_rule, _value, callback) {\n      var getFieldValue = _this.props.form.getFieldValue;\n      var workDuration = getFieldValue('workDuration');\n\n      if (!Boolean(_this.state.hideWorkDuration) && !workDuration) {\n        callback(\"\\u6B64\\u5B57\\u6BB5\\u65E0\\u6CD5\\u4E3A\\u7A7A\");\n      }\n\n      if (!Boolean(_this.state.hideWorkDuration) && !positiveOneDigitDecimal.test(workDuration)) {\n        callback(\"\\u8BF7\\u8F93\\u5165\\u6B63\\u786E\\u683C\\u5F0F\\uFF0C\\u598212\\u62161.5\");\n      }\n\n      callback();\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"validateOtherField\", function (type, _rule, _value, callback) {\n      var validateFieldsAndScroll = _this.props.form.validateFieldsAndScroll;\n      validateFieldsAndScroll([type], {\n        force: true\n      }, function () {\n        return;\n      });\n      callback();\n    });\n\n    return _this;\n  }\n\n  _createClass(ModuleForm, [{\n    key: \"render\",\n    value: function render() {\n      var _this$props$form = this.props.form,\n          getFieldDecorator = _this$props$form.getFieldDecorator,\n          getFieldValue = _this$props$form.getFieldValue;\n      var selectedCompanyType = this.state.selectedCompanyType;\n      var selectedAddressType = this.state.selectedAddressType;\n      return React.createElement(_Form, {\n        onSubmit: this.handleSubmit,\n        style: FormStyle,\n        colon: false\n      }, React.createElement(_Row, {\n        gutter: 24\n      }, React.createElement(_Col, {\n        span: 16\n      }, React.createElement(_Form.Item, {\n        label: \"\\u5DE5\\u4F5C\\u5730\\u70B9\",\n        required: true\n      }, React.createElement(RadioGroup, {\n        style: RadioGroupStyle,\n        value: selectedAddressType,\n        onChange: this.radioGroupChange.bind(this, 'selectedAddressType')\n      }, React.createElement(_Col, {\n        span: 12\n      }, React.createElement(_Form.Item, {\n        label: \"\",\n        style: {\n          marginBottom: '0'\n        }\n      }, React.createElement(RadioInputWrapper, null, React.createElement(RadioLabelWrapper, null, React.createElement(_Radio, {\n        value: 0\n      }), React.createElement(\"span\", {\n        style: RadioLabelStyle\n      }, \"\\u56FD\\u5185\")), getFieldDecorator('location', {\n        rules: [{\n          required: Boolean(selectedAddressType === 0),\n          validator: this.checkHomeCity\n        }]\n      })(React.createElement(_Cascader, {\n        disabled: Boolean(selectedAddressType !== 0),\n        showSearch: true,\n        style: {\n          flex: 1\n        },\n        options: toCascadarOptions(JSON.parse(localStorage.getItem('zhiwen_province_city')), 2),\n        allowClear: false,\n        placeholder: \"\\u8BF7\\u9009\\u62E9\",\n        notFoundContent: \"\\u65E0\\u7ED3\\u679C\"\n      }))))), React.createElement(_Col, {\n        span: 12\n      }, React.createElement(_Form.Item, {\n        label: \"\",\n        style: {\n          marginBottom: '0',\n          marginLeft: '24px'\n        }\n      }, React.createElement(RadioInputWrapper, null, React.createElement(RadioLabelWrapper, null, React.createElement(_Radio, {\n        value: 1\n      }), React.createElement(\"span\", {\n        style: RadioLabelStyle\n      }, \"\\u56FD\\u5916\")), getFieldDecorator('foreignCountryId', {\n        rules: [{\n          required: Boolean(selectedAddressType === 1),\n          validator: this.validateOtherField.bind(this, 'location')\n        }]\n      })(React.createElement(_Select, {\n        showSearch: true,\n        disabled: Boolean(selectedAddressType !== 1),\n        style: {\n          flex: 1\n        },\n        filterOption: commonFunc.filterData,\n        placeholder: \"\\u4EC5\\u652F\\u6301\\u641C\\u7D22\\u56FD\\u5BB6\"\n      }, renderSelectOptions(JSON.parse(localStorage.getItem('zhiwen_foreign_country'))))))))))), React.createElement(_Col, {\n        span: 8\n      }, React.createElement(_Form.Item, {\n        label: \"\\u884C\\u4E1A\"\n      }, getFieldDecorator('industries', {\n        rules: noTxtRequireRule\n      })(React.createElement(ZhiWenSelect, {\n        type: \"zhiwen-profession\",\n        getValue: this.getValue.bind(this, 'industries')\n      }))))), React.createElement(_Row, {\n        gutter: 24\n      }, React.createElement(_Col, {\n        span: 16\n      }, React.createElement(_Form.Item, {\n        label: \"\\u516C\\u53F8\",\n        required: true\n      }, React.createElement(RadioGroup, {\n        style: RadioGroupStyle,\n        value: selectedCompanyType,\n        onChange: this.radioGroupChange.bind(this, 'selectedCompanyType')\n      }, React.createElement(_Col, {\n        span: 12\n      }, React.createElement(_Form.Item, {\n        label: \"\",\n        style: {\n          marginBottom: '0'\n        }\n      }, React.createElement(RadioInputWrapper, null, React.createElement(RadioLabelWrapper, null, React.createElement(_Radio, {\n        value: 0\n      }), React.createElement(\"span\", {\n        style: RadioLabelStyle\n      }, \"\\u56FD\\u5185\")), getFieldDecorator('intentionCompanyName', {\n        rules: [{\n          required: Boolean(selectedCompanyType === 0),\n          validator: this.validateCompany\n        }]\n      })(React.createElement(SelectCompany, {\n        disabled: selectedCompanyType !== 0,\n        setValue: getFieldValue('intentionCompanyName'),\n        getValue: this.getValue.bind(this, 'intentionCompanyName'),\n        style: {\n          maxWidth: '80%'\n        }\n      }))))), React.createElement(_Col, {\n        span: 12\n      }, React.createElement(_Form.Item, {\n        label: \"\",\n        style: {\n          marginBottom: '0',\n          marginLeft: '24px'\n        }\n      }, React.createElement(RadioInputWrapper, null, React.createElement(RadioLabelWrapper, null, React.createElement(_Radio, {\n        value: 1\n      }), React.createElement(\"span\", {\n        style: RadioLabelStyle\n      }, \"\\u56FD\\u5916\")), getFieldDecorator('foreignCompany', {\n        rules: [{\n          required: Boolean(selectedCompanyType === 1),\n          validator: this.validateOtherField.bind(this, 'intentionCompanyName')\n        }]\n      })(React.createElement(_Input, {\n        placeholder: \"\\u8BF7\\u8F93\\u5165\",\n        style: {\n          flex: 1\n        },\n        disabled: selectedCompanyType !== 1\n      })))))))), React.createElement(_Col, {\n        span: 8\n      }, React.createElement(_Form.Item, {\n        label: \"\\u4E1A\\u52A1\\u7EBF/\\u9886\\u57DF\"\n      }, getFieldDecorator('serviceLine', {\n        rules: noTxtRequireRule\n      })(React.createElement(ZhiWenCascader, {\n        type: \"line-of-business\",\n        getValue: this.getValue.bind(this, 'serviceLine')\n      }))))), React.createElement(_Row, {\n        gutter: 24\n      }, React.createElement(_Col, {\n        span: 8\n      }, React.createElement(_Form.Item, {\n        label: \"\\u804C\\u4F4D\"\n      }, getFieldDecorator('position', {\n        rules: requireRule\n      })(React.createElement(_Input, {\n        placeholder: '请输入职位全称'\n      })))), React.createElement(_Col, {\n        span: 8\n      }, React.createElement(_Form.Item, {\n        label: \"\\u5DE5\\u4F5C\\u5F62\\u5F0F\"\n      }, getFieldDecorator('employmentType', {\n        rules: noTxtRequireRule\n      })(React.createElement(_Select, {\n        labelInValue: true,\n        placeholder: SelectPlaceHolder,\n        onChange: this.handleEmploymentTypeChange\n      }, JSON.parse(localStorage.getItem('zhiwen_all_enum')).listEmploymentEnum.map(function (item, index) {\n        return React.createElement(_Select.Option, {\n          value: item.id,\n          \"data-key\": item.key,\n          key: index\n        }, item.name);\n      }))))), React.createElement(_Col, {\n        hidden: this.state.hideWorkDuration,\n        span: 8\n      }, React.createElement(_Row, null, React.createElement(_Col, {\n        span: 21\n      }, React.createElement(_Form.Item, {\n        label: \"\\u53EF\\u5DE5\\u4F5C\\u65F6\\u957F\",\n        required: true\n      }, getFieldDecorator('workDuration', {\n        rules: [{\n          validator: this.validateDuration\n        }]\n      })(React.createElement(_Input, {\n        style: {\n          width: '100%'\n        },\n        placeholder: '如半个月，输入0.5'\n      })))), React.createElement(_Col, {\n        span: 1,\n        offset: 1,\n        style: {\n          marginTop: '45px',\n          whiteSpace: 'nowrap'\n        }\n      }, \"\\u4E2A\\u6708\")))), React.createElement(_Row, {\n        gutter: 24\n      }, React.createElement(_Col, {\n        span: 8\n      }, React.createElement(_Form.Item, {\n        label: \"\\u6700\\u65E9\\u53EF\\u5165\\u804C\\u65E5\\u671F\"\n      }, getFieldDecorator('earliestEntryTime', {\n        rules: [].concat(_toConsumableArray(noTxtRequireRule), [{\n          validator: this.validateOtherField.bind(this, 'latestEntryTime')\n        }])\n      })(React.createElement(_DatePicker, {\n        disabledDate: this.disabledStartDate,\n        placeholder: \"\\u8BF7\\u9009\\u62E9\",\n        style: {\n          width: '100%'\n        },\n        locale: locale\n      })))), React.createElement(_Col, {\n        span: 8\n      }, React.createElement(_Form.Item, {\n        label: \"\\u6700\\u665A\\u53EF\\u5165\\u804C\\u65E5\\u671F\"\n      }, getFieldDecorator('latestEntryTime', {\n        rules: [].concat(_toConsumableArray(noTxtRequireRule), [{\n          validator: this.validateTime\n        }])\n      })(React.createElement(_DatePicker, {\n        disabledDate: this.disabledEndDate,\n        placeholder: \"\\u8BF7\\u9009\\u62E9\",\n        style: {\n          width: '100%'\n        },\n        locale: locale\n      })))), React.createElement(_Col, {\n        span: 8\n      }, React.createElement(_Form.Item, {\n        label: \"\\u8BA1\\u85AA\\u65B9\\u5F0F\"\n      }, getFieldDecorator('salaryTypeId', {\n        rules: noTxtRequireRule\n      })(React.createElement(ZhiWenSelect, {\n        type: \"salary-interval\",\n        getValue: this.getValue.bind(this, 'salaryTypeId')\n      }))))), React.createElement(_Row, {\n        gutter: 24\n      }, React.createElement(_Col, {\n        span: 8\n      }, React.createElement(_Form.Item, {\n        label: \"\\u85AA\\u916C\\u8303\\u56F4\",\n        required: true\n      }, React.createElement(_Row, null, React.createElement(_Col, {\n        span: 8\n      }, React.createElement(_Form.Item, {\n        label: \"\"\n      }, getFieldDecorator('salaryMin', {\n        rules: [{\n          message: '此字段无法为空',\n          required: true\n        }, {\n          validator: checkPositive\n        }, {\n          validator: this.validateSalary\n        }],\n        validateFirst: true\n      })(React.createElement(_Input, {\n        placeholder: '请输入数字',\n        style: {\n          width: '100%'\n        },\n        maxLength: 7\n      })))), React.createElement(_Col, {\n        span: 1,\n        offset: 1\n      }, \"\\u5143\"), React.createElement(_Col, {\n        span: 1,\n        offset: 1\n      }, \"\\u81F3\"), React.createElement(_Col, {\n        span: 8,\n        offset: 1\n      }, React.createElement(_Form.Item, {\n        label: \"\"\n      }, getFieldDecorator('salaryMax', {\n        rules: [{\n          message: '此字段无法为空',\n          required: true\n        }, {\n          validator: checkPositive\n        }, {\n          validator: this.validateOtherField.bind(this, 'salaryMin')\n        }],\n        validateFirst: true\n      })(React.createElement(_Input, {\n        placeholder: '请输入数字',\n        style: {\n          width: '100%'\n        },\n        maxLength: 7\n      })))), React.createElement(_Col, {\n        span: 1,\n        offset: 1\n      }, \"\\u5143\")))), React.createElement(_Col, {\n        span: 8\n      }, React.createElement(_Form.Item, {\n        label: \"\\u6C42\\u804C\\u72B6\\u6001\"\n      }, getFieldDecorator('jobSeekingStatusId', {\n        rules: noTxtRequireRule\n      })(React.createElement(ZhiWenSelect, {\n        type: \"job-seeking-status\",\n        getValue: this.getValue.bind(this, 'jobSeekingStatusId')\n      }))))), React.createElement(_Form.Item, {\n        labelCol: {\n          span: 12\n        }\n      }, React.createElement(_Button, {\n        onClick: this.props.cancel\n      }, \"\\u53D6\\u6D88\"), React.createElement(_Button, {\n        disabled: this.updating,\n        style: {\n          marginLeft: 20\n        },\n        type: \"primary\",\n        htmlType: \"submit\"\n      }, \"\\u4FDD\\u5B58\")));\n    }\n  }]);\n\n  return ModuleForm;\n}(React.Component);\n\nvar EditJobIntention = _Form.create()(ModuleForm);\n\nexport default EditJobIntention;","map":null,"metadata":{},"sourceType":"module"}