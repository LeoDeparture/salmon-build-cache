{"ast":null,"code":"import { format } from 'date-fns';\nimport React from 'react';\nimport InlineAccountInfo from '../../../../components/InlineAccountInfo';\nimport { PageGrid } from '../../../../components/PageLayout';\nimport { breakLine, checkEmpty, dateText, priceText } from '../../../../lib/commonJs';\nimport { LineWrapper } from '../../../questionBank/CSSComponents';\nimport { Item, ItemContent, ItemTitle } from '../../components/CSSComponents';\nimport { ReviewStatus } from '../../reviewService/components/ReviewListItem';\nimport { getArrayToString, getCityChangeToString, getMoneyType } from './FnConfig';\nimport InfoHeader from './InfoHeader';\nimport { MinorModuleInfo, ModuleInfo, PaperClip } from './ModuleInfo';\n\nvar Index = function Index(_ref) {\n  var JobServiceList = _ref.JobServiceList;\n  var jobBusinessJobRecommendationServiceConfig = JobServiceList.jobBusinessJobRecommendationServiceConfig;\n  var outputPossibility = jobBusinessJobRecommendationServiceConfig.outputPossibility,\n      deliverDate = jobBusinessJobRecommendationServiceConfig.deliverDate,\n      postIncome = jobBusinessJobRecommendationServiceConfig.postIncome,\n      reviewInnerRemarks = jobBusinessJobRecommendationServiceConfig.innerRemarks,\n      isReviewed = jobBusinessJobRecommendationServiceConfig.isReviewed,\n      reviewer = jobBusinessJobRecommendationServiceConfig.reviewer;\n  var _jobBusinessJobRecomm = jobBusinessJobRecommendationServiceConfig.jobRecommendationServiceInfos[0],\n      targetCityList = _jobBusinessJobRecomm.targetCityList,\n      targetForeignCityList = _jobBusinessJobRecomm.targetForeignCityList,\n      assessModelAttachments = _jobBusinessJobRecomm.assessModelAttachments,\n      targetLevel = _jobBusinessJobRecomm.targetLevel,\n      majorJobApplicationInfo = _jobBusinessJobRecomm.majorJobApplicationInfo,\n      minorJobApplicationInfos = _jobBusinessJobRecomm.minorJobApplicationInfos,\n      giftJobApplicationInfos = _jobBusinessJobRecomm.giftJobApplicationInfos,\n      innerRemarks = _jobBusinessJobRecomm.innerRemarks,\n      jobIntentionStartAt = _jobBusinessJobRecomm.jobIntentionStartAt;\n  var targetCompanyLevel = majorJobApplicationInfo.companyLevel.name;\n  var BasicInfo = [[{\n    title: '服务名称：',\n    content: jobBusinessJobRecommendationServiceConfig.name\n  }, {\n    title: '学员期待开始求职日期：',\n    content: jobIntentionStartAt ? format(jobIntentionStartAt, 'YYYY/MM/DD') : '- -'\n  }], [{\n    title: '目标地域范围：',\n    content: React.createElement(React.Fragment, null, targetCityList.length ? React.createElement(\"p\", null, getCityChangeToString(targetCityList, 'targetCity', 'name', '国内：')) : null, targetForeignCityList.length ? React.createElement(\"p\", null, getCityChangeToString(targetForeignCityList, 'targetForeignCity', 'name', '国外：')) : null)\n  }], [{\n    title: '对内备注：',\n    content: breakLine(innerRemarks) || '- -'\n  }]];\n  var RefundPlanComp = [[{\n    title: '退款方案：',\n    content: breakLine(jobBusinessJobRecommendationServiceConfig.refundPlan) || '- -'\n  }]];\n  var AssessModel = [[{\n    title: '模型附件：',\n    content: React.createElement(PaperClip, null, assessModelAttachments)\n  }], [{\n    title: '评估等级：',\n    content: targetLevel ? targetLevel.name : '- -'\n  }]];\n  var MajorCompanyJob = [[{\n    title: '所在行业：',\n    content: majorJobApplicationInfo.industry.name\n  }, {\n    title: '岗位性质：',\n    content: getArrayToString(majorJobApplicationInfo.jobCharacters)\n  }, {\n    title: '目标公司等级：',\n    content: \"\".concat(targetCompanyLevel, \"\\u7C7B\")\n  }], [{\n    title: '业务领域或行业：',\n    content: getArrayToString(majorJobApplicationInfo.companyDomains) || '- -'\n  }, {\n    title: '剔除公司：',\n    content: getArrayToString(majorJobApplicationInfo.exceptionCompanies) || '- -'\n  }, {\n    title: '职能线 / 业务线：',\n    content: getArrayToString(majorJobApplicationInfo.linesOfBusiness)\n  }], [{\n    title: '跨级投递方案：',\n    content: React.createElement(\"div\", null, majorJobApplicationInfo.priceDifferenceConfigs.length > 1 ? majorJobApplicationInfo.priceDifferenceConfigs.map(function (item, index) {\n      if (item.companyLevel.name === targetCompanyLevel) {\n        return null;\n      }\n\n      return React.createElement(\"p\", {\n        key: index\n      }, item.price >= 0 ? \"\\u83B7\\u5F97 \".concat(item.companyLevel.name, \" \\u7C7B\\u5C97\\u4F4D offer\\uFF0C\\u5219\\u8865\\u5DEE\\u4EF7 \").concat(getMoneyType(item.price), \"\\u5143\") : \"\\u83B7\\u5F97 \".concat(item.companyLevel.name, \" \\u7C7B\\u5C97\\u4F4D offer\\uFF0C\\u5219\\u9000\\u5DEE\\u4EF7 \").concat(getMoneyType(Math.abs(item.price)), \"\\u5143\"));\n    }) : '- -')\n  }]];\n  var gridContent = [[{\n    content: React.createElement(React.Fragment, null, React.createElement(InfoHeader, {\n      title: \"\\u670D\\u52A1\\u5BA1\\u6838\\u7ED3\\u679C\"\n    }), React.createElement(LineWrapper, null, React.createElement(Item, null, React.createElement(ItemTitle, null, \"\\u5BA1\\u6838\\u72B6\\u6001\\uFF1A\"), React.createElement(ItemContent, null, React.createElement(ReviewStatus, {\n      isReviewed: isReviewed\n    }))), React.createElement(Item, null, React.createElement(ItemTitle, null, \"\\u8F93\\u51FA\\u51E0\\u7387\\uFF1A\"), React.createElement(ItemContent, null, outputPossibility ? outputPossibility.name : '- -')), React.createElement(Item, null, React.createElement(ItemTitle, null, \"\\u9884\\u4F30\\u5F00\\u59CB\\u6295\\u9012\\u65E5\\u671F\\uFF1A\"), React.createElement(ItemContent, null, dateText(deliverDate)))), React.createElement(LineWrapper, null, React.createElement(Item, null, React.createElement(ItemTitle, null, \"\\u540E\\u7F6E\\u6536\\u5165\\uFF08CNY\\uFF09\\uFF1A\"), React.createElement(ItemContent, null, postIncome ? priceText(postIncome) : '- -')), React.createElement(Item, null, React.createElement(ItemTitle, null, \"\\u5BF9\\u5185\\u5907\\u6CE8\\uFF1A\"), React.createElement(ItemContent, null, checkEmpty(reviewInnerRemarks))), React.createElement(Item, null, React.createElement(ItemTitle, null, \"\\u5BA1\\u6838\\u4EBA\\uFF1A\"), React.createElement(ItemContent, null, reviewer ? React.createElement(InlineAccountInfo, {\n      account: reviewer.account\n    }) : '- -'))))\n  }], [{\n    span: 17,\n    content: React.createElement(ModuleInfo, {\n      title: \"\\u57FA\\u672C\\u4FE1\\u606F\",\n      content: BasicInfo\n    })\n  }, {\n    span: 7,\n    content: React.createElement(ModuleInfo, {\n      title: \"\\u9000\\u6B3E\\u65B9\\u6848\",\n      subhead: \"\\u9002\\u7528\\u4E8E\\u4E3B\\u7533\\u3001\\u8F85\\u7533\",\n      content: RefundPlanComp\n    })\n  }], [{\n    content: React.createElement(ModuleInfo, {\n      title: \"\\u8BC4\\u4F30\\u6A21\\u578B\",\n      content: AssessModel\n    })\n  }], [{\n    content: React.createElement(ModuleInfo, {\n      title: \"\\u4E3B\\u7533\\u516C\\u53F8\\u53CA\\u5C97\\u4F4D\",\n      content: MajorCompanyJob\n    })\n  }]];\n  var MinorCompanyJob = [];\n\n  if (minorJobApplicationInfos.length) {\n    gridContent.push([{\n      content: React.createElement(MinorModuleInfo, {\n        title: \"\\u8DE8\\u884C\\u4E1A\\u5C97\\u4F4D\\u4FE1\\u606F\",\n        content: MinorCompanyJob\n      })\n    }]);\n    minorJobApplicationInfos.map(function (item, index) {\n      MinorCompanyJob.push({\n        title: \"\\u5C97\\u4F4D\\u4FE1\\u606F\".concat(index + 1),\n        showLine: minorJobApplicationInfos.length - index !== 1,\n        content: [[{\n          title: '所在行业：',\n          content: item.industry.name\n        }, {\n          title: '岗位性质：',\n          content: getArrayToString(item.jobCharacters)\n        }, {\n          title: '目标公司等级：',\n          content: \"\".concat(item.companyLevel.name, \"\\u7C7B\")\n        }], [{\n          title: '业务领域或行业：',\n          content: getArrayToString(item.companyDomains) || '- -'\n        }, {\n          title: '剔除公司：',\n          content: getArrayToString(item.exceptionCompanies) || '- -'\n        }, {\n          title: '职能线 / 业务线：',\n          content: getArrayToString(item.linesOfBusiness)\n        }], [{\n          title: '跨行业投递差价(CNY)：',\n          content: item.spanIndustryDifferentPrice ? getMoneyType(item.spanIndustryDifferentPrice) : '- -'\n        }, {\n          title: '跨行业投递差价是否本次支付(CNY)：',\n          content: item.isSpanIndustryDifferentPricePayAtOnce === null ? '- -' : item.isSpanIndustryDifferentPricePayAtOnce ? '计入本次应付总价' : '获得offer后支付'\n        }, {\n          title: '',\n          content: ''\n        }]]\n      });\n    });\n  }\n\n  var giftJobService = [];\n\n  if (giftJobApplicationInfos.length) {\n    gridContent.push([{\n      content: React.createElement(MinorModuleInfo, {\n        title: \"\\u8D60\\u9001\\u6C42\\u804C\\u670D\\u52A1\",\n        content: giftJobService\n      })\n    }]);\n    giftJobApplicationInfos.map(function (item, index) {\n      giftJobService.push({\n        title: \"\\u8D60\\u9001\\u6C42\\u804C\\u4FE1\\u606F\".concat(index + 1),\n        showLine: giftJobApplicationInfos.length - index !== 1,\n        content: [[{\n          title: '岗位性质：',\n          content: getArrayToString(item.jobCharacters)\n        }, {\n          title: '工作方式：',\n          content: getArrayToString(item.workingStyles)\n        }, {\n          title: '所在行业：',\n          content: item.industry.name\n        }], [{\n          title: '目标公司等级：',\n          content: \"\".concat(item.companyLevel.name, \"\\u7C7B\")\n        }, {\n          title: '业务领域或行业：',\n          content: getArrayToString(item.companyDomains) || '- -'\n        }, {\n          title: '',\n          content: ''\n        }]]\n      });\n    });\n  }\n\n  return React.createElement(PageGrid, {\n    grid: gridContent\n  });\n};\n\nexport default Index;","map":null,"metadata":{},"sourceType":"module"}