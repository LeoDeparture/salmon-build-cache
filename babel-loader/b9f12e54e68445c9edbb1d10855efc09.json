{"ast":null,"code":"import \"antd/lib/button/style\";\nimport _Button from \"antd/lib/button\";\nimport \"antd/lib/form/style\";\nimport _Form from \"antd/lib/form\";\nimport _classCallCheck from \"@babel/runtime-corejs2/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime-corejs2/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime-corejs2/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime-corejs2/helpers/esm/getPrototypeOf\";\nimport _assertThisInitialized from \"@babel/runtime-corejs2/helpers/esm/assertThisInitialized\";\nimport _inherits from \"@babel/runtime-corejs2/helpers/esm/inherits\";\nimport _defineProperty from \"@babel/runtime-corejs2/helpers/esm/defineProperty\";\nimport \"antd/lib/input/style\";\nimport _Input from \"antd/lib/input\";\nimport React from 'react';\nimport styled from 'styled-components';\nimport { noNegativeIntegerReg } from '../../../../lib/regexp';\nimport { TemplateContext } from '../../containers/Contexts';\nimport { ButtonWrapperStyle, ChildTitle, FormItemBodyWrapper, FormItemSubtitle, FormItemTitle, FormStyle, HiddenStyle, RequiredFormItemTitle } from '../RootComponent';\nvar TextArea = _Input.TextArea;\n\nvar ModuleForm =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(ModuleForm, _React$Component);\n\n  function ModuleForm() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, ModuleForm);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(ModuleForm)).call.apply(_getPrototypeOf2, [this].concat(args)));\n\n    _defineProperty(_assertThisInitialized(_this), \"onClickNextStep\", function () {\n      _this.props.form.validateFieldsAndScroll({\n        force: true\n      }, function (err, fieldsValue) {\n        if (!err) {\n          var hour = fieldsValue.hour,\n              minute = fieldsValue.minute,\n              note = fieldsValue.note;\n          var expiresInMinutes = Number(hour) * 60 + Number(minute);\n\n          _this.props.assignVariables({\n            expiresInMinutes: expiresInMinutes,\n            note: note\n          });\n\n          _this.props.toNextStep();\n        }\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"checkTime\", function (_rule, value, callback) {\n      var getFieldValue = _this.props.form.getFieldValue;\n      var hour = Number(getFieldValue('hour'));\n      var minute = Number(getFieldValue('minute'));\n\n      if (!hour && hour !== 0) {\n        callback('请输入小时');\n      }\n\n      if (!noNegativeIntegerReg.test(value)) {\n        callback('请输入整数');\n      }\n\n      if (hour < 0 || hour > 23) {\n        callback('请输入0-23的小时数');\n      }\n\n      if (minute < 0 || minute > 59) {\n        callback('请输入0-59的分钟数');\n      }\n\n      if ((hour || hour === 0) && (minute || minute === 0)) {\n        var total = hour * 60 + minute;\n\n        if (total > 23 * 60 + 59) {\n          callback('不得高于23小时59分钟');\n        }\n\n        if (total < 15) {\n          callback('不得低于15分钟');\n        }\n      }\n\n      callback();\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"checkMinute\", function (_rule, value, callback) {\n      if (!value && value !== 0) {\n        callback('请输入分钟');\n      }\n\n      if (!noNegativeIntegerReg.test(value)) {\n        callback('请输入整数');\n      }\n\n      _this.props.form.validateFieldsAndScroll(['hour'], {\n        force: true\n      }, function () {\n        return;\n      });\n\n      callback();\n    });\n\n    return _this;\n  }\n\n  _createClass(ModuleForm, [{\n    key: \"render\",\n    value: function render() {\n      var getFieldDecorator = this.props.form.getFieldDecorator;\n      return React.createElement(Wrapper, {\n        style: this.props.hidden ? HiddenStyle : {}\n      }, React.createElement(ChildTitle, null, \"\\u8BF7\\u8BBE\\u7F6E\\u534F\\u8BAE\\u57FA\\u7840\\u4FE1\\u606F\"), React.createElement(_Form, {\n        style: FormStyle\n      }, React.createElement(_Form.Item, null, React.createElement(FormItemTitle, null, \"\\u534F\\u8BAE\\u540D\\u79F0\"), React.createElement(FormItemBodyWrapper, null, React.createElement(TemplateContext.Consumer, null, function (template) {\n        return React.createElement(\"span\", null, \"\\u804C\\u95EE \", template.name, \"\\u670D\\u52A1\\u534F\\u8BAE\");\n      }))), React.createElement(_Form.Item, null, React.createElement(RequiredFormItemTitle, null, \"\\u7B7E\\u7F72\\u622A\\u6B62\\u65F6\\u95F4\"), React.createElement(FormItemSubtitle, null, \"0\\u5C0F\\u65F615\\u5206\\u949F\\u523023\\u5C0F\\u65F659\\u5206\\u949F\\u4E4B\\u5185\"), React.createElement(FormItemBodyWrapper, null, React.createElement(\"span\", null, \"\\u901A\\u8FC7\\u5BA1\\u6838\\u540E\"), React.createElement(_Form.Item, {\n        style: InlineFormItemStyle\n      }, getFieldDecorator('hour', {\n        rules: [{\n          validator: this.checkTime\n        }],\n        validateFirst: true\n      })(React.createElement(_Input, {\n        style: shortInputStyle,\n        placeholder: \"0 ~ 23\"\n      })), React.createElement(\"span\", {\n        style: {\n          marginRight: '16px'\n        }\n      }, \"\\u5C0F\\u65F6\")), React.createElement(_Form.Item, {\n        style: InlineFormItemStyle\n      }, getFieldDecorator('minute', {\n        rules: [{\n          validator: this.checkMinute\n        }],\n        validateFirst: true\n      })(React.createElement(_Input, {\n        style: shortInputStyle,\n        placeholder: \"0 ~ 59\"\n      })), React.createElement(\"span\", null, \"\\u5206\\u949F\")))), React.createElement(_Form.Item, null, React.createElement(FormItemTitle, null, \"\\u5907\\u6CE8\"), React.createElement(FormItemSubtitle, null, \"\\u4EC5\\u5BF9\\u5185\\u53EF\\u89C1\"), React.createElement(FormItemBodyWrapper, null, getFieldDecorator('note')(React.createElement(TextArea, {\n        placeholder: \"\\u8BF7\\u8F93\\u5165\",\n        autoSize: {\n          minRows: 3,\n          maxRows: 3\n        }\n      })))), React.createElement(_Form.Item, {\n        style: ButtonWrapperStyle\n      }, React.createElement(_Button, {\n        onClick: this.onClickNextStep,\n        type: \"primary\"\n      }, \"\\u4E0B\\u4E00\\u6B65\"))));\n    }\n  }]);\n\n  return ModuleForm;\n}(React.Component);\n\nvar BasicInfo = _Form.create()(ModuleForm);\n\nexport default BasicInfo;\nvar shortInputStyle = {\n  width: '90px',\n  margin: '0 8px'\n};\nvar InlineFormItemStyle = {\n  display: 'inline-block'\n};\nvar Wrapper = styled.div.withConfig({\n  displayName: \"BasicInfo__Wrapper\",\n  componentId: \"sc-1jh1yzf-0\"\n})([\"position:relative;\"]);","map":null,"metadata":{},"sourceType":"module"}