{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime-corejs2/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime-corejs2/helpers/esm/asyncToGenerator\";\nimport _objectSpread from \"@babel/runtime-corejs2/helpers/esm/objectSpread\";\nimport \"antd/lib/message/style\";\nimport _message from \"antd/lib/message\";\nimport _classCallCheck from \"@babel/runtime-corejs2/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime-corejs2/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime-corejs2/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime-corejs2/helpers/esm/getPrototypeOf\";\nimport _assertThisInitialized from \"@babel/runtime-corejs2/helpers/esm/assertThisInitialized\";\nimport _inherits from \"@babel/runtime-corejs2/helpers/esm/inherits\";\nimport _defineProperty from \"@babel/runtime-corejs2/helpers/esm/defineProperty\";\nimport Router from 'next/router';\nimport React from 'react';\nimport { errMessage } from '../../../../lib/commonJs';\nimport CONFIG from '../../../../lib/config';\nimport FolderDetail from '../../components/folders/FolderDetail';\nimport { itemsPerPage } from '../FileListContainer';\nimport { ListAllFoldersInput } from '../FolderListContainer';\nimport ListAllFolders, { query } from '../QueryListAllFolders';\nimport { QueryListFolderFileLinks } from '../QueryListFileLinks';\nimport { MutationAddHandlesToFolder } from './MutationAddHandlesToFolder';\nimport { MutationDeleteFolder } from './MutationDeleteFolder';\nimport { MutationUpdateFolder } from './MutationUpdateFolder';\nimport { QuerySearchAccount } from './QuerySearchAccount';\n\nvar FolderDetailContainer =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(FolderDetailContainer, _React$Component);\n\n  function FolderDetailContainer() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, FolderDetailContainer);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(FolderDetailContainer)).call.apply(_getPrototypeOf2, [this].concat(args)));\n\n    _defineProperty(_assertThisInitialized(_this), \"folderId\", Router.query.id);\n\n    _defineProperty(_assertThisInitialized(_this), \"getFolderDataByIdInput\", {\n      input: {\n        first: 1,\n        where: {\n          id: _this.folderId\n        }\n      }\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"goBack\", function () {\n      Router.back();\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"uploadFile\", function (handles) {\n      _message.loading(CONFIG.txt.folder.upload.loading, 0);\n\n      var ListFolderFileLinksInput = {\n        input: {\n          first: itemsPerPage,\n          where: {\n            folder: {\n              id: _this.folderId\n            }\n          }\n        }\n      };\n\n      _this.client.mutate({\n        mutation: MutationAddHandlesToFolder,\n        variables: {\n          input: {\n            folderId: _this.folderId,\n            handles: handles\n          }\n        },\n        // 刷新文件列表\n        refetchQueries: [{\n          query: QueryListFolderFileLinks,\n          variables: ListFolderFileLinksInput\n        }]\n      }).then(function (result) {\n        if (result.data) {\n          _message.destroy();\n\n          _message.success(CONFIG.txt.folder.upload.success);\n        }\n      }).catch(function (error) {\n        _message.destroy();\n\n        errMessage(error);\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"deleteFolder\", function (success, complete) {\n      _this.client.mutate({\n        mutation: MutationDeleteFolder,\n        variables: {\n          input: {\n            id: _this.folderId\n          }\n        },\n        // 刷新列表\n        refetchQueries: [{\n          query: query,\n          variables: ListAllFoldersInput\n        }]\n      }).then(function (result) {\n        if (result.data) {\n          success();\n          complete();\n\n          _message.success(CONFIG.txt.folder.delete.success, _this.goBack);\n        }\n      }).catch(function (error) {\n        errMessage(error);\n        complete();\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"updateFolder\", function (variables, type, complete, success) {\n      _this.client.mutate({\n        mutation: MutationUpdateFolder,\n        variables: {\n          input: _objectSpread({\n            id: _this.folderId\n          }, variables)\n        },\n        // 更新文件夹数据\n        refetchQueries: [{\n          query: query,\n          variables: _this.getFolderDataByIdInput\n        }]\n      }).then(function (result) {\n        if (result.data) {\n          if (type === 'editSharer') {\n            _message.success(CONFIG.txt.folder.editSharer.success);\n          }\n\n          if (type === 'rename') {\n            _message.success(CONFIG.txt.folder.rename.success);\n          }\n\n          if (success) {\n            success();\n          }\n\n          complete();\n        }\n      }).catch(function (error) {\n        errMessage(error);\n        complete();\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"searchAccount\",\n    /*#__PURE__*/\n    function () {\n      var _ref = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee(email) {\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                if (email) {\n                  _context.next = 2;\n                  break;\n                }\n\n                return _context.abrupt(\"return\", null);\n\n              case 2:\n                _context.prev = 2;\n                _context.next = 5;\n                return _this.client.query({\n                  query: QuerySearchAccount,\n                  variables: {\n                    input: {\n                      email: email\n                    }\n                  }\n                });\n\n              case 5:\n                return _context.abrupt(\"return\", _context.sent);\n\n              case 8:\n                _context.prev = 8;\n                _context.t0 = _context[\"catch\"](2);\n                return _context.abrupt(\"return\", errMessage(_context.t0));\n\n              case 11:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, null, [[2, 8]]);\n      }));\n\n      return function (_x) {\n        return _ref.apply(this, arguments);\n      };\n    }());\n\n    return _this;\n  }\n\n  _createClass(FolderDetailContainer, [{\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      return React.createElement(ListAllFolders, {\n        query: query,\n        variables: this.getFolderDataByIdInput\n      }, function (_ref2) {\n        var data = _ref2.data,\n            loading = _ref2.loading,\n            error = _ref2.error,\n            client = _ref2.client;\n\n        if (loading) {\n          return null;\n        }\n\n        if (error) {\n          errMessage(error);\n          return null;\n        }\n\n        _this2.client = client;\n        var edges = data.listAllFoldersWithPagination.edges; // 如果没有访问该文件夹的权限\n\n        if (edges.length === 0) {\n          _message.warning(CONFIG.txt.error);\n\n          Router.push('/file-center');\n          return null;\n        }\n\n        var folderData = edges[0].node;\n        var isMyfolder = Boolean(folderData.owner.person.id === localStorage.getItem('zhiwen_person_id'));\n        return React.createElement(FolderDetail, {\n          folderData: folderData,\n          isMyFolder: isMyfolder,\n          folderId: _this2.folderId,\n          uploadFile: _this2.uploadFile,\n          deleteFolder: _this2.deleteFolder,\n          updateFolder: _this2.updateFolder,\n          searchAccount: _this2.searchAccount\n        });\n      });\n    }\n  }]);\n\n  return FolderDetailContainer;\n}(React.Component);\n\nexport default FolderDetailContainer;","map":null,"metadata":{},"sourceType":"module"}