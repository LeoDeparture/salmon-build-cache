{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime-corejs2/regenerator\";\nimport \"antd/lib/message/style\";\nimport _message from \"antd/lib/message\";\nimport _asyncToGenerator from \"@babel/runtime-corejs2/helpers/esm/asyncToGenerator\";\nimport _classCallCheck from \"@babel/runtime-corejs2/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime-corejs2/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime-corejs2/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime-corejs2/helpers/esm/getPrototypeOf\";\nimport _assertThisInitialized from \"@babel/runtime-corejs2/helpers/esm/assertThisInitialized\";\nimport _inherits from \"@babel/runtime-corejs2/helpers/esm/inherits\";\nimport _defineProperty from \"@babel/runtime-corejs2/helpers/esm/defineProperty\";\nimport Router from 'next/router';\nimport React from 'react';\nimport Loading from '../../../../components/Loading';\nimport { SectionDetailContent } from '../components/SectionDetailContent';\nimport { GetSectionByIdQuery, getSectionByIdQuery } from './GetSectionByIdQuery';\nimport { listSections } from './ListSectionsQuery';\nimport { removeSectionMutation } from './StatusMutation';\n\nvar GetSectionByIdQueryContainer =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(GetSectionByIdQueryContainer, _React$Component);\n\n  function GetSectionByIdQueryContainer() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, GetSectionByIdQueryContainer);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(GetSectionByIdQueryContainer)).call.apply(_getPrototypeOf2, [this].concat(args)));\n\n    _defineProperty(_assertThisInitialized(_this), \"state\", {\n      id: ''\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"removeSectionMutation\",\n    /*#__PURE__*/\n    function () {\n      var _ref = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee(id) {\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                _context.next = 2;\n                return _this.client.mutate({\n                  mutation: removeSectionMutation,\n                  update: function update(cache, _) {\n                    var listCache = cache.readQuery({\n                      query: listSections,\n                      variables: {\n                        input: {\n                          where: {\n                            isDeleted: false\n                          }\n                        }\n                      }\n                    });\n                    var newData = listCache.listSections.filter(function (record) {\n                      return record.id !== id;\n                    });\n                    listCache.listSections = newData;\n                    cache.writeQuery({\n                      data: {\n                        listSections: listCache.listSections\n                      },\n                      query: listSections,\n                      variables: {\n                        input: {\n                          where: {\n                            isDeleted: false\n                          }\n                        }\n                      }\n                    });\n                  },\n                  variables: {\n                    input: {\n                      id: id\n                    }\n                  }\n                }).then(function (_) {\n                  _message.success('已成功移除此小节');\n\n                  Router.back();\n                }).catch(function (_) {\n                  return _message.error('小节移除失败，请检查网络并重试');\n                });\n\n              case 2:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee);\n      }));\n\n      return function (_x) {\n        return _ref.apply(this, arguments);\n      };\n    }());\n\n    _defineProperty(_assertThisInitialized(_this), \"componentDidMount\", function () {\n      _this.setState({\n        id: _this.props.id\n      });\n    });\n\n    return _this;\n  }\n\n  _createClass(GetSectionByIdQueryContainer, [{\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      return React.createElement(GetSectionByIdQuery, {\n        query: getSectionByIdQuery,\n        variables: {\n          input: {\n            id: this.state.id\n          }\n        }\n      }, function (_ref2) {\n        var data = _ref2.data,\n            client = _ref2.client,\n            loading = _ref2.loading,\n            error = _ref2.error;\n        _this2.client = client;\n\n        if (loading) {\n          return React.createElement(Loading, null);\n        }\n\n        if (error) {\n          return null;\n        }\n\n        if (data.getSectionById) {\n          return React.createElement(SectionDetailContent, {\n            switchPage: _this2.props.switchPage,\n            setCurrentSection: _this2.props.setCurrentSection,\n            removeMutation: _this2.removeSectionMutation,\n            data: data\n          });\n        }\n\n        return null;\n      });\n    }\n  }]);\n\n  return GetSectionByIdQueryContainer;\n}(React.Component);\n\nexport { GetSectionByIdQueryContainer };","map":null,"metadata":{},"sourceType":"module"}