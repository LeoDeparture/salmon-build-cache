{"ast":null,"code":"import \"antd/lib/button/style\";\nimport _Button from \"antd/lib/button\";\nimport \"antd/lib/popover/style\";\nimport _Popover from \"antd/lib/popover\";\nimport \"antd/lib/icon/style\";\nimport _Icon from \"antd/lib/icon\";\nimport \"antd/lib/form/style\";\nimport _Form from \"antd/lib/form\";\nimport \"antd/lib/input/style\";\nimport _Input from \"antd/lib/input\";\nimport \"antd/lib/badge/style\";\nimport _Badge from \"antd/lib/badge\";\nimport \"antd/lib/message/style\";\nimport _message from \"antd/lib/message\";\nimport _regeneratorRuntime from \"@babel/runtime-corejs2/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime-corejs2/helpers/esm/asyncToGenerator\";\nimport _JSON$stringify from \"@babel/runtime-corejs2/core-js/json/stringify\";\nimport _classCallCheck from \"@babel/runtime-corejs2/helpers/esm/classCallCheck\";\nimport _possibleConstructorReturn from \"@babel/runtime-corejs2/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime-corejs2/helpers/esm/getPrototypeOf\";\nimport _assertThisInitialized from \"@babel/runtime-corejs2/helpers/esm/assertThisInitialized\";\nimport _inherits from \"@babel/runtime-corejs2/helpers/esm/inherits\";\nimport _defineProperty from \"@babel/runtime-corejs2/helpers/esm/defineProperty\";\nimport React from 'react';\nimport styled from 'styled-components';\nimport FilePicker from '../../../../components/FilePicker';\nimport SelectTutors from '../../../../components/SelectComponents/SelectTutor';\nimport { AvatarImage } from '../../../privateCourse/privateCourseAppointmentDetails/components/PrivateCourseAppointmentDetailsComponents';\nimport { TitleDiv, WarpContent } from '../../commonCss';\nimport { DEFAULT_AVATAR } from '../../subscriptionConstants';\nexport var FlexStartDiv = styled.div.withConfig({\n  displayName: \"CreateSectionContent__FlexStartDiv\",\n  componentId: \"sc-1wwestr-0\"\n})([\"display:flex;justify-content:start;\"]);\nvar TitleP = styled.div.withConfig({\n  displayName: \"CreateSectionContent__TitleP\",\n  componentId: \"sc-1wwestr-1\"\n})([\"margin-right:1px;font-size:14px;line-height:24px;opacity:0.5;\"]);\nvar inputFieldRule = [{\n  message: '此字段无法为空',\n  required: true,\n  whitespace: true\n}, {\n  max: 500,\n  message: '超过输入长度上限'\n}];\n\nvar ModuleForm =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(ModuleForm, _React$Component);\n\n  function ModuleForm() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, ModuleForm);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(ModuleForm)).call.apply(_getPrototypeOf2, [this].concat(args)));\n\n    _defineProperty(_assertThisInitialized(_this), \"setFieldsValue\", _this.props.form.setFieldsValue);\n\n    _defineProperty(_assertThisInitialized(_this), \"state\", {\n      mediaFile: undefined,\n      attachmentFile: [],\n      tutorDescriptions: [],\n      loading: false\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"handleSubmit\", function (e) {\n      e.preventDefault();\n\n      var tutorDescriptionData = _this.state.tutorDescriptions.map(function (td) {\n        return td.tutor ? {\n          tutorId: td.tutor.id,\n          name: td.tutor.nickname,\n          selfIntroduction: td.description\n        } : undefined;\n      });\n\n      var mediafileField = {\n        mediaFileDescription: _this.state.mediaFile ? _JSON$stringify(_this.state.mediaFile) : undefined\n      };\n\n      _this.props.form.setFieldsValue(mediafileField);\n\n      _this.props.form.validateFieldsAndScroll(\n      /*#__PURE__*/\n      function () {\n        var _ref = _asyncToGenerator(\n        /*#__PURE__*/\n        _regeneratorRuntime.mark(function _callee(err, fieldsValue) {\n          var input;\n          return _regeneratorRuntime.wrap(function _callee$(_context) {\n            while (1) {\n              switch (_context.prev = _context.next) {\n                case 0:\n                  _this.setState({\n                    loading: true\n                  });\n\n                  if (!err) {\n                    input = {\n                      name: fieldsValue.name,\n                      description: fieldsValue.description ? fieldsValue.description : '',\n                      chapterId: _this.props.chapterId,\n                      mediaFileDescription: _this.state.mediaFile,\n                      attachmentIds: _this.state.attachmentFile.map(function (a) {\n                        return {\n                          id: a.id\n                        };\n                      }),\n                      tutorDescriptions: tutorDescriptionData\n                    };\n\n                    _this.props.createData({\n                      input: input\n                    }).then(function (_) {\n                      _this.setState({\n                        loading: false\n                      });\n                    }).catch(function (_) {\n                      _this.setState({\n                        loading: false\n                      });\n                    });\n                  } else {\n                    _this.setState({\n                      loading: false\n                    });\n                  }\n\n                case 2:\n                case \"end\":\n                  return _context.stop();\n              }\n            }\n          }, _callee);\n        }));\n\n        return function (_x, _x2) {\n          return _ref.apply(this, arguments);\n        };\n      }());\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"addTutor\", function () {\n      var newState = _this.state.tutorDescriptions;\n      newState.push({\n        id: ''\n      });\n\n      _this.setState({\n        tutorDescriptions: newState\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"remove\", function (k) {\n      var newState = _this.state.tutorDescriptions.filter(function (_, index) {\n        return index !== k;\n      });\n\n      _this.setState({\n        tutorDescriptions: newState\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"onRef\", function (prop, child) {\n      if (prop === 'media') {\n        _this.mediaFile = child;\n      }\n\n      if (prop === 'attachment') {\n        _this.attachmentFile = child;\n      }\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"getFile\", function (type, fileLinks) {\n      if (type === 'media') {\n        var theFile = fileLinks[0];\n\n        if (theFile) {\n          _this.setState({\n            mediaFile: {\n              fileName: theFile.file.filename,\n              fileDescription: '',\n              fileLinkId: theFile.id\n            }\n          });\n\n          _this.setFieldsValue({\n            mediaFileDescription: fileLinks[0].file.transformedFile.url\n          });\n        }\n      }\n\n      if (type === 'attachment') {\n        var prevState = _this.state.attachmentFile;\n        var prevAttaIds = prevState.map(function (a) {\n          return a.id;\n        });\n\n        _this.setState({\n          attachmentFile: prevState.concat(fileLinks.filter(function (fl) {\n            return !prevAttaIds.includes(fl.id);\n          }).map(function (fl) {\n            return {\n              id: fl.id,\n              name: fl.file.filename\n            };\n          }))\n        });\n      }\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"onClickBtn\", function (type) {\n      if (type === 'media') {\n        _this.mediaFile.showPop();\n      }\n\n      if (type === 'attachment') {\n        _this.attachmentFile.showPop();\n      }\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"onSuccess\", function (result) {\n      _message.success(result);\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"onError\", function () {\n      _message.error('上传失败，请重新操作');\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"getValue\", function (key, dataJson) {\n      var newData = _this.state.tutorDescriptions;\n      newData[key] = {\n        tutor: dataJson\n      };\n\n      _this.setState({\n        tutorData: newData\n      });\n\n      _this.setFieldsValue(_defineProperty({}, \"tutor[\".concat(key, \"]\"), dataJson.id));\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"tutorBox\", function (data) {\n      return React.createElement(\"div\", {\n        style: {\n          padding: '21px 14px',\n          display: 'flex',\n          border: '1px',\n          borderRadius: '4px',\n          borderStyle: 'solid',\n          borderColor: '#D8D8D8'\n        }\n      }, React.createElement(AvatarImage, {\n        style: data.avatar ? {\n          width: '48px',\n          height: '48px',\n          margin: '10px',\n          flexShrink: 0,\n          backgroundImage: \"url(\".concat(DEFAULT_AVATAR, \")\")\n        } : {\n          width: '48px',\n          height: '48px',\n          margin: '10px',\n          flexShrink: 0,\n          backgroundImage: \"url(\".concat(DEFAULT_AVATAR, \")\"),\n          borderStyle: 'solid',\n          borderWidth: 'thin',\n          borderColor: '#D8D8D8'\n        },\n        src: data.avatar ? data.avatar : DEFAULT_AVATAR\n      }), React.createElement(\"div\", null, React.createElement(FlexStartDiv, null, React.createElement(\"div\", null, data ? data.nickname : ''), React.createElement(\"div\", {\n        style: {\n          marginLeft: '14px'\n        }\n      }, React.createElement(_Badge, {\n        status: data ? data.inCollaboration ? 'success' : 'default' : 'default'\n      })), React.createElement(\"div\", null, data ? data.inCollaboration ? '正常合作' : '停止合作' : '停止合作')), React.createElement(FlexStartDiv, null, React.createElement(TitleP, null, \"ID\\uFF1A\"), React.createElement(TitleP, null, data ? data.tutorNo : '')), React.createElement(FlexStartDiv, null, React.createElement(TitleP, {\n        style: {\n          flexShrink: 0\n        }\n      }, \"\\u6700\\u8FD1\\u4E00\\u6B21\\u5DE5\\u4F5C\\u4F01\\u4E1A\\uFF1A\"), React.createElement(TitleP, null, data.lastWorkExperience ? data.lastWorkExperience.foreignCompany ? data.lastWorkExperience.foreignCompany : data.lastWorkExperience.company ? data.lastWorkExperience.company.companyName : '- -' : '- -'))));\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"deselect\", function (aid) {\n      var afs = _this.state.attachmentFile.filter(function (af) {\n        return af.id !== aid;\n      });\n\n      _this.setState({\n        attachmentFile: afs\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"onTutorDescChange\", function (index, value) {\n      var newState = _this.state.tutorDescriptions;\n      newState[index].description = value.target.value;\n\n      _this.setState({\n        tutorDescriptions: newState\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"render\", function () {\n      var getFieldDecorator = _this.props.form.getFieldDecorator;\n      var formItems = _this.state.tutorDescriptions ? _this.state.tutorDescriptions.map(function (data, index) {\n        return React.createElement(\"div\", {\n          key: index\n        }, React.createElement(\"h4\", null, React.createElement(\"span\", {\n          style: {\n            color: '#D8D8D8'\n          }\n        }, \"\\u5BFC\\u5E08\".concat(index + 1)), React.createElement(\"a\", {\n          style: {\n            float: 'right',\n            color: 'red'\n          },\n          onClick: _this.remove.bind(_assertThisInitialized(_this), index)\n        }, \"\\u5220\\u9664\")), React.createElement(_Form.Item, {\n          colon: false,\n          label: \"\\u5BFC\\u5E08\"\n        }, getFieldDecorator(\"tutor[\".concat(index, \"]\"), {\n          rules: inputFieldRule\n        })(React.createElement(_Input, {\n          hidden: true\n        })), data.tutor ? _this.tutorBox(data.tutor) : React.createElement(SelectTutors, {\n          getValue: _this.getValue.bind(_assertThisInitialized(_this), index)\n        })), data.tutor ? React.createElement(_Form.Item, {\n          colon: false,\n          style: {\n            marginBottom: '44px'\n          },\n          label: React.createElement(\"span\", null, \"\\u7B80\\u4ECB\", React.createElement(_Popover, {\n            placement: \"topLeft\",\n            content: React.createElement(\"p\", {\n              style: {\n                width: '367px'\n              }\n            }, \"\\u9009\\u62E9\\u5BFC\\u5E08\\u540E\\uFF0C\\u5C06\\u81EA\\u52A8\\u586B\\u5145\\u6B64\\u5BFC\\u5E08\\u5728\\u5BFC\\u5E08\\u5E93\\u4E2D\\u7684\\u7B80\\u4ECB\\u3002\\u540C\\u65F6\\uFF0C\\u4F60\\u4E5F\\u53EF\\u4EE5\\u4FEE\\u6539\\u7B80\\u4ECB\\uFF0C\\u4F46\\u53EA\\u4F1A\\u5728\\u6B64\\u5C0F\\u8282\\u4E2D\\u751F\\u6548\\uFF0C\\u5BFC\\u5E08\\u5E93\\u4E2D\\u7684\\u7B80\\u4ECB\\u4E0D\\u53D7\\u5F71\\u54CD\\u3002\")\n          }, React.createElement(\"a\", null, React.createElement(_Icon, {\n            type: \"exclamation-circle\",\n            style: {\n              width: '0.8em',\n              color: '#D8D8D8',\n              marginLeft: '5px'\n            }\n          }))))\n        }, getFieldDecorator(\"tutorDesc[\".concat(index, \"]\"), {\n          rules: inputFieldRule\n        })(React.createElement(_Input.TextArea, {\n          placeholder: \"\\u8BF7\\u8F93\\u5165\\u5BFC\\u5E08\\u5728\\u6B64\\u5C0F\\u8282\\u4E2D\\u7684\\u7B80\\u4ECB\",\n          autoSize: {\n            minRows: 3,\n            maxRows: 20\n          },\n          onChange: _this.onTutorDescChange.bind(_assertThisInitialized(_this), index)\n        }))) : null);\n      }) : null;\n      return React.createElement(\"div\", null, React.createElement(TitleDiv, null, \"\\u521B\\u5EFA\\u5C0F\\u8282\"), React.createElement(WarpContent, null, React.createElement(_Form, {\n        onSubmit: _this.handleSubmit,\n        style: {\n          width: '50%',\n          backgroundColor: '#fff'\n        }\n      }, React.createElement(\"h3\", null, \"\\u57FA\\u672C\\u4FE1\\u606F\"), React.createElement(_Form.Item, {\n        colon: false,\n        label: React.createElement(\"span\", null, \"\\u5C0F\\u8282\\u540D\\u79F0\")\n      }, getFieldDecorator('name', {\n        rules: inputFieldRule\n      })(React.createElement(_Input, {\n        placeholder: \"\\u8BF7\\u8F93\\u5165\\u5C0F\\u8282\\u7684\\u540D\\u79F0\"\n      }))), React.createElement(_Form.Item, {\n        colon: false,\n        label: React.createElement(\"span\", null, \"\\u5C0F\\u8282\\u5A92\\u4F53\", React.createElement(\"span\", {\n          style: {\n            paddingLeft: '10px',\n            color: '#D8D8D8',\n            fontSize: 12\n          }\n        }, \"\\u4EC5\\u53EF\\u6DFB\\u52A0 1 \\u4E2A\\u89C6\\u9891/\\u97F3\\u9891/\\u6587\\u6863\\u7C7B\\u578B\\u7684\\u6587\\u4EF6\"))\n      }, _this.state.mediaFile ? React.createElement(\"p\", {\n        key: _this.state.mediaFile.id\n      }, _this.state.mediaFile.fileName) : null, React.createElement(FilePicker, {\n        onRef: _this.onRef.bind(_assertThisInitialized(_this), 'media'),\n        fileType: \"media-only\",\n        selectType: \"single\",\n        getSelected: _this.getFile.bind(_assertThisInitialized(_this), 'media')\n      }), getFieldDecorator('mediaFileDescription', {\n        rules: [{\n          required: true,\n          message: '此字段无法为空'\n        }]\n      })(React.createElement(_Button, {\n        style: {\n          width: '200px'\n        },\n        onClick: _this.onClickBtn.bind(_assertThisInitialized(_this), 'media')\n      }, \"\\u9009\\u62E9\\u5A92\\u4F53\"))), React.createElement(_Form.Item, {\n        colon: false,\n        label: React.createElement(\"span\", null, \"\\u5C0F\\u8282\\u9644\\u4EF6\", React.createElement(\"span\", {\n          style: {\n            paddingLeft: '10px',\n            color: '#D8D8D8',\n            fontSize: 12\n          }\n        }, \"\\u53EF\\u6DFB\\u52A0\\u591A\\u4E2A\\u4EFB\\u610F\\u7C7B\\u578B\\u7684\\u6587\\u4EF6\"))\n      }, _this.state.attachmentFile.map(function (a) {\n        return React.createElement(\"p\", {\n          key: a.id\n        }, a.name, React.createElement(\"a\", {\n          onClick: _this.deselect.bind(_assertThisInitialized(_this), a.id)\n        }, React.createElement(_Icon, {\n          type: \"close\"\n        })));\n      }), React.createElement(FilePicker, {\n        onRef: _this.onRef.bind(_assertThisInitialized(_this), 'attachment'),\n        fileType: \"all\",\n        selectType: \"multiple\",\n        getSelected: _this.getFile.bind(_assertThisInitialized(_this), 'attachment')\n      }), getFieldDecorator('attachment')(React.createElement(_Button, {\n        style: {\n          width: '200px'\n        },\n        onClick: _this.onClickBtn.bind(_assertThisInitialized(_this), 'attachment')\n      }, \"\\u6DFB\\u52A0\\u9644\\u4EF6\"))), React.createElement(_Form.Item, {\n        colon: false,\n        label: React.createElement(\"span\", null, \"\\u5C0F\\u8282\\u7B80\\u4ECB\")\n      }, getFieldDecorator('description')(React.createElement(_Input.TextArea, {\n        placeholder: \"\\u8BF7\\u8F93\\u5165\\u5C0F\\u8282\\u7684\\u7B80\\u4ECB\",\n        autoSize: {\n          minRows: 3,\n          maxRows: 10\n        }\n      }))), React.createElement(\"h3\", null, \"\\u5BFC\\u5E08\\u4FE1\\u606F\"), formItems, React.createElement(_Form.Item, {\n        colon: false\n      }, React.createElement(_Button, {\n        type: \"dashed\",\n        onClick: _this.addTutor\n      }, React.createElement(_Icon, {\n        type: \"plus\"\n      }), \"\\u6DFB\\u52A0\\u5BFC\\u5E08\")), React.createElement(_Form.Item, {\n        colon: false,\n        labelCol: {\n          span: 12\n        },\n        style: {\n          marginTop: '70px'\n        }\n      }, React.createElement(_Button, {\n        onClick: _this.props.switchPage.bind(_assertThisInitialized(_this), 'list')\n      }, \"\\u53D6\\u6D88\"), React.createElement(_Button, {\n        style: {\n          marginLeft: 20\n        },\n        type: \"primary\",\n        htmlType: \"submit\",\n        loading: _this.state.loading\n      }, \"\\u521B\\u5EFA\\u5C0F\\u8282\")))));\n    });\n\n    return _this;\n  }\n\n  return ModuleForm;\n}(React.Component);\n\nvar CreateSectionContent = _Form.create()(ModuleForm);\n\nexport { CreateSectionContent };","map":null,"metadata":{},"sourceType":"module"}