{"ast":null,"code":"import _taggedTemplateLiteral from \"@babel/runtime-corejs2/helpers/esm/taggedTemplateLiteral\";\nimport \"antd/lib/form/style\";\nimport _Form from \"antd/lib/form\";\nimport \"antd/lib/input/style\";\nimport _Input from \"antd/lib/input\";\nimport \"antd/lib/message/style\";\nimport _message from \"antd/lib/message\";\nimport \"antd/lib/modal/style\";\nimport _Modal from \"antd/lib/modal\";\nimport React from \"react\";\n\nfunction _templateObject2() {\n  var data = _taggedTemplateLiteral([\"\\n  mutation disagreeServiceTicket($input: DisagreeServiceTicketInput!) {\\n    serviceTicket: disagreeServiceTicket(input: $input) {\\n      ...serviceTicket\\n    }\\n  }\\n  \", \"\\n\"]);\n\n  _templateObject2 = function _templateObject2() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject() {\n  var data = _taggedTemplateLiteral([\"\\n  mutation agreeServiceTicket($input: IDInputType!) {\\n    serviceTicket: agreeServiceTicket(input: $input) {\\n      ...serviceTicket\\n    }\\n  }\\n  \", \"\\n\"]);\n\n  _templateObject = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n\nimport gql from 'graphql-tag';\nimport { FragmentServiceTicket } from '../../routes/service/Fragments';\nvar confirm = _Modal.confirm;\nexport function agreedPlan(id, query, variables, client) {\n  confirm({\n    title: '确认通过审核并发送服务单吗？',\n    content: '确认后，此服务单将会以短信、邮件和App的方式发送给学员。',\n    onOk: function onOk() {\n      return client.mutate({\n        mutation: agreeServiceTicketMutation,\n        variables: {\n          input: {\n            id: id\n          }\n        },\n        refetchQueries: [{\n          query: query,\n          variables: variables\n        }]\n      }).then(function () {\n        _message.success('已成功发送服务单');\n      });\n    }\n  });\n}\nexport function disagreePlan(id, query, variables, client) {\n  var InputValue = '';\n  var ButtonProps = true;\n\n  function onChange(e) {\n    InputValue = e.target.value;\n    InputValue === '' ? ButtonProps = true : ButtonProps = false;\n    model.update({\n      okButtonProps: {\n        disabled: ButtonProps\n      }\n    });\n  }\n\n  var model = confirm({\n    title: '确认拒绝此服务单吗？',\n    content: React.createElement(_Form, null, React.createElement(_Form.Item, {\n      label: \"\\u62D2\\u7EDD\\u7406\\u7531\",\n      required: true,\n      colon: false\n    }, React.createElement(_Input.TextArea, {\n      placeholder: \"\\u8BF7\\u8F93\\u5165\",\n      onChange: onChange\n    }))),\n    okButtonProps: {\n      disabled: ButtonProps\n    },\n    onOk: function onOk() {\n      return client.mutate({\n        mutation: disagreeServiceTicketMutation,\n        variables: {\n          input: {\n            id: id,\n            disagreeReason: InputValue\n          }\n        },\n        refetchQueries: [{\n          query: query,\n          variables: variables\n        }]\n      }).then(function () {\n        _message.success('已拒绝服务单');\n      });\n    }\n  });\n}\nexport var agreeServiceTicketMutation = gql(_templateObject(), FragmentServiceTicket);\nexport var disagreeServiceTicketMutation = gql(_templateObject2(), FragmentServiceTicket);","map":null,"metadata":{},"sourceType":"module"}