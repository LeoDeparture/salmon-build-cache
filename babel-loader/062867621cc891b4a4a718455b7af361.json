{"ast":null,"code":"import \"antd/lib/tree-select/style\";\nimport _TreeSelect from \"antd/lib/tree-select\";\nimport _extends from \"@babel/runtime-corejs2/helpers/esm/extends\";\nimport _regeneratorRuntime from \"@babel/runtime-corejs2/regenerator\";\nimport _objectSpread from \"@babel/runtime-corejs2/helpers/esm/objectSpread\";\nimport _Object$keys from \"@babel/runtime-corejs2/core-js/object/keys\";\nimport _asyncToGenerator from \"@babel/runtime-corejs2/helpers/esm/asyncToGenerator\";\nimport _classCallCheck from \"@babel/runtime-corejs2/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime-corejs2/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime-corejs2/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime-corejs2/helpers/esm/getPrototypeOf\";\nimport _assertThisInitialized from \"@babel/runtime-corejs2/helpers/esm/assertThisInitialized\";\nimport _inherits from \"@babel/runtime-corejs2/helpers/esm/inherits\";\nimport _defineProperty from \"@babel/runtime-corejs2/helpers/esm/defineProperty\";\nimport groupBy from 'lodash/groupBy';\nimport React from 'react';\nimport { allEnum } from '../../../lib/commonJs';\n\nvar LocationSelect =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(LocationSelect, _React$Component);\n\n  function LocationSelect(props) {\n    var _this;\n\n    _classCallCheck(this, LocationSelect);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(LocationSelect).call(this, props));\n\n    _defineProperty(_assertThisInitialized(_this), \"fetchStaticData\",\n    /*#__PURE__*/\n    _asyncToGenerator(\n    /*#__PURE__*/\n    _regeneratorRuntime.mark(function _callee() {\n      var domesticData, abroadData, groupedData, keys, result, locationData, treeData;\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              domesticData = JSON.parse(localStorage.getItem('zhiwen_province_city'));\n              abroadData = allEnum().listStaticForeignCityEnum;\n              groupedData = groupBy(abroadData, 'country.id'); // 修改国外城市数据结构\n\n              keys = _Object$keys(groupedData);\n              result = keys.map(function (key) {\n                var index = abroadData.findIndex(function (city) {\n                  return city.country.id === key;\n                });\n                return _objectSpread({}, abroadData[index].country, {\n                  children: groupedData[key]\n                });\n              });\n              locationData = [{\n                id: 'DOMESTIC',\n                name: '国内',\n                children: domesticData\n              }, {\n                id: 'FOREIGN',\n                name: '国外',\n                children: result\n              }];\n              treeData = locationData.map(function (first) {\n                return {\n                  value: first.id,\n                  title: first.name,\n                  selectable: false,\n                  children: first.children.map(function (second) {\n                    return {\n                      value: second.id,\n                      title: second.name,\n                      selectable: false,\n                      children: second.children.map(function (third) {\n                        return {\n                          value: \"\".concat(first.id, \"+\").concat(third.id),\n                          title: third.name\n                        };\n                      })\n                    };\n                  })\n                };\n              });\n\n              _this.setState({\n                treeData: treeData\n              });\n\n            case 8:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    })));\n\n    _this.state = {\n      treeData: []\n    };\n    return _this;\n  }\n\n  _createClass(LocationSelect, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.fetchStaticData();\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var treeData = this.state.treeData;\n      return React.createElement(_TreeSelect, _extends({\n        dropdownStyle: {\n          maxHeight: 400,\n          overflow: 'auto'\n        },\n        placeholder: \"\\u8BF7\\u9009\\u62E9\",\n        allowClear: true,\n        multiple: true,\n        showSearch: true,\n        treeData: treeData,\n        treeNodeFilterProp: \"title\"\n      }, this.props));\n    }\n  }]);\n\n  return LocationSelect;\n}(React.Component);\n\nexport { LocationSelect as default };","map":null,"metadata":{},"sourceType":"module"}