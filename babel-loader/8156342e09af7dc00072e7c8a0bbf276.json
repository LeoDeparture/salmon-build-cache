{"ast":null,"code":"import \"antd/lib/button/style\";\nimport _Button from \"antd/lib/button\";\nimport \"antd/lib/form/style\";\nimport _Form from \"antd/lib/form\";\nimport \"antd/lib/input/style\";\nimport _Input from \"antd/lib/input\";\nimport _regeneratorRuntime from \"@babel/runtime-corejs2/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime-corejs2/helpers/esm/asyncToGenerator\";\nimport _classCallCheck from \"@babel/runtime-corejs2/helpers/esm/classCallCheck\";\nimport _possibleConstructorReturn from \"@babel/runtime-corejs2/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime-corejs2/helpers/esm/getPrototypeOf\";\nimport _assertThisInitialized from \"@babel/runtime-corejs2/helpers/esm/assertThisInitialized\";\nimport _inherits from \"@babel/runtime-corejs2/helpers/esm/inherits\";\nimport _defineProperty from \"@babel/runtime-corejs2/helpers/esm/defineProperty\";\nimport React from 'react';\nimport ZhiWenSelect from '../../../components/SelectComponents/ZhiWenSelect';\nimport { TitleDiv, WarpContent } from '../commonCss';\nvar inputFieldRule = [{\n  message: '此字段无法为空',\n  required: true,\n  whitespace: true\n}, {\n  max: 500,\n  message: '超过输入长度上限'\n}];\n\nvar ModuleForm =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(ModuleForm, _React$Component);\n\n  function ModuleForm() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, ModuleForm);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(ModuleForm)).call.apply(_getPrototypeOf2, [this].concat(args)));\n\n    _defineProperty(_assertThisInitialized(_this), \"setFieldsValue\", _this.props.form.setFieldsValue);\n\n    _defineProperty(_assertThisInitialized(_this), \"state\", {\n      courseCatName: '',\n      loading: false\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"componentDidMount\", function () {\n      var propsData = _this.props.data;\n      var fieldsValue = {\n        industryId: propsData.industryId,\n        name: propsData.name,\n        remark: propsData.remark\n      };\n\n      _this.props.form.setFieldsValue(fieldsValue);\n\n      _this.setState({\n        courseCatName: propsData.courseCatName\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"handleFieldChange\", function (stateName, stateValue) {\n      _this.setState(_defineProperty({}, stateName, stateValue));\n\n      if (['banner', 'courseCategoryId', 'industryId'].includes(stateName)) {\n        _this.setFieldsValue(_defineProperty({}, stateName, stateValue));\n      }\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"handleSubmit\", function (e) {\n      e.preventDefault();\n\n      _this.props.form.validateFieldsAndScroll(\n      /*#__PURE__*/\n      function () {\n        var _ref = _asyncToGenerator(\n        /*#__PURE__*/\n        _regeneratorRuntime.mark(function _callee(err, fieldsValue) {\n          return _regeneratorRuntime.wrap(function _callee$(_context) {\n            while (1) {\n              switch (_context.prev = _context.next) {\n                case 0:\n                  _this.setState({\n                    loading: true\n                  });\n\n                  if (!err) {\n                    _this.props.editData({\n                      input: fieldsValue\n                    }).then(function (_) {\n                      _this.setState({\n                        loading: false\n                      });\n                    }).catch(function (_) {\n                      _this.setState({\n                        loading: false\n                      });\n                    });\n                  } else {\n                    _this.setState({\n                      loading: false\n                    });\n                  }\n\n                case 2:\n                case \"end\":\n                  return _context.stop();\n              }\n            }\n          }, _callee);\n        }));\n\n        return function (_x, _x2) {\n          return _ref.apply(this, arguments);\n        };\n      }());\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"render\", function () {\n      var _this$props$form = _this.props.form,\n          getFieldDecorator = _this$props$form.getFieldDecorator,\n          getFieldValue = _this$props$form.getFieldValue;\n      return React.createElement(\"div\", null, React.createElement(TitleDiv, null, \"\\u7F16\\u8F91\\u8BFE\\u7A0B\"), React.createElement(WarpContent, null, React.createElement(_Form, {\n        onSubmit: _this.handleSubmit,\n        style: {\n          width: '50%',\n          backgroundColor: '#fff',\n          padding: 40\n        }\n      }, React.createElement(_Form.Item, {\n        colon: false,\n        label: React.createElement(\"span\", null, \"\\u5BF9\\u5185\\u8BFE\\u7A0B\\u540D\\u79F0\")\n      }, getFieldDecorator('name', {\n        rules: inputFieldRule\n      })(React.createElement(_Input, {\n        placeholder: \"\\u8BF7\\u8F93\\u5165\\u8BFE\\u7A0B\\u540D\\u79F0\"\n      }))), React.createElement(_Form.Item, {\n        colon: false,\n        label: \"\\u6240\\u5C5E\\u884C\\u4E1A\"\n      }, getFieldDecorator('industryId', {\n        rules: inputFieldRule\n      })(React.createElement(ZhiWenSelect, {\n        type: \"zhiwen-profession\",\n        value: getFieldValue('industryId'),\n        getValue: _this.handleFieldChange.bind(_assertThisInitialized(_this), 'industryId')\n      }))), React.createElement(_Form.Item, {\n        colon: false,\n        label: React.createElement(\"span\", null, \"\\u6240\\u5C5E\\u5206\\u7C7B\", React.createElement(\"span\", {\n          style: {\n            paddingLeft: '10px',\n            color: '#D8D8D8',\n            fontSize: 12\n          }\n        }, \"\\u6682\\u65F6\\u65E0\\u6CD5\\u66F4\\u6539\\u5206\\u7C7B\"))\n      }, React.createElement(_Input, {\n        value: _this.state.courseCatName,\n        disabled: true,\n        required: true,\n        style: {\n          textAlign: 'left',\n          textOverflow: 'ellipsis',\n          direction: 'rtl'\n        }\n      })), React.createElement(_Form.Item, {\n        colon: false,\n        label: React.createElement(\"span\", null, \"\\u5BF9\\u5185\\u5907\\u6CE8\", React.createElement(\"span\", {\n          style: {\n            paddingLeft: '10px',\n            color: '#D8D8D8',\n            fontSize: 12\n          }\n        }, \"\\u4EC5\\u5BF9\\u5185\\u53EF\\u89C1\"))\n      }, getFieldDecorator('remark')(React.createElement(_Input.TextArea, {\n        placeholder: \"\\u8BF7\\u8F93\\u5165\\u5BF9\\u5185\\u5907\\u6CE8\",\n        autoSize: {\n          minRows: 2,\n          maxRows: 10\n        }\n      }))), React.createElement(_Form.Item, {\n        colon: false,\n        labelCol: {\n          span: 12\n        }\n      }, React.createElement(_Button, {\n        onClick: _this.props.switchPage.bind(_assertThisInitialized(_this), 'list')\n      }, \"\\u53D6\\u6D88\"), React.createElement(_Button, {\n        style: {\n          marginLeft: 20\n        },\n        type: \"primary\",\n        htmlType: \"submit\",\n        loading: _this.state.loading\n      }, \"\\u4FDD\\u5B58\")))));\n    });\n\n    return _this;\n  }\n\n  return ModuleForm;\n}(React.Component);\n\nvar EditSubscriptionCourseContent = _Form.create()(ModuleForm);\n\nexport { EditSubscriptionCourseContent };","map":null,"metadata":{},"sourceType":"module"}