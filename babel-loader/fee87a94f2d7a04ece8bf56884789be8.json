{"ast":null,"code":"import \"antd/lib/button/style\";\nimport _Button from \"antd/lib/button\";\nimport \"antd/lib/row/style\";\nimport _Row from \"antd/lib/row\";\nimport \"antd/lib/switch/style\";\nimport _Switch from \"antd/lib/switch\";\nimport \"antd/lib/time-picker/style\";\nimport _TimePicker from \"antd/lib/time-picker\";\nimport \"antd/lib/message/style\";\nimport _message from \"antd/lib/message\";\nimport \"antd/lib/modal/style\";\nimport _Modal from \"antd/lib/modal\";\nimport _regeneratorRuntime from \"@babel/runtime-corejs2/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime-corejs2/helpers/esm/asyncToGenerator\";\nimport _classCallCheck from \"@babel/runtime-corejs2/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime-corejs2/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime-corejs2/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime-corejs2/helpers/esm/getPrototypeOf\";\nimport _assertThisInitialized from \"@babel/runtime-corejs2/helpers/esm/assertThisInitialized\";\nimport _inherits from \"@babel/runtime-corejs2/helpers/esm/inherits\";\nimport _defineProperty from \"@babel/runtime-corejs2/helpers/esm/defineProperty\";\nimport \"antd/lib/form/style\";\nimport _Form from \"antd/lib/form\";\nimport { format, startOfMinute } from 'date-fns';\nimport moment from 'moment';\nimport Router from 'next/router';\nimport React from 'react';\nimport styled from 'styled-components';\nimport { time2UTC, yyyymmdd } from '../../../lib/date';\nimport CalenderDatePicker from './CalenderDatePicker';\nvar FormItem = _Form.Item;\nvar MentionP = styled.p.withConfig({\n  displayName: \"AddAppointmentComponent__MentionP\",\n  componentId: \"sc-1l8mxzi-0\"\n})([\"font-size:12px;color:#9b9b9b;\"]);\nvar SwitchButtTitle = styled.span.withConfig({\n  displayName: \"AddAppointmentComponent__SwitchButtTitle\",\n  componentId: \"sc-1l8mxzi-1\"\n})([\"margin-right:8px;\"]); // export const disableToday = m => {\n//   const today = time2UTC(yyyymmdd(new Date(), 'YYYY-MM-DD 08:00'));\n//   const selectDate = new Date(m._d).valueOf();\n//   const nextAbleTime = addHours(new Date(), 2).valueOf();\n//   return { today, disable: selectDate < nextAbleTime };\n// };\n\nvar RegistrationForm =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(RegistrationForm, _React$Component);\n\n  function RegistrationForm() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, RegistrationForm);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(RegistrationForm)).call.apply(_getPrototypeOf2, [this].concat(args)));\n\n    _defineProperty(_assertThisInitialized(_this), \"formatType\", 'YYYY-MM-DD HH:mm');\n\n    _defineProperty(_assertThisInitialized(_this), \"setFieldsValue\", _this.props.form.setFieldsValue);\n\n    _defineProperty(_assertThisInitialized(_this), \"state\", {\n      disableValue: [],\n      isFirst: true,\n      loading: false,\n      disableLoading: false,\n      minuteValue: moment(new Date().setMinutes(0)),\n      resultDate: [],\n      switch: true,\n      time: ''\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"onChange\", function (value) {\n      _this.setState({\n        switch: value\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"onChangeTime\",\n    /*#__PURE__*/\n    function () {\n      var _ref = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee(m) {\n        var timeStr, timeUTC;\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                if (!m) {\n                  _context.next = 8;\n                  break;\n                }\n\n                timeStr = format(m._d, 'HH:mm:00.000');\n\n                _this.setState({\n                  time: timeStr,\n                  disableLoading: true\n                });\n\n                _this.props.form.setFieldsValue({\n                  appointmentTimes: ''\n                });\n\n                timeUTC = time2UTC(startOfMinute(m._d));\n                _context.next = 7;\n                return _this.props.getDisableDate(timeUTC).then(function (result) {\n                  var fetchResult = result.data.getOperatorUnavailableDatesByTime.unavailableDates;\n\n                  _this.setState({\n                    disableValue: fetchResult,\n                    disableLoading: false\n                  });\n                });\n\n              case 7:\n                return _context.abrupt(\"return\");\n\n              case 8:\n                _this.setState({\n                  time: ''\n                });\n\n              case 9:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee);\n      }));\n\n      return function (_x) {\n        return _ref.apply(this, arguments);\n      };\n    }());\n\n    _defineProperty(_assertThisInitialized(_this), \"checkTime\", function () {\n      var _this$state = _this.state,\n          time = _this$state.time,\n          isFirst = _this$state.isFirst;\n      var showPanel = time === '' && isFirst;\n\n      _this.setState({\n        isFirst: true\n      });\n\n      if (showPanel) {\n        _Modal.warning({\n          content: '设置预约时间后，方可设置预约日期',\n          okText: '我知道了',\n          title: '请先设置预约时间'\n        });\n\n        _this.setState({\n          isFirst: false\n        });\n      }\n\n      return time === '';\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"getValue\", function (resultDate) {\n      _this.setFieldsValue({\n        appointmentTimes: resultDate\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"appointmentTimes\", function (dateData) {\n      var result = [];\n\n      if (dateData.length) {\n        var time = _this.state.time;\n        dateData.forEach(function (item) {\n          var utcDate = new Date(\"\".concat(yyyymmdd(item), \" \").concat(time)).toISOString();\n          result.push(utcDate);\n        });\n      }\n\n      return result;\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"jumpBack\", function () {\n      Router.back();\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"handleSubmit\", function (e) {\n      e.preventDefault();\n\n      _this.setState({\n        loading: true\n      });\n\n      _this.props.form.validateFieldsAndScroll(\n      /*#__PURE__*/\n      function () {\n        var _ref2 = _asyncToGenerator(\n        /*#__PURE__*/\n        _regeneratorRuntime.mark(function _callee2(err, values) {\n          var utcTime;\n          return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n            while (1) {\n              switch (_context2.prev = _context2.next) {\n                case 0:\n                  utcTime = _this.appointmentTimes(values.appointmentTimes);\n\n                  if (err) {\n                    _context2.next = 8;\n                    break;\n                  }\n\n                  values.isPublic = _this.state.switch;\n                  values.appointmentTimes = utcTime;\n                  delete values.time;\n                  _context2.next = 7;\n                  return _this.props.createOperator(values.appointmentTimes, values.isPublic).then(function (result) {\n                    if (result.data && result.data.createOperatorSlots) {\n                      _message.success('已成功添加预约日程', 1.5, _this.jumpBack);\n                    }\n                  }).catch(function () {\n                    _this.setState({\n                      loading: false\n                    });\n                  });\n\n                case 7:\n                  return _context2.abrupt(\"return\");\n\n                case 8:\n                  _this.setState({\n                    loading: false\n                  });\n\n                case 9:\n                case \"end\":\n                  return _context2.stop();\n              }\n            }\n          }, _callee2);\n        }));\n\n        return function (_x2, _x3) {\n          return _ref2.apply(this, arguments);\n        };\n      }());\n    });\n\n    return _this;\n  }\n\n  _createClass(RegistrationForm, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var time = moment(new Date().setMinutes(0));\n      this.onChangeTime(time);\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this$props$form = this.props.form,\n          getFieldDecorator = _this$props$form.getFieldDecorator,\n          getFieldValue = _this$props$form.getFieldValue;\n      var _this$state2 = this.state,\n          disableValue = _this$state2.disableValue,\n          time = _this$state2.time,\n          loading = _this$state2.loading,\n          disableLoading = _this$state2.disableLoading,\n          minuteValue = _this$state2.minuteValue;\n      return React.createElement(_Form, {\n        onSubmit: this.handleSubmit,\n        style: {\n          width: '100%',\n          backgroundColor: '#fff'\n        }\n      }, React.createElement(_Row, null, React.createElement(FormItem, {\n        style: {\n          width: 350\n        },\n        label: \"\\u9884\\u7EA6\\u65F6\\u95F4\"\n      }, getFieldDecorator('time', {\n        initialValue: minuteValue,\n        rules: [{\n          message: '请先选择预约时间!',\n          required: true\n        }]\n      })(React.createElement(_TimePicker, {\n        style: {\n          width: '100%'\n        },\n        format: \"HH:mm\",\n        placeholder: \"\\u8BF7\\u8BBE\\u7F6E\",\n        minuteStep: 15,\n        allowClear: false,\n        onChange: this.onChangeTime\n      }))), React.createElement(FormItem, {\n        style: {\n          width: 350\n        },\n        label: \"\\u9884\\u7EA6\\u65E5\\u671F\"\n      }, getFieldDecorator('appointmentTimes', {\n        rules: [{\n          message: '字段不可为空',\n          required: true\n        }]\n      })(React.createElement(CalenderDatePicker, {\n        getValue: this.getValue,\n        loading: disableLoading,\n        setValue: getFieldValue('appointmentTimes'),\n        checkTime: this.checkTime,\n        timeUTC: time,\n        disableDate: disableValue\n      }))), React.createElement(FormItem, {\n        style: {\n          margin: '52px 0 70px'\n        },\n        label: \"\\u662F\\u5426\\u516C\\u5F00\\u4E0A\\u8FF0\\u9884\\u7EA6\\u65E5\\u7A0B \"\n      }, React.createElement(SwitchButtTitle, null, this.state.switch ? '公开' : '暂不公开'), React.createElement(_Switch, {\n        defaultChecked: true,\n        onChange: this.onChange\n      }), React.createElement(MentionP, null, \"\\u516C\\u5F00\\u540E\\uFF0C\\u4E0A\\u8FF0\\u9884\\u7EA6\\u65E5\\u7A0B\\u5C06\\u7ACB\\u5373\\u751F\\u6548\\uFF0C\\u5B66\\u5458\\u53EF\\u5728App\\u7AEF\\u8FDB\\u884C\\u9884\\u7EA6\"))), React.createElement(FormItem, {\n        labelCol: {\n          span: 12\n        }\n      }, React.createElement(_Button, {\n        style: {\n          marginRight: 10,\n          fontSize: 15\n        },\n        onClick: this.jumpBack\n      }, \"\\u53D6 \\u6D88\"), React.createElement(_Button, {\n        type: \"primary\",\n        loading: loading,\n        htmlType: \"submit\"\n      }, \"\\u786E\\u8BA4\\u6DFB\\u52A0\")));\n    }\n  }]);\n\n  return RegistrationForm;\n}(React.Component);\n\nvar WrappedRegistrationForm = _Form.create()(RegistrationForm);\n\nexport default WrappedRegistrationForm;","map":null,"metadata":{},"sourceType":"module"}