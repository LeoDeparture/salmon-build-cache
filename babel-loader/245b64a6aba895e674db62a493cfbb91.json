{"ast":null,"code":"import \"antd/lib/icon/style\";\nimport _Icon from \"antd/lib/icon\";\nimport \"antd/lib/modal/style\";\nimport _Modal from \"antd/lib/modal\";\nimport \"antd/lib/message/style\";\nimport _message from \"antd/lib/message\";\nimport _classCallCheck from \"@babel/runtime-corejs2/helpers/esm/classCallCheck\";\nimport _possibleConstructorReturn from \"@babel/runtime-corejs2/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime-corejs2/helpers/esm/getPrototypeOf\";\nimport _assertThisInitialized from \"@babel/runtime-corejs2/helpers/esm/assertThisInitialized\";\nimport _inherits from \"@babel/runtime-corejs2/helpers/esm/inherits\";\nimport _defineProperty from \"@babel/runtime-corejs2/helpers/esm/defineProperty\";\nimport React from 'react';\nimport { parseErrorCode } from '../../../../lib/commonJs';\nimport { handleConfirmOtherError } from '../../../../lib/handleError';\nimport { DuplicateSubscriptionCourseSeriesContent } from '../components/DuplicateSubscriptionCourseSeriesContent';\nimport { CreateSubscriptionCourseSeriesMutation, createSubscriptionCourseSeriesMutation } from './CreateSubscriptionCourseSeriesMutation';\nimport { getSeriesUnavailableDateRangesQuery, GetSeriesUnavailableDateRangesQuery } from './GetSeriesOccupiedTimeQuery';\n\nvar DuplicateSubscriptionCourseSeriesContainer =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(DuplicateSubscriptionCourseSeriesContainer, _React$Component);\n\n  function DuplicateSubscriptionCourseSeriesContainer() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, DuplicateSubscriptionCourseSeriesContainer);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(DuplicateSubscriptionCourseSeriesContainer)).call.apply(_getPrototypeOf2, [this].concat(args)));\n\n    _defineProperty(_assertThisInitialized(_this), \"createdSuccessful\", function () {\n      _message.success('已成功创建课程周期', 3);\n\n      _this.props.switchPage('list');\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"createFailed\", function (err) {\n      if (parseErrorCode(err) === 'PeriodOverlapped') {\n        _Modal.warning({\n          icon: React.createElement(_Icon, {\n            type: \"exclamation-circle\",\n            style: {\n              color: 'orange'\n            },\n            theme: \"filled\"\n          }),\n          content: '你设置的有效期间已被其他的周期占用，请重新设置有效时间。',\n          okText: '我知道了',\n          title: '无法创建此周期'\n        });\n      } else if (handleConfirmOtherError(err)) {\n        _message.error('创建课程周期失败');\n      }\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"render\", function () {\n      var data = _this.props.seriesData;\n\n      if (data) {\n        return React.createElement(GetSeriesUnavailableDateRangesQuery, {\n          query: getSeriesUnavailableDateRangesQuery,\n          variables: {\n            input: {\n              id: data.courseProductId\n            }\n          }\n        }, function (dateRangeResult) {\n          return React.createElement(CreateSubscriptionCourseSeriesMutation, {\n            mutation: createSubscriptionCourseSeriesMutation,\n            onError: _this.createFailed,\n            onCompleted: _this.createdSuccessful\n          }, function (createSubsCourseSeries) {\n            var createMutation = function createMutation(_ref) {\n              var _ref$input = _ref.input,\n                  name = _ref$input.name,\n                  startAt = _ref$input.startAt,\n                  endAt = _ref$input.endAt,\n                  pictureUrl = _ref$input.pictureUrl,\n                  courseContentPicUrl = _ref$input.courseContentPicUrl,\n                  courseProductId = _ref$input.courseProductId,\n                  videoUrl = _ref$input.videoUrl,\n                  courseHighlights = _ref$input.courseHighlights,\n                  description = _ref$input.description,\n                  suitableCrowd = _ref$input.suitableCrowd,\n                  tutorIntroduction = _ref$input.tutorIntroduction,\n                  tags = _ref$input.tags;\n              createSubsCourseSeries({\n                variables: {\n                  input: {\n                    name: name,\n                    startAt: startAt,\n                    endAt: endAt,\n                    pictureUrl: pictureUrl,\n                    courseContentPicUrl: courseContentPicUrl,\n                    courseProductId: courseProductId,\n                    videoUrl: videoUrl,\n                    courseHighlights: courseHighlights,\n                    description: description,\n                    suitableCrowd: suitableCrowd,\n                    tutorIntroduction: tutorIntroduction,\n                    tags: tags\n                  }\n                }\n              });\n            };\n\n            return React.createElement(DuplicateSubscriptionCourseSeriesContent, {\n              occupiedDateRange: dateRangeResult.data.getSeriesUnavailableDateRanges,\n              data: data,\n              createData: createMutation,\n              switchPage: _this.props.switchPage\n            });\n          });\n        });\n      } else {\n        return null;\n      }\n    });\n\n    return _this;\n  }\n\n  return DuplicateSubscriptionCourseSeriesContainer;\n}(React.Component);\n\nexport { DuplicateSubscriptionCourseSeriesContainer };","map":null,"metadata":{},"sourceType":"module"}