{"ast":null,"code":"import \"antd/lib/button/style\";\nimport _Button from \"antd/lib/button\";\nimport \"antd/lib/input/style\";\nimport _Input from \"antd/lib/input\";\nimport \"antd/lib/form/style\";\nimport _Form from \"antd/lib/form\";\nimport \"antd/lib/message/style\";\nimport _message from \"antd/lib/message\";\nimport _Object$assign from \"@babel/runtime-corejs2/core-js/object/assign\";\nimport _objectSpread from \"@babel/runtime-corejs2/helpers/esm/objectSpread\";\nimport _regeneratorRuntime from \"@babel/runtime-corejs2/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime-corejs2/helpers/esm/asyncToGenerator\";\nimport _classCallCheck from \"@babel/runtime-corejs2/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime-corejs2/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime-corejs2/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime-corejs2/helpers/esm/getPrototypeOf\";\nimport _assertThisInitialized from \"@babel/runtime-corejs2/helpers/esm/assertThisInitialized\";\nimport _inherits from \"@babel/runtime-corejs2/helpers/esm/inherits\";\nimport _defineProperty from \"@babel/runtime-corejs2/helpers/esm/defineProperty\";\nimport \"antd/lib/date-picker/style\";\nimport _DatePicker from \"antd/lib/date-picker\";\nimport moment from 'moment';\nimport Router from 'next/router';\nimport React, { Component } from 'react';\nimport styled from 'styled-components';\nimport { LabelDescription, LabelWrapper } from '../../../common/styled';\nimport LimitedInput from '../../../components/Input/LimitedInput';\nimport CompanySelect from '../../../components/Select/CompanySelect';\nimport LocationSelect from '../../../components/Select/LocationSelect';\nimport OperatorSelect from '../../../components/Select/OperatorSelect';\nimport ZhiWenSelect from '../../../components/Select/ZhiWenSelect';\nimport { allEnum, disablePast, genFillBackCityIds, parseCityIds, parseErrorCode } from '../../../lib/commonJs';\nimport { LengthLimitedText, NoEmptyInputRule, NoEmptyOtherRule } from '../../../lib/commonRule';\nimport { showInvalidModal } from './ActionButton';\nvar RangePicker = _DatePicker.RangePicker;\n\nvar EditForm =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(EditForm, _Component);\n\n  function EditForm(props) {\n    var _this;\n\n    _classCallCheck(this, EditForm);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(EditForm).call(this, props));\n\n    _defineProperty(_assertThisInitialized(_this), \"componentDidMount\",\n    /*#__PURE__*/\n    _asyncToGenerator(\n    /*#__PURE__*/\n    _regeneratorRuntime.mark(function _callee() {\n      var _this$props, job, type, name, company, industry, jobProperty, cities, foreignCities, level, workContent, startAt, endAt, principal, innerRemarks, data;\n\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _this$props = _this.props, job = _this$props.job, type = _this$props.type;\n\n              if (!(!job || type !== 'update')) {\n                _context.next = 3;\n                break;\n              }\n\n              return _context.abrupt(\"return\");\n\n            case 3:\n              name = job.name, company = job.company, industry = job.industry, jobProperty = job.jobProperty, cities = job.cities, foreignCities = job.foreignCities, level = job.level, workContent = job.workContent, startAt = job.startAt, endAt = job.endAt, principal = job.principal, innerRemarks = job.innerRemarks; // 更新是否显示地区\n\n              _context.next = 6;\n              return _this.onChangeJobCharacter(jobProperty && jobProperty.id);\n\n            case 6:\n              // 数据回填\n              data = {\n                name: name,\n                companyName: company && company.companyName,\n                industryId: industry && industry.id,\n                jobPropertyId: jobProperty && jobProperty.id,\n                location: genFillBackCityIds(cities, foreignCities),\n                levelId: level && level.id,\n                workContent: workContent,\n                validDate: [startAt && moment(startAt), endAt && moment(endAt)],\n                principalId: principal && principal.id,\n                innerRemarks: innerRemarks\n              }; // 执行回填\n\n              _this.props.form.setFieldsValue(data);\n\n            case 8:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    })));\n\n    _defineProperty(_assertThisInitialized(_this), \"onClickConfirm\", function () {\n      var _this$props2 = _this.props,\n          job = _this$props2.job,\n          type = _this$props2.type,\n          onCancel = _this$props2.onCancel,\n          createJob = _this$props2.createJob,\n          updateJob = _this$props2.updateJob;\n\n      _this.props.form.validateFieldsAndScroll(function (err, values) {\n        if (!err) {\n          var validDate = values.validDate;\n\n          var fields = _objectSpread({}, values, {\n            startAt: validDate[0].startOf('day').toISOString(),\n            endAt: validDate[1].endOf('day').toISOString()\n          });\n\n          delete fields.validDate; // 如果包含地区信息\n\n          if (fields.location) {\n            _Object$assign(fields, parseCityIds(fields.location));\n\n            delete fields.location;\n          } // 如果是编辑\n\n\n          if (type === 'update') {\n            _Object$assign(fields, {\n              id: job.id\n            });\n          }\n\n          var execution = type === 'create' ? createJob : updateJob;\n\n          _this.setState({\n            loading: true\n          });\n\n          execution(fields).then(function (result) {\n            if (result) {\n              if (type === 'create') {\n                _message.success('已成功新增岗位');\n\n                Router.push('/job-service/jobs');\n              }\n\n              if (type === 'update') {\n                _message.success('已成功保存');\n\n                onCancel();\n              }\n            }\n          }).catch(function (error) {\n            if (parseErrorCode(error) === 'OperatorAccountNotExist') {\n              var actionText = type === 'create' ? '新增' : '保存';\n              showInvalidModal(\"\\u65E0\\u6CD5\".concat(actionText), \"\\u8BE5\\u5C97\\u4F4D\\u8D1F\\u8D23\\u4EBA\\u5DF2\\u88AB\\u5220\\u9664\\u6216\\u505C\\u7528\\uFF0C\\u8BF7\\u91CD\\u65B0\\u9009\\u62E9\\u540E\\uFF0C\\u518D\\u5C1D\\u8BD5\".concat(actionText, \"\\u3002\"));\n            }\n          }).finally(function () {\n            _this.setState({\n              loading: false\n            });\n          });\n        }\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"onChangeJobCharacter\",\n    /*#__PURE__*/\n    function () {\n      var _ref2 = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee2(value) {\n        var remoteJobTypeId;\n        return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                remoteJobTypeId = _this.state.remoteJobTypeId;\n\n                _this.setState({\n                  isRemote: value === remoteJobTypeId\n                });\n\n              case 2:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2);\n      }));\n\n      return function (_x) {\n        return _ref2.apply(this, arguments);\n      };\n    }());\n\n    _defineProperty(_assertThisInitialized(_this), \"onClickCancel\", function () {\n      var onCancel = _this.props.onCancel;\n\n      if (onCancel) {\n        onCancel();\n        return;\n      }\n\n      Router.push('/job-service/jobs');\n    });\n\n    _this.state = {\n      loading: false,\n      remoteJobTypeId: allEnum().listStaticJobPropertyEnums.find(function (v) {\n        return v.key === 'REMOTE-INTERNSHIP';\n      }).id,\n      isRemote: true\n    };\n    return _this;\n  }\n\n  _createClass(EditForm, [{\n    key: \"render\",\n    value: function render() {\n      var type = this.props.type;\n      var getFieldDecorator = this.props.form.getFieldDecorator;\n      var _this$state = this.state,\n          loading = _this$state.loading,\n          isRemote = _this$state.isRemote;\n      return React.createElement(Wrapper, {\n        id: \"job-service-edit-form\"\n      }, React.createElement(_Form.Item, {\n        label: \"\\u5C97\\u4F4D\\u540D\\u79F0\",\n        colon: false\n      }, getFieldDecorator('name', {\n        rules: NoEmptyInputRule\n      })(React.createElement(LimitedInput, {\n        limit: 30,\n        placeholder: \"\\u8BF7\\u8F93\\u5165\"\n      }))), React.createElement(_Form.Item, {\n        label: \"\\u516C\\u53F8\\u540D\\u79F0\",\n        colon: false\n      }, getFieldDecorator('companyName', {\n        rules: NoEmptyInputRule\n      })(React.createElement(CompanySelect, {\n        style: {\n          width: '100%'\n        }\n      }))), React.createElement(_Form.Item, {\n        label: \"\\u884C\\u4E1A\",\n        colon: false\n      }, getFieldDecorator('industryId', {\n        rules: NoEmptyOtherRule\n      })(React.createElement(StyledSelect, {\n        type: \"zhiwen-profession\",\n        allowClear: true\n      }))), React.createElement(_Form.Item, {\n        label: \"\\u5C97\\u4F4D\\u6027\\u8D28\",\n        colon: false\n      }, getFieldDecorator('jobPropertyId', {\n        rules: NoEmptyOtherRule\n      })(React.createElement(StyledSelect, {\n        type: \"job-property\",\n        allowClear: true,\n        onChange: this.onChangeJobCharacter\n      }))), !isRemote && React.createElement(_Form.Item, {\n        label: \"\\u5730\\u533A\",\n        colon: false\n      }, getFieldDecorator('location', {\n        rules: NoEmptyOtherRule\n      })(React.createElement(LocationSelect, {\n        style: {\n          width: '100%'\n        }\n      }))), React.createElement(_Form.Item, {\n        label: \"\\u7B49\\u7EA7\",\n        colon: false\n      }, getFieldDecorator('levelId', {\n        rules: NoEmptyOtherRule\n      })(React.createElement(StyledSelect, {\n        type: \"zhiwen-company-level\",\n        allowClear: true,\n        placeholder: \"\\u8BF7\\u9009\\u62E9\"\n      }))), React.createElement(_Form.Item, {\n        label: \"\\u5DE5\\u4F5C\\u5185\\u5BB9\\u53CA\\u8981\\u6C42\",\n        colon: false\n      }, getFieldDecorator('workContent', {\n        rules: [{\n          max: 3000,\n          message: LengthLimitedText\n        }]\n      })(React.createElement(_Input.TextArea, {\n        autoSize: {\n          minRows: 9\n        },\n        placeholder: \"\\u8BF7\\u8F93\\u5165\"\n      }))), React.createElement(_Form.Item, {\n        label: \"\\u6709\\u6548\\u671F\",\n        colon: false\n      }, getFieldDecorator('validDate', {\n        rules: NoEmptyOtherRule\n      })(React.createElement(StyledRangePicker, {\n        disabledDate: disablePast\n      }))), React.createElement(_Form.Item, {\n        label: \"\\u5C97\\u4F4D\\u8D1F\\u8D23\\u4EBA\",\n        colon: false\n      }, getFieldDecorator('principalId', {\n        rules: NoEmptyOtherRule\n      })(React.createElement(OperatorSelect, {\n        departmentName: \"\\u6218\\u7565\\u53D1\\u5C55\\u56E2\\u961F\",\n        style: {\n          width: '100%'\n        }\n      }))), React.createElement(_Form.Item, {\n        label: React.createElement(LabelWrapper, null, React.createElement(\"label\", null, \"\\u5BF9\\u5185\\u5907\\u6CE8\"), React.createElement(LabelDescription, null, \"\\u4EC5\\u5BF9\\u5185\\u53EF\\u89C1\")),\n        colon: false\n      }, getFieldDecorator('innerRemarks')(React.createElement(_Input.TextArea, {\n        autoSize: {\n          minRows: 2\n        },\n        placeholder: \"\\u8BF7\\u8F93\\u5165\"\n      }))), React.createElement(Buttons, null, React.createElement(_Button, {\n        onClick: this.onClickCancel\n      }, \"\\u53D6\\u6D88\"), React.createElement(_Button, {\n        style: {\n          marginLeft: '12px'\n        },\n        type: \"primary\",\n        onClick: this.onClickConfirm,\n        loading: loading\n      }, type === 'create' ? '新增岗位' : '保存')));\n    }\n  }]);\n\n  return EditForm;\n}(Component);\n\nexport default _Form.create()(EditForm);\nvar Wrapper = styled.div.withConfig({\n  displayName: \"EditForm__Wrapper\",\n  componentId: \"sc-1k6z8t2-0\"\n})([\"position:relative;\"]);\nvar StyledSelect = styled(ZhiWenSelect).withConfig({\n  displayName: \"EditForm__StyledSelect\",\n  componentId: \"sc-1k6z8t2-1\"\n})([\"width:100%;\"]);\nvar StyledRangePicker = styled(RangePicker).withConfig({\n  displayName: \"EditForm__StyledRangePicker\",\n  componentId: \"sc-1k6z8t2-2\"\n})([\"width:100%;\"]);\nvar Buttons = styled.div.withConfig({\n  displayName: \"EditForm__Buttons\",\n  componentId: \"sc-1k6z8t2-3\"\n})([\"margin-top:20px;\"]);","map":null,"metadata":{},"sourceType":"module"}