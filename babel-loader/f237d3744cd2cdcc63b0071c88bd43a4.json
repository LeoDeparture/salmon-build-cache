{"ast":null,"code":"import \"antd/lib/menu/style\";\nimport _Menu from \"antd/lib/menu\";\nimport _regeneratorRuntime from \"@babel/runtime-corejs2/regenerator\";\nimport _toConsumableArray from \"@babel/runtime-corejs2/helpers/esm/toConsumableArray\";\nimport _asyncToGenerator from \"@babel/runtime-corejs2/helpers/esm/asyncToGenerator\";\nimport \"antd/lib/icon/style\";\nimport _Icon from \"antd/lib/icon\";\nimport \"antd/lib/modal/style\";\nimport _Modal from \"antd/lib/modal\";\nimport _Object$assign from \"@babel/runtime-corejs2/core-js/object/assign\";\nimport _Promise from \"@babel/runtime-corejs2/core-js/promise\";\nimport \"antd/lib/message/style\";\nimport _message from \"antd/lib/message\";\nimport _classCallCheck from \"@babel/runtime-corejs2/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime-corejs2/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime-corejs2/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime-corejs2/helpers/esm/getPrototypeOf\";\nimport _assertThisInitialized from \"@babel/runtime-corejs2/helpers/esm/assertThisInitialized\";\nimport _inherits from \"@babel/runtime-corejs2/helpers/esm/inherits\";\nimport _defineProperty from \"@babel/runtime-corejs2/helpers/esm/defineProperty\";\nimport Router from 'next/router';\nimport React from 'react';\nimport Loading from '../../../components/Loading';\nimport TableFooter from '../../../components/Table/TableFooter';\nimport { parseErrorCode } from '../../../lib/commonJs';\nimport { formatToAsia } from '../../../lib/date';\nimport { handleConfirmOtherError } from '../../../lib/handleError';\nimport SubscriptionCourseManagementContent from '../components/SubscriptionCourseManagementContent';\nimport ListSubscriptionCoursesQuery, { listSubscriptionCoursesWithPagination } from './ListSubscriptionCoursesWithPaginationQuery';\nimport { disableSubscriptionCourseMutation, enableSubscriptionCourseMutation, removeSubscriptionCourseMutation, sortSubscriptionCoursesMutation } from './MutationSubscriptionCourse';\nvar getDataNumber = 20;\nexport var listSubscriptionCoursesVariable = {\n  input: {\n    first: getDataNumber,\n    orderBy: this ? this.state.orderBy : 'createdAt_DESC',\n    where: {\n      courseCategory: {\n        id: this ? this.state.idFilter : undefined\n      },\n      status: {\n        key_not: 'REMOVED'\n      }\n    }\n  }\n};\n\nvar SubscriptionCourseManagementContainer =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(SubscriptionCourseManagementContainer, _React$Component);\n\n  function SubscriptionCourseManagementContainer() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, SubscriptionCourseManagementContainer);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(SubscriptionCourseManagementContainer)).call.apply(_getPrototypeOf2, [this].concat(args)));\n\n    _defineProperty(_assertThisInitialized(_this), \"state\", {\n      endPageData: true,\n      idFilter: undefined,\n      loading: false,\n      orderBy: 'createdAt_DESC',\n      pageInfo: undefined,\n      showTable: true\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"getCourseCategoryNameString\", function (courseCategory) {\n      var current = courseCategory;\n      var courseCategoriesArr = [];\n\n      while (current && current.name) {\n        courseCategoriesArr.push(current.name);\n        current = current.parent;\n      }\n\n      courseCategoriesArr.reverse();\n      return courseCategoriesArr.join(' / ');\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"renderMessage\", function (mutation, error) {\n      if (mutation === removeSubscriptionCourseMutation) {\n        if (error) {\n          _message.success('已成功移除此订阅课程');\n\n          return;\n        }\n\n        _message.error('移除订阅课程失败');\n      }\n\n      if (mutation === disableSubscriptionCourseMutation) {\n        if (error) {\n          _message.success('已成功下线此订阅课程');\n\n          return;\n        }\n\n        _message.error('下线订阅课程失败');\n      }\n\n      if (mutation === enableSubscriptionCourseMutation) {\n        if (error) {\n          _message.success('已成功上线此订阅课程');\n\n          return;\n        }\n\n        _message.error('上线订阅课程失败');\n      }\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"handleSortConfirm\", function (sortItems) {\n      var variable = {\n        input: {\n          idPositions: sortItems\n        }\n      };\n      return _this.client.mutate({\n        variables: variable,\n        mutation: sortSubscriptionCoursesMutation\n      }).then(function (res) {\n        _this.refetch(listSubscriptionCoursesVariable);\n\n        _message.success('已成功排序');\n\n        return res;\n      }).catch(function (e) {\n        if (handleConfirmOtherError(e)) {\n          _message.error('排序失败');\n        }\n\n        return _Promise.reject(e);\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"handleFetchSortList\", function () {\n      return _this.client.query({\n        // tslint:disable-next-line\n        fetchPolicy: 'network-only',\n        query: listSubscriptionCoursesWithPagination,\n        variables: {\n          input: {\n            orderBy: 'sort_ASC',\n            where: {\n              courseCategory: {\n                id: _this.state.idFilter\n              },\n              status: {\n                key_not: 'REMOVED'\n              }\n            }\n          }\n        }\n      }).then(function (res) {\n        var data = res.data.listSubscriptionCoursesWithPagination.edges;\n        return data.map(function (item) {\n          return item.node;\n        });\n      }).catch(function (err) {\n        if (handleConfirmOtherError(err)) {\n          _message.error('操作失败');\n        }\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"handleMutation\", function (variables, mutation) {\n      function deleteFilterFun(data, result2) {\n        data.listSubscriptionCoursesWithPagination.edges.forEach(function (item, index) {\n          if (item.node.id === result2.data.removeSubscriptionCourse.id) {\n            data.listSubscriptionCoursesWithPagination.edges.splice(index, 1);\n          }\n        });\n        return data;\n      }\n\n      var opts = {\n        mutation: mutation,\n        variables: variables\n      };\n\n      if (mutation === removeSubscriptionCourseMutation) {\n        var updateOpt = function updateOpt(proxy, result2) {\n          // @ts-ignore\n          var data = proxy.readQuery({\n            query: listSubscriptionCoursesWithPagination,\n            variables: listSubscriptionCoursesVariable\n          });\n          var data2 = deleteFilterFun(data, result2);\n          proxy.writeQuery({\n            data: data2,\n            query: listSubscriptionCoursesWithPagination,\n            variables: listSubscriptionCoursesVariable\n          });\n        };\n\n        _Object$assign(opts, {\n          update: updateOpt\n        });\n      }\n\n      return _this.client.mutate(opts).then(function () {\n        _this.renderMessage(mutation, true);\n      }).catch(function (error) {\n        if (parseErrorCode(error) === 'NoOnlineSeries') {\n          _Modal.warning({\n            icon: React.createElement(_Icon, {\n              type: \"exclamation-circle\",\n              style: {\n                color: 'orange'\n              },\n              theme: \"filled\"\n            }),\n            content: '此课程内未找到生效中状态的课程周期，暂时无法上线此课程。',\n            okText: '我知道了',\n            title: '无法上线此课程'\n          });\n\n          return;\n        }\n\n        if (handleConfirmOtherError(error)) {\n          _this.renderMessage(mutation, false);\n        }\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"handleQueryMore\",\n    /*#__PURE__*/\n    _asyncToGenerator(\n    /*#__PURE__*/\n    _regeneratorRuntime.mark(function _callee() {\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              if (!(_this.state.pageInfo.hasNextPage && !_this.state.loading)) {\n                _context.next = 5;\n                break;\n              }\n\n              _this.setState({\n                loading: true\n              });\n\n              _context.next = 4;\n              return _this.fetchMore({\n                updateQuery: function updateQuery(prev, _ref2) {\n                  var fetchMoreResult = _ref2.fetchMoreResult;\n\n                  if (!fetchMoreResult) {\n                    return prev;\n                  }\n\n                  var prevData = prev.listSubscriptionCoursesWithPagination.edges;\n                  var fetchResult = fetchMoreResult.listSubscriptionCoursesWithPagination.edges;\n                  fetchMoreResult.listSubscriptionCoursesWithPagination.edges = [].concat(_toConsumableArray(prevData), _toConsumableArray(fetchResult));\n                  return fetchMoreResult;\n                },\n                variables: {\n                  input: {\n                    after: _this.state.pageInfo.endCursor,\n                    first: getDataNumber,\n                    orderBy: _this.state.orderBy,\n                    where: {\n                      courseCategory: {\n                        id: _this.state.idFilter\n                      },\n                      status: {\n                        key_not: 'REMOVED'\n                      }\n                    }\n                  }\n                }\n              }).then(function (result) {\n                if (result.data) {\n                  _this.setListData('getMore', result.data);\n\n                  _this.setState({\n                    loading: false\n                  });\n                }\n              }).catch(function () {\n                _message.error('加载失败');\n              });\n\n            case 4:\n              return _context.abrupt(\"return\");\n\n            case 5:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    })));\n\n    _defineProperty(_assertThisInitialized(_this), \"renderModal\", function (row, showHoverData) {\n      var variable = {\n        input: {\n          id: row.id\n        }\n      };\n      var props = {\n        cancelText: '取消',\n        centered: true,\n        icon: showHoverData === '移除' ? React.createElement(_Icon, {\n          type: \"question-circle\",\n          theme: \"filled\"\n        }) : React.createElement(_Icon, {\n          type: \"exclamation-circle\",\n          style: {\n            color: 'orange'\n          },\n          theme: \"filled\"\n        }),\n        okText: \"\\u786E\\u8BA4\".concat(showHoverData),\n        okType: showHoverData === '移除' ? 'danger' : 'primary',\n        title: \"\\u786E\\u8BA4\\u8981\".concat(showHoverData, \"\\u6B64\\u8BA2\\u9605\\u8BFE\\u7A0B\\u5417\\uFF1F\")\n      };\n\n      if (showHoverData === '上线') {\n        props.content = '';\n        props.onOk = _this.handleMutation.bind(_assertThisInitialized(_this), variable, enableSubscriptionCourseMutation);\n      } else if (showHoverData === '下线') {\n        props.content = React.createElement(\"div\", {\n          style: {\n            fontSize: '13px'\n          }\n        }, React.createElement(\"p\", null, \"\\u4E0B\\u7EBF\\u6B64\\u8BFE\\u7A0B\\u540E\\uFF1A\"), React.createElement(\"p\", null, \"1\\u3001\\u672A\\u8BA2\\u9605\\u7684\\u7528\\u6237\\u5C06\\u65E0\\u6CD5\\u770B\\u5230\\u6B64\\u8BFE\\u7A0B\\uFF08\\u4F8B\\uFF0C\\u65E0\\u6CD5\\u518D\\u88AB\\u8BA2\\u9605\\uFF09\\uFF1B\"), React.createElement(\"p\", null, \"2\\u3001\\u5DF2\\u8BA2\\u9605\\u7684\\u7528\\u6237\\u5C06\\u80FD\\u7EE7\\u7EED\\u8BBF\\u95EE\\u76F8\\u5173\\u8BFE\\u7A0B\\u6570\\u636E\\uFF1B\"), React.createElement(\"p\", null, \"3\\u3001MIS \\u7CFB\\u7EDF\\u5185\\u53EF\\u4EE5\\u88AB\\u770B\\u5230\\uFF0C\\u4F46\\u65E0\\u6CD5\\u88AB\\u5E94\\u7528\\u5230\\u4E1A\\u52A1\\u4E2D\\uFF1B\"), React.createElement(\"p\", null, \"3\\u3001MIS \\u7CFB\\u7EDF\\u5185\\u53EF\\u4EE5\\u88AB\\u770B\\u5230\\uFF0C\\u4F46\\u65E0\\u6CD5\\u88AB\\u5E94\\u7528\\u5230\\u4E1A\\u52A1\\u4E2D\\uFF1B\"), React.createElement(\"p\", null, \"4\\u3001\\u4E0B\\u7EBF\\u540E\\u7684\\u8BFE\\u7A0B\\u53EF\\u4EE5\\u91CD\\u65B0\\u4E0A\\u7EBF\\u3002\"));\n        props.onOk = _this.handleMutation.bind(_assertThisInitialized(_this), variable, disableSubscriptionCourseMutation);\n      } else if (showHoverData === '移除') {\n        props.content = React.createElement(\"div\", {\n          style: {\n            fontSize: '13px'\n          }\n        }, React.createElement(\"p\", null, \"\\u79FB\\u9664\\u6B64\\u8BFE\\u7A0B\\u540E\\uFF1A\"), React.createElement(\"p\", null, \"1\\u3001\\u672A\\u8BA2\\u9605\\u7684\\u7528\\u6237\\u5C06\\u65E0\\u6CD5\\u770B\\u5230\\u6B64\\u8BFE\\u7A0B\\uFF08\\u4F8B\\uFF0C\\u65E0\\u6CD5\\u518D\\u88AB\\u8D2D\\u4E70\\uFF09\\uFF1B\"), React.createElement(\"p\", null, \"2\\u3001\\u5DF2\\u8BA2\\u9605\\u7684\\u7528\\u6237\\u5C06\\u80FD\\u7EE7\\u7EED\\u8BBF\\u95EE\\u76F8\\u5173\\u8BFE\\u7A0B\\u6570\\u636E\\uFF1B\"), React.createElement(\"p\", null, \"3\\u3001MIS \\u7CFB\\u7EDF\\u5185\\u7528\\u6237\\u65E0\\u6CD5\\u67E5\\u770B\\u5230\\u8BE5\\u8BFE\\u7A0B\\u3002\"));\n        props.onOk = _this.handleMutation.bind(_assertThisInitialized(_this), variable, removeSubscriptionCourseMutation);\n      }\n\n      _Modal.confirm(props);\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"switchEdit\", function (data) {\n      var fillData = data ? {\n        id: data.id,\n        name: data.name,\n        industryId: data.industryId,\n        remark: data.remark,\n        courseCatName: data.category\n      } : {};\n\n      _this.props.setCurrentSub(fillData);\n\n      _this.props.switchPage('edit');\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"renderMenu\", function (showHoverData, record) {\n      var toDetail = function toDetail() {\n        Router.push(\"/subscription-course-detail/\".concat(record.id));\n      };\n\n      return showHoverData.map(function (item, index) {\n        if (item === '查看详情') {\n          return React.createElement(_Menu.Item, {\n            onClick: toDetail\n          }, React.createElement(\"span\", null, \"\\u67E5\\u770B\\u8BE6\\u60C5\"));\n        }\n\n        if (item === '编辑') {\n          return React.createElement(_Menu.Item, {\n            onClick: _this.switchEdit.bind(_assertThisInitialized(_this), record)\n          }, React.createElement(\"span\", null, \"\\u7F16\\u8F91\"));\n        }\n\n        if (item === '上线' || item === '下线') {\n          return React.createElement(_Menu.Item, {\n            key: index,\n            onClick: _this.renderModal.bind(_assertThisInitialized(_this), record, item)\n          }, React.createElement(\"a\", null, item));\n        }\n\n        if (item === '移除') {\n          return React.createElement(_Menu.Item, {\n            key: index,\n            onClick: _this.renderModal.bind(_assertThisInitialized(_this), record, item)\n          }, React.createElement(\"a\", {\n            style: {\n              color: 'red'\n            }\n          }, item));\n        }\n\n        return null;\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"renderFooter\", function () {\n      return _this.state.pageInfo.hasNextPage && React.createElement(TableFooter, {\n        isLoading: _this.state.loading,\n        onClickLink: _this.handleQueryMore\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"setListData\", function (type, data) {\n      var id = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : undefined;\n      var order = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : 'createdAt_DESC';\n      var listData = [];\n\n      if (!data.listSubscriptionCoursesWithPagination) {\n        _this.setState({\n          pageInfo: data.listSubscriptionCoursesWithPagination.pageInfo\n        });\n\n        return null;\n      }\n\n      var dataArr = data.listSubscriptionCoursesWithPagination.edges;\n\n      if (dataArr.length) {\n        dataArr.map(function (item) {\n          listData.push({\n            category: _this.getCourseCategoryNameString(item.node.courseCategory),\n            createdAt: formatToAsia(item.node.createdAt, 'YYYY/MM/DD HH:mm'),\n            id: item.node.id,\n            industry: item.node.industry.name,\n            industryId: item.node.industry.id,\n            key: item.node.id,\n            name: item.node.name,\n            remark: item.node.remark,\n            seriesAmount: item.node.subscriptionCourseSeries.filter(function (series) {\n              return !(series.isDeleted || series.status.name === '已移除');\n            }).length,\n            operating: '选择操作',\n            status: item.node.status.name\n          });\n        });\n      }\n\n      if (type === 'modifyState') {\n        _this.setState({\n          orderBy: order,\n          idFilter: id\n        });\n      }\n\n      if (type === 'handleData') {\n        return listData;\n      }\n\n      var pageInfo = data.listSubscriptionCoursesWithPagination.pageInfo;\n\n      _this.setState({\n        pageInfo: pageInfo\n      });\n\n      return listData;\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"setListDataWithFilter\",\n    /*#__PURE__*/\n    function () {\n      var _ref3 = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee2(id) {\n        var order, result;\n        return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                order = id ? 'sort_ASC' : 'createdAt_DESC';\n                listSubscriptionCoursesVariable.input.where.courseCategory.id = id;\n                listSubscriptionCoursesVariable.input.orderBy = order;\n\n                _this.setState({\n                  showTable: false\n                });\n\n                _context2.next = 6;\n                return _this.client.query({\n                  query: listSubscriptionCoursesWithPagination,\n                  variables: listSubscriptionCoursesVariable,\n                  fetchPolicy: 'network-only'\n                });\n\n              case 6:\n                result = _context2.sent;\n\n                _this.setState({\n                  showTable: true\n                });\n\n                _this.setListData('modifyState', result.data, id, order);\n\n              case 9:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2);\n      }));\n\n      return function (_x) {\n        return _ref3.apply(this, arguments);\n      };\n    }());\n\n    _defineProperty(_assertThisInitialized(_this), \"setListDataWithSorter\",\n    /*#__PURE__*/\n    function () {\n      var _ref4 = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee3(antdOrder) {\n        var order, result;\n        return _regeneratorRuntime.wrap(function _callee3$(_context3) {\n          while (1) {\n            switch (_context3.prev = _context3.next) {\n              case 0:\n                order = antdOrder === 'descend' ? 'createdAt_DESC' : !antdOrder && _this.state.idFilter ? 'sort_ASC' : 'createdAt_DESC';\n                listSubscriptionCoursesVariable.input.orderBy = order;\n                _context3.next = 4;\n                return _this.client.query({\n                  query: listSubscriptionCoursesWithPagination,\n                  variables: listSubscriptionCoursesVariable,\n                  fetchPolicy: 'network-only'\n                });\n\n              case 4:\n                result = _context3.sent;\n\n                _this.setListData('modifyState', result.data, _this.state.idFilter, order);\n\n              case 6:\n              case \"end\":\n                return _context3.stop();\n            }\n          }\n        }, _callee3);\n      }));\n\n      return function (_x2) {\n        return _ref4.apply(this, arguments);\n      };\n    }());\n\n    return _this;\n  }\n\n  _createClass(SubscriptionCourseManagementContainer, [{\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {\n      listSubscriptionCoursesVariable.input.where.courseCategory.id = undefined;\n      listSubscriptionCoursesVariable.input.orderBy = 'createdAt_DESC';\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      return React.createElement(ListSubscriptionCoursesQuery, {\n        query: listSubscriptionCoursesWithPagination,\n        variables: listSubscriptionCoursesVariable,\n        onCompleted: this.setListData.bind(this, 'listData'),\n        fetchPolicy: \"network-only\"\n      }, function (listData) {\n        _this2.refetch = listData.refetch;\n\n        if (listData.loading) {\n          return React.createElement(Loading, null);\n        }\n\n        if (listData.error) {\n          return React.createElement(\"p\", null, listData.error.message);\n        }\n\n        _this2.client = listData.client;\n        _this2.fetchMore = listData.fetchMore;\n        return React.createElement(SubscriptionCourseManagementContent, {\n          switchPage: _this2.props.switchPage,\n          listData: _this2.setListData('handleData', listData.data),\n          footer: _this2.renderFooter,\n          menuItem: _this2.renderMenu,\n          filterHandler: _this2.setListDataWithFilter,\n          orderHandler: _this2.setListDataWithSorter,\n          getListItemsHelper: _this2.handleFetchSortList,\n          setListItemsHelper: _this2.handleSortConfirm,\n          showTable: _this2.state.showTable\n        });\n      });\n    }\n  }]);\n\n  return SubscriptionCourseManagementContainer;\n}(React.Component);\n\nexport default SubscriptionCourseManagementContainer;","map":null,"metadata":{},"sourceType":"module"}