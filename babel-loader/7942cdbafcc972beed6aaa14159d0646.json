{"ast":null,"code":"import \"antd/lib/row/style\";\nimport _Row from \"antd/lib/row\";\nimport \"antd/lib/input/style\";\nimport _Input from \"antd/lib/input\";\nimport \"antd/lib/col/style\";\nimport _Col from \"antd/lib/col\";\nimport \"antd/lib/message/style\";\nimport _message from \"antd/lib/message\";\nimport \"antd/lib/button/style\";\nimport _Button from \"antd/lib/button\";\nimport \"antd/lib/icon/style\";\nimport _Icon from \"antd/lib/icon\";\nimport \"antd/lib/modal/style\";\nimport _Modal from \"antd/lib/modal\";\nimport _classCallCheck from \"@babel/runtime-corejs2/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime-corejs2/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime-corejs2/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime-corejs2/helpers/esm/getPrototypeOf\";\nimport _assertThisInitialized from \"@babel/runtime-corejs2/helpers/esm/assertThisInitialized\";\nimport _inherits from \"@babel/runtime-corejs2/helpers/esm/inherits\";\nimport _defineProperty from \"@babel/runtime-corejs2/helpers/esm/defineProperty\";\nimport \"antd/lib/form/style\";\nimport _Form from \"antd/lib/form\";\nimport dynamic from 'next/dynamic';\nimport React from 'react';\nimport CONFIG from '../../../lib/config';\nimport { RenderSpan } from './TutorDetailsComponents';\nvar ReactFilestack = dynamic(function () {\n  return import('filestack-react');\n}, {\n  ssr: false,\n  loadableGenerated: {\n    webpack: function webpack() {\n      return [require.resolveWeak('filestack-react')];\n    },\n    modules: ['filestack-react']\n  }\n});\nvar FormItem = _Form.Item;\nvar basicOptions = {\n  maxFiles: 1,\n  maxSize: 1024 * 1024 * 100 // 暂时限制文件大小为100M\n\n};\n\nvar RegistrationForm =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(RegistrationForm, _React$Component);\n\n  function RegistrationForm() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, RegistrationForm);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(RegistrationForm)).call.apply(_getPrototypeOf2, [this].concat(args)));\n\n    _defineProperty(_assertThisInitialized(_this), \"state\", {\n      loading: false,\n      proofOfWorkFileName: null\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"componentDidMount\", function () {\n      var _this$props = _this.props,\n          linkedin = _this$props.linkedin,\n          proofOfWorkFile = _this$props.proofOfWorkFile;\n      var setFieldsValue = _this.props.form.setFieldsValue;\n      setFieldsValue({\n        linkedin: linkedin,\n        proofOfWorkFile: proofOfWorkFile\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"handleSubmit\", function (e) {\n      _this.setState({\n        loading: true\n      });\n\n      e.preventDefault();\n\n      _this.props.form.validateFieldsAndScroll(function (err, values) {\n        if (!err) {\n          if (!values.proofOfWorkFile && !values.linkedin) {\n            _Modal.error({\n              title: '请至少填写一项'\n            });\n\n            return;\n          }\n\n          var fileData = values.proofOfWorkFile;\n          values.proofOfWorkFilename = fileData ? fileData.name : '';\n          values.proofOfWorkFile = fileData ? fileData.url : '';\n          values.linkedin = values.linkedin ? values.linkedin : '';\n\n          _this.props.mutationUpdateTutor(values).then(function (success) {\n            if (success) {\n              _this.props.changeState('proofOfEmployment', false);\n            }\n\n            _this.setState({\n              loading: false\n            });\n          });\n        } else {\n          _this.setState({\n            loading: false\n          });\n        }\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"handleCancel\", function () {\n      _this.props.changeState('proofOfEmployment', false);\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"onUpload\", function (onPick) {\n      return React.createElement(\"div\", null, _this.props.proofOfWorkFilename || _this.state.proofOfWorkFileName ? React.createElement(RenderSpan, {\n        style: {\n          display: 'inline-block'\n        }\n      }, React.createElement(_Icon, {\n        type: \"paper-clip\"\n      }), _this.state.proofOfWorkFileName || _this.props.proofOfWorkFilename) : React.createElement(\"div\", null), React.createElement(_Button, {\n        style: {\n          marginLeft: '8px'\n        },\n        onClick: onPick.onPick\n      }, React.createElement(_Icon, {\n        type: \"upload\"\n      }), \" \\u4E0A\\u4F20\\u6587\\u4EF6\"));\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"onSuccess\", function (result) {\n      var setFieldsValue = _this.props.form.setFieldsValue;\n\n      _this.setState({\n        proofOfWorkFileName: result.filesUploaded[0].filename\n      });\n\n      setFieldsValue({\n        proofOfWorkFile: {\n          name: result.filesUploaded[0].filename,\n          url: result.filesUploaded[0].url\n        }\n      });\n\n      _message.success('上传文件成功');\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"onError\", function (error) {\n      _message.error('上传失败，请重新操作'); // tslint:disable-next-line:no-console\n\n\n      console.error('error', error);\n    });\n\n    return _this;\n  }\n\n  _createClass(RegistrationForm, [{\n    key: \"render\",\n    value: function render() {\n      var getFieldDecorator = this.props.form.getFieldDecorator;\n      return React.createElement(_Form, {\n        onSubmit: this.handleSubmit,\n        style: {\n          backgroundColor: '#fff',\n          marginTop: 20,\n          padding: 40,\n          width: '100%'\n        }\n      }, React.createElement(\"h3\", null, \"\\u5DE5\\u4F5C\\u8BC1\\u660E (\\u81F3\\u5C11\\u586B\\u5199\\u4E00\\u9879)\"), React.createElement(_Row, null, React.createElement(_Col, {\n        span: 12\n      }, React.createElement(FormItem, {\n        label: \"\\u8BC1\\u660E\\u6750\\u6599\",\n        colon: false\n      }, getFieldDecorator('proofOfWorkFile')(React.createElement(ReactFilestack, {\n        apikey: CONFIG.filestack.apikey,\n        options: basicOptions,\n        onSuccess: this.onSuccess,\n        onError: this.onError,\n        render: this.onUpload\n      })))), React.createElement(_Col, {\n        span: 12\n      }, React.createElement(FormItem, {\n        label: \"LinkedIn\",\n        colon: false\n      }, getFieldDecorator('linkedin')(React.createElement(_Input, {\n        placeholder: \"\\u8BF7\\u8F93\\u5165\"\n      }))))), React.createElement(FormItem, {\n        labelCol: {\n          span: 12\n        }\n      }, React.createElement(_Button, {\n        onClick: this.handleCancel\n      }, \"\\u53D6\\u6D88\"), React.createElement(_Button, {\n        style: {\n          marginLeft: 20\n        },\n        type: \"primary\",\n        htmlType: \"submit\",\n        loading: this.state.loading\n      }, \"\\u4FDD\\u5B58\")));\n    }\n  }]);\n\n  return RegistrationForm;\n}(React.Component);\n\nvar EditProofOfEmployment = _Form.create()(RegistrationForm);\n\nexport default EditProofOfEmployment;","map":null,"metadata":{},"sourceType":"module"}