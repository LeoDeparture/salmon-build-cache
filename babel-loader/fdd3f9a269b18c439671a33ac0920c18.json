{"ast":null,"code":"import _toConsumableArray from \"@babel/runtime-corejs2/helpers/esm/toConsumableArray\";\nimport \"antd/lib/spin/style\";\nimport _Spin from \"antd/lib/spin\";\nimport _regeneratorRuntime from \"@babel/runtime-corejs2/regenerator\";\nimport \"antd/lib/message/style\";\nimport _message from \"antd/lib/message\";\nimport _asyncToGenerator from \"@babel/runtime-corejs2/helpers/esm/asyncToGenerator\";\nimport _objectSpread from \"@babel/runtime-corejs2/helpers/esm/objectSpread\";\nimport _classCallCheck from \"@babel/runtime-corejs2/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime-corejs2/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime-corejs2/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime-corejs2/helpers/esm/getPrototypeOf\";\nimport _assertThisInitialized from \"@babel/runtime-corejs2/helpers/esm/assertThisInitialized\";\nimport _inherits from \"@babel/runtime-corejs2/helpers/esm/inherits\";\nimport _defineProperty from \"@babel/runtime-corejs2/helpers/esm/defineProperty\";\nimport Router from 'next/router';\nimport React from 'react';\nimport styled from 'styled-components';\nimport RootComponent from '../components/RootComponent';\nimport { MutationCreateAgreementView } from '../containers/MutationCreateAgreementView';\nimport { TemplateContext } from './Contexts';\nimport { MutationCreateAgreement } from './MutationCreateAgreement';\nimport GetEnumData, { query } from './QueryGetEnumData';\n\nvar AgreementFormContainer =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(AgreementFormContainer, _React$Component);\n\n  function AgreementFormContainer() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, AgreementFormContainer);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(AgreementFormContainer)).call.apply(_getPrototypeOf2, [this].concat(args)));\n\n    _defineProperty(_assertThisInitialized(_this), \"createAgreementView\", function (variables) {\n      return _this.client.mutate({\n        mutation: MutationCreateAgreementView,\n        variables: {\n          input: _objectSpread({}, variables)\n        }\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"createAgreement\",\n    /*#__PURE__*/\n    function () {\n      var _ref = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee(variables) {\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                _message.loading('正在生成...');\n\n                _this.client.mutate({\n                  mutation: MutationCreateAgreement,\n                  variables: {\n                    input: _objectSpread({}, variables)\n                  }\n                }).then(function (result) {\n                  if (result.data) {\n                    _message.destroy();\n\n                    _message.success('已成功生成服务协议');\n\n                    Router.push('/agreement-management');\n                  }\n                });\n\n              case 2:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee);\n      }));\n\n      return function (_x) {\n        return _ref.apply(this, arguments);\n      };\n    }());\n\n    return _this;\n  }\n\n  _createClass(AgreementFormContainer, [{\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var templateId = Router.query.id;\n\n      if (!query) {\n        return null;\n      }\n\n      return React.createElement(GetEnumData, {\n        query: query,\n        fetchPolicy: \"network-only\"\n      }, function (_ref2) {\n        var loading = _ref2.loading,\n            error = _ref2.error,\n            data = _ref2.data,\n            client = _ref2.client;\n\n        if (loading) {\n          return React.createElement(LoadingWrapper, null, React.createElement(_Spin, {\n            tip: \"Loading...\",\n            size: \"large\"\n          }));\n        }\n\n        if (error) {\n          return null;\n        }\n\n        _this2.client = client;\n        var templateArr = data.listTemplates.filter(function (v) {\n          return v.id === templateId;\n        }); // 判断协议模板\n\n        var templateType;\n\n        if (templateId === data.listTemplates[0].id) {\n          templateType = 'alpha';\n        }\n\n        if (templateId === data.listTemplates[1].id) {\n          templateType = 'elite';\n        }\n\n        var first = data.first,\n            second = data.second,\n            third = data.third;\n        return React.createElement(TemplateContext.Provider, {\n          value: templateArr[0]\n        }, React.createElement(RootComponent, {\n          enumData: data,\n          templateId: templateId,\n          templateType: templateType,\n          agreementCompanies: [].concat(_toConsumableArray(first), _toConsumableArray(second), _toConsumableArray(third)),\n          createAgreement: _this2.createAgreement,\n          createAgreementView: _this2.createAgreementView\n        }));\n      });\n    }\n  }]);\n\n  return AgreementFormContainer;\n}(React.Component);\n\nexport default AgreementFormContainer;\nvar LoadingWrapper = styled.div.withConfig({\n  displayName: \"AgreementFormContainer__LoadingWrapper\",\n  componentId: \"sc-1ct0gis-0\"\n})([\"display:flex;align-items:center;justify-content:center;height:100%;\"]);","map":null,"metadata":{},"sourceType":"module"}