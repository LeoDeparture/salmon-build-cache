{"ast":null,"code":"import _extends from \"@babel/runtime-corejs2/helpers/esm/extends\";\nimport \"antd/lib/select/style\";\nimport _Select from \"antd/lib/select\";\nimport \"antd/lib/radio/style\";\nimport _Radio from \"antd/lib/radio\";\nimport _taggedTemplateLiteral from \"@babel/runtime-corejs2/helpers/esm/taggedTemplateLiteral\";\n\nfunction _templateObject() {\n  var data = _taggedTemplateLiteral([\"\\n  query listZhiwenCompanyDomainEnums(\\n    $input: ListStaticZhiwenCompanyDomainEnumInput!\\n  ) {\\n    companyDomains: listZhiwenCompanyDomainEnums(input: $input) {\\n      id\\n      name\\n    }\\n  }\\n\"]);\n\n  _templateObject = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n\nimport { useQuery } from '@apollo/react-hooks';\nimport gql from 'graphql-tag';\nimport React from 'react';\nimport styled from 'styled-components';\nimport { allEnum } from '../../../../../lib/commonJs';\nvar QueryListCompanyDomainEnums = gql(_templateObject());\n\nvar RequiredDomain = function RequiredDomain(props, _ref) {\n  var onChangeRadio = props.onChangeRadio,\n      disabled = props.disabled,\n      industryId = props.industryId,\n      companyLevelId = props.companyLevelId; // 找到选中的 companyLevel\n\n  var companyLevel = allEnum().listStaticZhiwenCompanyLevelEnum.find(function (v) {\n    return v.id === companyLevelId;\n  });\n\n  var _useQuery = useQuery(QueryListCompanyDomainEnums, {\n    variables: {\n      input: {\n        industryId: industryId,\n        companyLevelId: companyLevelId\n      }\n    }\n  }),\n      data = _useQuery.data,\n      loading = _useQuery.loading,\n      error = _useQuery.error;\n\n  if (loading || error) {\n    return null;\n  }\n\n  return React.createElement(MainWrapper, null, data.companyDomains.length ? React.createElement(React.Fragment, null, React.createElement(_Radio.Group, {\n    style: radioWrapperStyle,\n    onChange: onChangeRadio,\n    defaultValue: !disabled\n  }, React.createElement(_Radio, {\n    value: false\n  }, \"\\u65E0\"), React.createElement(_Radio, {\n    value: true\n  }, \"\\u6709\")), React.createElement(_Select, _extends({}, props, {\n    mode: \"multiple\",\n    placeholder: \"\\u53EF\\u591A\\u9009\",\n    style: tagWrapper\n  }), data.companyDomains.map(function (v) {\n    return React.createElement(_Select.Option, {\n      key: v.id,\n      value: v.id\n    }, v.name);\n  }))) : React.createElement(EmptyText, null, \"\\u6CA1\\u6709\\u5728\\u76EE\\u6807\\u516C\\u53F8\\u7B49\\u7EA7\", companyLevel ? companyLevel.name : '', \"\\u4E0B\\u627E\\u5230\\u4E1A\\u52A1\\u9886\\u57DF\\u6216\\u884C\\u4E1A\"));\n};\n\nexport default React.forwardRef(RequiredDomain);\nvar MainWrapper = styled.div.withConfig({\n  displayName: \"RequiredDomain__MainWrapper\",\n  componentId: \"sc-12qdhg5-0\"\n})([\"display:flex;\"]);\nvar radioWrapperStyle = {\n  display: 'flex',\n  alignItems: 'center'\n};\nvar tagWrapper = {\n  display: 'block',\n  flex: 1,\n  paddingTop: 5,\n  width: 1\n};\nvar EmptyText = styled.div.withConfig({\n  displayName: \"RequiredDomain__EmptyText\",\n  componentId: \"sc-12qdhg5-1\"\n})([\"font-size:14px;color:#ff5230;\"]);","map":null,"metadata":{},"sourceType":"module"}