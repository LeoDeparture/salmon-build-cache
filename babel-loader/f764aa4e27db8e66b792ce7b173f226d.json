{"ast":null,"code":"import \"antd/lib/icon/style\";\nimport _Icon from \"antd/lib/icon\";\nimport \"antd/lib/button/style\";\nimport _Button from \"antd/lib/button\";\nimport \"antd/lib/modal/style\";\nimport _Modal from \"antd/lib/modal\";\nimport _classCallCheck from \"@babel/runtime-corejs2/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime-corejs2/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime-corejs2/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime-corejs2/helpers/esm/getPrototypeOf\";\nimport _assertThisInitialized from \"@babel/runtime-corejs2/helpers/esm/assertThisInitialized\";\nimport _inherits from \"@babel/runtime-corejs2/helpers/esm/inherits\";\nimport _defineProperty from \"@babel/runtime-corejs2/helpers/esm/defineProperty\";\nimport { format } from 'date-fns';\nimport Router from 'next/router';\nimport React from 'react';\nimport styled from 'styled-components';\nimport LayoutQueryView, { QueryMisViewer } from '../../../../common/queries/QueryMisViewer';\nimport { Buttons, IconStyle, Info, InfoBody, InfoHeader, Item, ItemContent, ItemTitle, ToggleWrapper } from '../../../pathwayTemplate/components/templateDetail/TemplateDetail';\n\nvar PathwayDetail =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(PathwayDetail, _React$Component);\n\n  function PathwayDetail() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, PathwayDetail);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(PathwayDetail)).call.apply(_getPrototypeOf2, [this].concat(args)));\n\n    _defineProperty(_assertThisInitialized(_this), \"state\", {\n      infoCollapse: true\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"toggleInfo\", function () {\n      var infoCollapse = _this.state.infoCollapse;\n\n      _this.setState({\n        infoCollapse: !infoCollapse\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"editPlan\", function () {\n      var _this$props$pathwayIn = _this.props.pathwayInfo,\n          id = _this$props$pathwayIn.id,\n          creator = _this$props$pathwayIn.creator;\n      var userId = JSON.parse(localStorage.getItem('misViewer')).person.id;\n      var personId = creator.account.person.id;\n\n      if (personId !== userId) {\n        _Modal.warning({\n          title: '无法编辑',\n          content: '你不是该计划的规划师，无法编辑该计划。',\n          okText: '我知道了'\n        });\n\n        return;\n      }\n\n      Router.push(\"/pathway-detail/\".concat(id));\n    });\n\n    return _this;\n  }\n\n  _createClass(PathwayDetail, [{\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var infoCollapse = this.state.infoCollapse;\n      var _this$props$pathwayIn2 = this.props.pathwayInfo,\n          no = _this$props$pathwayIn2.no,\n          startAt = _this$props$pathwayIn2.startAt,\n          endAt = _this$props$pathwayIn2.endAt,\n          purpose = _this$props$pathwayIn2.purpose,\n          introduction = _this$props$pathwayIn2.introduction,\n          highlights = _this$props$pathwayIn2.highlights,\n          remarks = _this$props$pathwayIn2.remarks;\n      var durationText = '--';\n\n      if (startAt && endAt) {\n        var timeFormat = 'YYYY/MM/DD';\n        durationText = \"\".concat(format(startAt, timeFormat), \" ~ \").concat(format(endAt, timeFormat));\n      }\n\n      return React.createElement(BodyWrap, null, React.createElement(Info, null, React.createElement(InfoHeader, null, React.createElement(Title, null, purpose), React.createElement(LayoutQueryView, {\n        query: QueryMisViewer\n      }, function (_ref) {\n        var data = _ref.data,\n            error = _ref.error,\n            loading = _ref.loading;\n\n        if (loading) {\n          return null;\n        }\n\n        if (error) {\n          return null;\n        }\n\n        if (data.misViewer) {\n          var filteredPermissions = data.misViewer.permissions.filter(function (v) {\n            return v.name === '学习计划';\n          });\n\n          if (filteredPermissions.length) {\n            return React.createElement(Buttons, null, React.createElement(_Button, {\n              onClick: _this2.editPlan,\n              style: {\n                marginLeft: '12px'\n              }\n            }, \"\\u7F16\\u8F91\"));\n          }\n        }\n\n        return null;\n      })), React.createElement(InfoBody, null, React.createElement(Item, null, React.createElement(ItemTitle, null, \"\\u8BA1\\u5212\\u5468\\u671F\\uFF1A\"), React.createElement(ItemContent, null, durationText)), React.createElement(Item, null, React.createElement(ItemTitle, null, \"\\u76EE\\u6807\\u7B80\\u4ECB\\uFF1A\"), React.createElement(ItemContent, null, introduction)), !infoCollapse && React.createElement(React.Fragment, null, React.createElement(Item, null, React.createElement(ItemTitle, null, \"\\u8BA1\\u5212\\u4EAE\\u70B9\\uFF1A\"), React.createElement(ItemContent, null, highlights)), React.createElement(Item, null, React.createElement(ItemTitle, null, \"\\u5BF9\\u5185\\u5907\\u6CE8\\uFF1A\"), React.createElement(ItemContent, null, remarks)), React.createElement(Item, null, React.createElement(ItemTitle, null, \"\\u8BA1\\u5212ID\\uFF1A\"), React.createElement(ItemContent, null, no)))), React.createElement(ToggleWrapper, null, React.createElement(\"a\", {\n        onClick: this.toggleInfo\n      }, infoCollapse ? '展开' : '收起', \"\\u66F4\\u591A\\u4FE1\\u606F\", React.createElement(_Icon, {\n        type: infoCollapse ? 'down' : 'up',\n        style: IconStyle\n      })))));\n    }\n  }]);\n\n  return PathwayDetail;\n}(React.Component);\n\nexport default PathwayDetail;\nvar Title = styled.div.withConfig({\n  displayName: \"PathwayDetail__Title\",\n  componentId: \"ykrjw6-0\"\n})([\"flex:1;overflow:hidden;font-size:18px;font-weight:500;line-height:28px;color:rgba(74,74,74,0.85);text-overflow:ellipsis;white-space:nowrap;\"]);\nvar BodyWrap = styled.div.withConfig({\n  displayName: \"PathwayDetail__BodyWrap\",\n  componentId: \"ykrjw6-1\"\n})([\"background-color:#fff;\"]);","map":null,"metadata":{},"sourceType":"module"}