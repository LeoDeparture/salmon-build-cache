{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime-corejs2/regenerator\";\nimport \"antd/lib/message/style\";\nimport _message from \"antd/lib/message\";\nimport _asyncToGenerator from \"@babel/runtime-corejs2/helpers/esm/asyncToGenerator\";\nimport _classCallCheck from \"@babel/runtime-corejs2/helpers/esm/classCallCheck\";\nimport _possibleConstructorReturn from \"@babel/runtime-corejs2/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime-corejs2/helpers/esm/getPrototypeOf\";\nimport _assertThisInitialized from \"@babel/runtime-corejs2/helpers/esm/assertThisInitialized\";\nimport _inherits from \"@babel/runtime-corejs2/helpers/esm/inherits\";\nimport _defineProperty from \"@babel/runtime-corejs2/helpers/esm/defineProperty\";\nimport React from 'react';\nimport Loading from '../../../../components/Loading';\nimport { FlexContentCenter } from '../../../../lib/commonCss';\nimport { utc2Asia, yyyymmdd } from '../../../../lib/date';\nimport { handleConfirmOtherError } from '../../../../lib/handleError';\nimport { formatDict } from '../../subscriptionConstants';\nimport { SectionTable } from '../components/SectionTable';\nimport { listSections, ListSectionsQuery } from './ListSectionsQuery';\nimport { removeSectionMutation } from './StatusMutation';\n\nvar ListSectionsContainer =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(ListSectionsContainer, _React$Component);\n\n  function ListSectionsContainer() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, ListSectionsContainer);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(ListSectionsContainer)).call.apply(_getPrototypeOf2, [this].concat(args)));\n\n    _defineProperty(_assertThisInitialized(_this), \"state\", {\n      loading: false,\n      refresh: false\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"removeSectionMutation\",\n    /*#__PURE__*/\n    function () {\n      var _ref = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee(id) {\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                _context.next = 2;\n                return _this.client.mutate({\n                  mutation: removeSectionMutation,\n                  update: function update(cache, _) {\n                    var listCache = cache.readQuery({\n                      query: listSections,\n                      variables: {\n                        input: {\n                          where: {\n                            chapter: {\n                              id: _this.props.chapterId\n                            },\n                            isDeleted: false\n                          }\n                        }\n                      }\n                    });\n                    var newData = listCache.listSections.filter(function (record) {\n                      return record.id !== id;\n                    });\n                    listCache.listSections = newData;\n                    cache.writeQuery({\n                      data: {\n                        listSections: listCache.listSections\n                      },\n                      query: listSections,\n                      variables: {\n                        input: {\n                          where: {\n                            chapter: {\n                              id: _this.props.chapterId\n                            },\n                            isDeleted: false\n                          }\n                        }\n                      }\n                    });\n                  },\n                  variables: {\n                    input: {\n                      id: id\n                    }\n                  }\n                }).then(function (_) {\n                  _this.setState({\n                    refresh: true\n                  });\n\n                  _message.success('已成功删除此小节');\n                }).catch(function (err) {\n                  if (handleConfirmOtherError(err)) {\n                    _message.error('操作失败');\n                  }\n                });\n\n              case 2:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee);\n      }));\n\n      return function (_x) {\n        return _ref.apply(this, arguments);\n      };\n    }());\n\n    _defineProperty(_assertThisInitialized(_this), \"flatDataAndStoreCursor\", function (data) {\n      var coreData = data.listSections;\n      return coreData.map(function (d) {\n        var row = d;\n        var fileFormats = row.mediaFileDescription.map(function (mfd) {\n          return formatDict[mfd.file.format];\n        });\n        var tutors = row.tutorDescriptions.map(function (td) {\n          return td.tutor.nickname;\n        });\n        return {\n          id: row.id,\n          key: row.id,\n          name: row.name,\n          format: fileFormats,\n          tutors: tutors.length > 1 ? tutors.reduce(function (acu, cur) {\n            return \"\".concat(acu, \"\\u3001\").concat(cur);\n          }) : tutors.length > 0 ? tutors[0] : '- -',\n          createdAt: yyyymmdd(utc2Asia(row.createdAt), 'YYYY/MM/DD HH:mm'),\n          operation: '选择操作',\n          description: row.description,\n          mediaFileDescription: row.mediaFileDescription,\n          attachment: row.attachment,\n          tutorDescriptions: row.tutorDescriptions\n        };\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"countRecordAmount\", function (data) {\n      return data.listSections.length;\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"render\", function () {\n      return React.createElement(ListSectionsQuery, {\n        query: listSections,\n        variables: {\n          input: {\n            where: {\n              chapter: {\n                id: _this.props.chapterId\n              },\n              isDeleted: false\n            }\n          }\n        },\n        fetchPolicy: \"network-only\"\n      }, function (_ref2) {\n        var data = _ref2.data,\n            loading = _ref2.loading,\n            error = _ref2.error,\n            client = _ref2.client;\n        _this.client = client;\n\n        if (loading) {\n          return React.createElement(FlexContentCenter, null, React.createElement(Loading, null));\n        }\n\n        if (error) {\n          return React.createElement(FlexContentCenter, null, error.message);\n        }\n\n        return React.createElement(SectionTable, {\n          chapterId: _this.props.chapterId,\n          sectionsAmount: _this.countRecordAmount(data),\n          removeMutation: _this.removeSectionMutation,\n          listSectionData: _this.flatDataAndStoreCursor(data),\n          switchPage: _this.props.switchPage,\n          setCurrentSection: _this.props.setCurrentSection\n        });\n      });\n    });\n\n    return _this;\n  }\n\n  return ListSectionsContainer;\n}(React.Component);\n\nexport { ListSectionsContainer };","map":null,"metadata":{},"sourceType":"module"}