{"ast":null,"code":"import \"antd/lib/spin/style\";\nimport _Spin from \"antd/lib/spin\";\nimport _classCallCheck from \"@babel/runtime-corejs2/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime-corejs2/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime-corejs2/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime-corejs2/helpers/esm/getPrototypeOf\";\nimport _inherits from \"@babel/runtime-corejs2/helpers/esm/inherits\";\nimport React from 'react';\nimport styled from 'styled-components';\nimport TemplateList from '../components/TemplateList';\nimport ListTemplates, { query } from './QueryListTemplates';\n\nvar TemplateContainer =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(TemplateContainer, _React$Component);\n\n  function TemplateContainer() {\n    _classCallCheck(this, TemplateContainer);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(TemplateContainer).apply(this, arguments));\n  }\n\n  _createClass(TemplateContainer, [{\n    key: \"render\",\n    value: function render() {\n      return React.createElement(ListTemplates, {\n        query: query,\n        fetchPolicy: \"network-only\"\n      }, function (_ref) {\n        var loading = _ref.loading,\n            error = _ref.error,\n            data = _ref.data;\n\n        if (loading) {\n          return React.createElement(LoadingWrapper, null, React.createElement(_Spin, {\n            size: \"large\"\n          }));\n        }\n\n        if (error) {\n          return null;\n        }\n\n        return React.createElement(TemplateList, {\n          data: data\n        });\n      });\n    }\n  }]);\n\n  return TemplateContainer;\n}(React.Component);\n\nexport default TemplateContainer;\nvar LoadingWrapper = styled.div.withConfig({\n  displayName: \"TemplateContainer__LoadingWrapper\",\n  componentId: \"sc-1b28d6d-0\"\n})([\"display:flex;align-items:center;justify-content:center;min-height:200px;\"]);","map":null,"metadata":{},"sourceType":"module"}